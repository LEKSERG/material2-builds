{"version":3,"file":"sidenav__testing.js","sources":["../../../../../../../src/material/sidenav/testing/drawer-harness.ts","../../../../../../../src/material/sidenav/testing/sidenav-harness.ts","../../../../../../../src/material/sidenav/testing/public-api.ts","../../../../../../../src/material/sidenav/testing/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ComponentHarness, HarnessPredicate} from '@angular/cdk/testing';\nimport {DrawerHarnessFilters} from './drawer-harness-filters';\n\n/**\n * Harness for interacting with a standard mat-drawer in tests.\n * @dynamic\n */\nexport class MatDrawerHarness extends ComponentHarness {\n  static hostSelector = '.mat-drawer';\n\n  /**\n   * Gets a `HarnessPredicate` that can be used to search for a drawer with\n   * specific attributes.\n   * @param options Options for narrowing the search.\n   * @return `HarnessPredicate` configured with the given options.\n   */\n  static with(options: DrawerHarnessFilters = {}): HarnessPredicate<MatDrawerHarness> {\n    return new HarnessPredicate(MatDrawerHarness, options);\n  }\n\n  /** Gets whether the drawer is open. */\n  async isOpen(): Promise<boolean> {\n    return (await this.host()).hasClass('mat-drawer-opened');\n  }\n\n  /** Gets the position of the drawer inside its container. */\n  async getPosition(): Promise<'start'|'end'> {\n    const host = await this.host();\n    return (await host.hasClass('mat-drawer-end')) ? 'end' : 'start';\n  }\n\n  /** Gets the mode that the drawer is in. */\n  async getMode(): Promise<'over'|'push'|'side'> {\n    const host = await this.host();\n\n    if (await host.hasClass('mat-drawer-push')) {\n      return 'push';\n    }\n\n    if (await host.hasClass('mat-drawer-side')) {\n      return 'side';\n    }\n\n    return 'over';\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {HarnessPredicate} from '@angular/cdk/testing';\nimport {MatDrawerHarness} from './drawer-harness';\nimport {DrawerHarnessFilters} from './drawer-harness-filters';\n\n/**\n * Harness for interacting with a standard mat-sidenav in tests.\n * @dynamic\n */\nexport class MatSidenavHarness extends MatDrawerHarness {\n  static hostSelector = '.mat-sidenav';\n\n  /**\n   * Gets a `HarnessPredicate` that can be used to search for a sidenav with\n   * specific attributes.\n   * @param options Options for narrowing the search.\n   * @return `HarnessPredicate` configured with the given options.\n   */\n  static with(options: DrawerHarnessFilters = {}): HarnessPredicate<MatDrawerHarness> {\n    return new HarnessPredicate(MatDrawerHarness, options);\n  }\n\n  /** Gets whether the sidenav is fixed in the viewport. */\n  async isFixedInViewport(): Promise<boolean> {\n    return (await this.host()).hasClass('mat-sidenav-fixed');\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './drawer-harness';\nexport * from './drawer-harness-filters';\nexport * from './sidenav-harness';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './public-api';\n"],"names":["tslib_1.__extends"],"mappings":";;;AAAA;;;;;;;AAWA;;;;AAIA;IAAsCA,oCAAgB;IAAtD;;KAsCC;;;;;;;IA7BQ,qBAAI,GAAX,UAAY,OAAkC;QAAlC,wBAAA,EAAA,YAAkC;QAC5C,OAAO,IAAI,gBAAgB,CAAC,gBAAgB,EAAE,OAAO,CAAC,CAAC;KACxD;;IAGK,iCAAM,GAAZ;;;;4BACU,qBAAM,IAAI,CAAC,IAAI,EAAE,EAAA;4BAAzB,sBAAO,CAAC,SAAiB,EAAE,QAAQ,CAAC,mBAAmB,CAAC,EAAC;;;;KAC1D;;IAGK,sCAAW,GAAjB;;;;;4BACe,qBAAM,IAAI,CAAC,IAAI,EAAE,EAAA;;wBAAxB,IAAI,GAAG,SAAiB;wBACtB,qBAAM,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,EAAA;4BAA7C,sBAAO,CAAC,SAAqC,IAAI,KAAK,GAAG,OAAO,EAAC;;;;KAClE;;IAGK,kCAAO,GAAb;;;;;4BACe,qBAAM,IAAI,CAAC,IAAI,EAAE,EAAA;;wBAAxB,IAAI,GAAG,SAAiB;wBAE1B,qBAAM,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,EAAA;;wBAA1C,IAAI,SAAsC,EAAE;4BAC1C,sBAAO,MAAM,EAAC;yBACf;wBAEG,qBAAM,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,EAAA;;wBAA1C,IAAI,SAAsC,EAAE;4BAC1C,sBAAO,MAAM,EAAC;yBACf;wBAED,sBAAO,MAAM,EAAC;;;;KACf;IApCM,6BAAY,GAAG,aAAa,CAAC;IAqCtC,uBAAC;CAAA,CAtCqC,gBAAgB;;ACftD;;;;;;;AAYA;;;;AAIA;IAAuCA,qCAAgB;IAAvD;;KAiBC;;;;;;;IARQ,sBAAI,GAAX,UAAY,OAAkC;QAAlC,wBAAA,EAAA,YAAkC;QAC5C,OAAO,IAAI,gBAAgB,CAAC,gBAAgB,EAAE,OAAO,CAAC,CAAC;KACxD;;IAGK,6CAAiB,GAAvB;;;;4BACU,qBAAM,IAAI,CAAC,IAAI,EAAE,EAAA;4BAAzB,sBAAO,CAAC,SAAiB,EAAE,QAAQ,CAAC,mBAAmB,CAAC,EAAC;;;;KAC1D;IAfM,8BAAY,GAAG,cAAc,CAAC;IAgBvC,wBAAC;CAAA,CAjBsC,gBAAgB;;AChBvD;;;;;;GAMG;;ACNH;;;;;;GAMG;;;;"}