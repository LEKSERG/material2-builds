{"version":3,"file":"menu__testing.js","sources":["../../../../../../../src/material/menu/testing/menu-harness.ts","../../../../../../../src/material/menu/testing/public-api.ts","../../../../../../../src/material/menu/testing/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ComponentHarness, HarnessPredicate, TestElement, TestKey} from '@angular/cdk/testing';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {MenuHarnessFilters, MenuItemHarnessFilters} from './menu-harness-filters';\n\n/** Harness for interacting with a standard mat-menu in tests. */\nexport class MatMenuHarness extends ComponentHarness {\n  static hostSelector = '.mat-menu-trigger';\n\n  private _documentRootLocator = this.documentRootLocatorFactory();\n\n  // TODO: potentially extend MatButtonHarness\n\n  /**\n   * Gets a `HarnessPredicate` that can be used to search for a menu with specific attributes.\n   * @param options Options for narrowing the search:\n   *   - `selector` finds a menu whose host element matches the given selector.\n   *   - `label` finds a menu with specific label text.\n   * @return a `HarnessPredicate` configured with the given options.\n   */\n  static with(options: MenuHarnessFilters = {}): HarnessPredicate<MatMenuHarness> {\n    return new HarnessPredicate(MatMenuHarness, options)\n        .addOption('triggerText', options.triggerText,\n            (harness, text) => HarnessPredicate.stringMatches(harness.getTriggerText(), text));\n  }\n\n  /** Gets a boolean promise indicating if the menu is disabled. */\n  async isDisabled(): Promise<boolean> {\n    const disabled = (await this.host()).getAttribute('disabled');\n    return coerceBooleanProperty(await disabled);\n  }\n\n  /** Whether the menu is open. */\n  async isOpen(): Promise<boolean> {\n    return !!(await this._getMenuPanel());\n  }\n\n  async getTriggerText(): Promise<string> {\n    return (await this.host()).text();\n  }\n\n  /** Focuses the menu and returns a void promise that indicates when the action is complete. */\n  async focus(): Promise<void> {\n    return (await this.host()).focus();\n  }\n\n  /** Blurs the menu and returns a void promise that indicates when the action is complete. */\n  async blur(): Promise<void> {\n    return (await this.host()).blur();\n  }\n\n  async open(): Promise<void> {\n    if (!await this.isOpen()) {\n      return (await this.host()).click();\n    }\n  }\n\n  async close(): Promise<void> {\n    const panel = await this._getMenuPanel();\n    if (panel) {\n      return panel.sendKeys(TestKey.ESCAPE);\n    }\n  }\n\n  async getItems(filters: Omit<MenuItemHarnessFilters, 'ancestor'> = {}):\n      Promise<MatMenuItemHarness[]> {\n    const panelId = await this._getPanelId();\n    if (panelId) {\n      return this._documentRootLocator.locatorForAll(\n          MatMenuItemHarness.with({...filters, ancestor: `#${panelId}`}))();\n    }\n    return [];\n  }\n\n  async clickItem(filter: Omit<MenuItemHarnessFilters, 'ancestor'>,\n                  ...filters: Omit<MenuItemHarnessFilters, 'ancestor'>[]): Promise<void> {\n    await this.open();\n    const items = await this.getItems(filter);\n    if (!items.length) {\n      throw Error(`Could not find item matching ${JSON.stringify(filter)}`);\n    }\n\n    if (!filters.length) {\n      return await items[0].click();\n    }\n\n    const menu = await items[0].getSubmenu();\n    if (!menu) {\n      throw Error(`Item matching ${JSON.stringify(filter)} does not have a submenu`);\n    }\n    return menu.clickItem(...filters as [Omit<MenuItemHarnessFilters, 'ancestor'>]);\n  }\n\n  private async _getMenuPanel(): Promise<TestElement | null> {\n    const panelId = await this._getPanelId();\n    return panelId ? this._documentRootLocator.locatorForOptional(`#${panelId}`)() : null;\n  }\n\n  private async _getPanelId(): Promise<string | null> {\n    const panelId = await (await this.host()).getAttribute('aria-controls');\n    return panelId || null;\n  }\n}\n\n\n/** Harness for interacting with a standard mat-menu-item in tests. */\nexport class MatMenuItemHarness extends ComponentHarness {\n  static hostSelector = '.mat-menu-item';\n\n  /**\n   * Gets a `HarnessPredicate` that can be used to search for a menu with specific attributes.\n   * @param options Options for narrowing the search:\n   *   - `selector` finds a menu item whose host element matches the given selector.\n   *   - `label` finds a menu item with specific label text.\n   * @return a `HarnessPredicate` configured with the given options.\n   */\n  static with(options: MenuItemHarnessFilters = {}): HarnessPredicate<MatMenuItemHarness> {\n    return new HarnessPredicate(MatMenuItemHarness, options)\n        .addOption('text', options.text,\n            (harness, text) => HarnessPredicate.stringMatches(harness.getText(), text))\n        .addOption('hasSubmenu', options.hasSubmenu,\n            async (harness, hasSubmenu) => (await harness.hasSubmenu()) === hasSubmenu);\n  }\n\n  /** Gets a boolean promise indicating if the menu is disabled. */\n  async isDisabled(): Promise<boolean> {\n    const disabled = (await this.host()).getAttribute('disabled');\n    return coerceBooleanProperty(await disabled);\n  }\n\n  async getText(): Promise<string> {\n    return (await this.host()).text();\n  }\n\n  /** Focuses the menu and returns a void promise that indicates when the action is complete. */\n  async focus(): Promise<void> {\n    return (await this.host()).focus();\n  }\n\n  /** Blurs the menu and returns a void promise that indicates when the action is complete. */\n  async blur(): Promise<void> {\n    return (await this.host()).blur();\n  }\n\n  /** Clicks the menu item. */\n  async click(): Promise<void> {\n    return (await this.host()).click();\n  }\n\n  /** Whether this item has a submenu. */\n  async hasSubmenu(): Promise<boolean> {\n    return (await this.host()).matchesSelector(MatMenuHarness.hostSelector);\n  }\n\n  /** Gets the submenu associated with this menu item, or null if none. */\n  async getSubmenu(): Promise<MatMenuHarness | null> {\n    if (await this.hasSubmenu()) {\n      return new MatMenuHarness(this.locatorFactory);\n    }\n    return null;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './menu-harness';\nexport * from './menu-harness-filters';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}