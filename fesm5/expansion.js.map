{"version":3,"file":"expansion.js","sources":["../../../../../../src/material/expansion/accordion-base.ts","../../../../../../src/material/expansion/expansion-animations.ts","../../../../../../src/material/expansion/expansion-panel-content.ts","npm_package.esm5/src/material/expansion/expansion-panel.js","npm_package.esm5/src/material/expansion/expansion-panel-header.js","../../../../../../src/material/expansion/accordion.ts","../../../../../../src/material/expansion/expansion-module.ts","../../../../../../src/material/expansion/public-api.ts","../../../../../../src/material/expansion/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from '@angular/core';\nimport {CdkAccordion} from '@angular/cdk/accordion';\n\n/** MatAccordion's display modes. */\nexport type MatAccordionDisplayMode = 'default' | 'flat';\n\n/** MatAccordion's toggle positions. */\nexport type MatAccordionTogglePosition = 'before' | 'after';\n\n/**\n * Base interface for a `MatAccordion`.\n * @docs-private\n */\nexport interface MatAccordionBase extends CdkAccordion {\n  /** Whether the expansion indicator should be hidden. */\n  hideToggle: boolean;\n\n  /** Display mode used for all expansion panels in the accordion. */\n  displayMode: MatAccordionDisplayMode;\n\n  /** The position of the expansion indicator. */\n  togglePosition: MatAccordionTogglePosition;\n\n  /** Handles keyboard events coming in from the panel headers. */\n  _handleHeaderKeydown: (event: KeyboardEvent) => void;\n\n  /** Handles focus events on the panel headers. */\n  _handleHeaderFocus: (header: any) => void;\n}\n\n\n/**\n * Token used to provide a `MatAccordion` to `MatExpansionPanel`.\n * Used primarily to avoid circular imports between `MatAccordion` and `MatExpansionPanel`.\n */\nexport const MAT_ACCORDION = new InjectionToken<MatAccordionBase>('MAT_ACCORDION');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  animate,\n  animateChild,\n  group,\n  state,\n  style,\n  transition,\n  trigger,\n  query,\n  AnimationTriggerMetadata,\n} from '@angular/animations';\n\n/** Time and timing curve for expansion panel animations. */\nexport const EXPANSION_PANEL_ANIMATION_TIMING = '225ms cubic-bezier(0.4,0.0,0.2,1)';\n\n/**\n * Animations used by the Material expansion panel.\n *\n * A bug in angular animation's `state` when ViewContainers are moved using ViewContainerRef.move()\n * causes the animation state of moved components to become `void` upon exit, and not update again\n * upon reentry into the DOM.  This can lead a to situation for the expansion panel where the state\n * of the panel is `expanded` or `collapsed` but the animation state is `void`.\n *\n * To correctly handle animating to the next state, we animate between `void` and `collapsed` which\n * are defined to have the same styles. Since angular animates from the current styles to the\n * destination state's style definition, in situations where we are moving from `void`'s styles to\n * `collapsed` this acts a noop since no style values change.\n *\n * In the case where angular's animation state is out of sync with the expansion panel's state, the\n * expansion panel being `expanded` and angular animations being `void`, the animation from the\n * `expanded`'s effective styles (though in a `void` animation state) to the collapsed state will\n * occur as expected.\n *\n * Angular Bug: https://github.com/angular/angular/issues/18847\n *\n * @docs-private\n */\nexport const matExpansionAnimations: {\n  readonly indicatorRotate: AnimationTriggerMetadata;\n  readonly expansionHeaderHeight: AnimationTriggerMetadata;\n  readonly bodyExpansion: AnimationTriggerMetadata;\n} = {\n  /** Animation that rotates the indicator arrow. */\n  indicatorRotate: trigger('indicatorRotate', [\n    state('collapsed, void', style({transform: 'rotate(0deg)'})),\n    state('expanded', style({transform: 'rotate(180deg)'})),\n    transition('expanded <=> collapsed, void => collapsed',\n      animate(EXPANSION_PANEL_ANIMATION_TIMING)),\n  ]),\n\n  /** Animation that expands and collapses the panel header height. */\n  expansionHeaderHeight: trigger('expansionHeight', [\n    state('collapsed, void', style({\n      height: '{{collapsedHeight}}',\n    }), {\n      params: {collapsedHeight: '48px'},\n    }),\n    state('expanded', style({\n      height: '{{expandedHeight}}'\n    }), {\n      params: {expandedHeight: '64px'}\n    }),\n    transition('expanded <=> collapsed, void => collapsed', group([\n      query('@indicatorRotate', animateChild(), {optional: true}),\n      animate(EXPANSION_PANEL_ANIMATION_TIMING),\n    ])),\n  ]),\n\n  /** Animation that expands and collapses the panel content. */\n  bodyExpansion: trigger('bodyExpansion', [\n    state('collapsed, void', style({height: '0px', visibility: 'hidden'})),\n    state('expanded', style({height: '*', visibility: 'visible'})),\n    transition('expanded <=> collapsed, void => collapsed',\n      animate(EXPANSION_PANEL_ANIMATION_TIMING)),\n  ])\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, TemplateRef} from '@angular/core';\n\n/**\n * Expansion panel content that will be rendered lazily\n * after the panel is opened for the first time.\n */\n@Directive({\n  selector: 'ng-template[matExpansionPanelContent]'\n})\nexport class MatExpansionPanelContent {\n  constructor(public _template: TemplateRef<any>) {}\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { CdkAccordionItem } from '@angular/cdk/accordion';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChild, Directive, EventEmitter, ElementRef, Input, Inject, Optional, Output, SkipSelf, ViewContainerRef, ViewEncapsulation, ViewChild, InjectionToken, } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subject } from 'rxjs';\nimport { filter, startWith, take, distinctUntilChanged } from 'rxjs/operators';\nimport { matExpansionAnimations } from './expansion-animations';\nimport { MatExpansionPanelContent } from './expansion-panel-content';\nimport { MAT_ACCORDION } from './accordion-base';\n/** Counter for generating unique element ids. */\nvar uniqueId = 0;\n/**\n * Injection token that can be used to configure the defalt\n * options for the expansion panel component.\n */\nexport var MAT_EXPANSION_PANEL_DEFAULT_OPTIONS = new InjectionToken('MAT_EXPANSION_PANEL_DEFAULT_OPTIONS');\nvar Éµ0 = undefined;\n/**\n * `<mat-expansion-panel>`\n *\n * This component can be used as a single element to show expandable content, or as one of\n * multiple children of an element with the MatAccordion directive attached.\n */\nvar MatExpansionPanel = /** @class */ (function (_super) {\n    tslib_1.__extends(MatExpansionPanel, _super);\n    function MatExpansionPanel(accordion, _changeDetectorRef, _uniqueSelectionDispatcher, _viewContainerRef, _document, _animationMode, defaultOptions) {\n        var _this = _super.call(this, accordion, _changeDetectorRef, _uniqueSelectionDispatcher) || this;\n        _this._viewContainerRef = _viewContainerRef;\n        _this._animationMode = _animationMode;\n        _this._hideToggle = false;\n        /** An event emitted after the body's expansion animation happens. */\n        _this.afterExpand = new EventEmitter();\n        /** An event emitted after the body's collapse animation happens. */\n        _this.afterCollapse = new EventEmitter();\n        /** Stream that emits for changes in `@Input` properties. */\n        _this._inputChanges = new Subject();\n        /** ID for the associated header element. Used for a11y labelling. */\n        _this._headerId = \"mat-expansion-panel-header-\" + uniqueId++;\n        /** Stream of body animation done events. */\n        _this._bodyAnimationDone = new Subject();\n        _this.accordion = accordion;\n        _this._document = _document;\n        // We need a Subject with distinctUntilChanged, because the `done` event\n        // fires twice on some browsers. See https://github.com/angular/angular/issues/24084\n        _this._bodyAnimationDone.pipe(distinctUntilChanged(function (x, y) {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        })).subscribe(function (event) {\n            if (event.fromState !== 'void') {\n                if (event.toState === 'expanded') {\n                    _this.afterExpand.emit();\n                }\n                else if (event.toState === 'collapsed') {\n                    _this.afterCollapse.emit();\n                }\n            }\n        });\n        if (defaultOptions) {\n            _this.hideToggle = defaultOptions.hideToggle;\n        }\n        return _this;\n    }\n    Object.defineProperty(MatExpansionPanel.prototype, \"hideToggle\", {\n        /** Whether the toggle indicator should be hidden. */\n        get: function () {\n            return this._hideToggle || (this.accordion && this.accordion.hideToggle);\n        },\n        set: function (value) {\n            this._hideToggle = coerceBooleanProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatExpansionPanel.prototype, \"togglePosition\", {\n        /** The position of the expansion indicator. */\n        get: function () {\n            return this._togglePosition || (this.accordion && this.accordion.togglePosition);\n        },\n        set: function (value) {\n            this._togglePosition = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** Determines whether the expansion panel should have spacing between it and its siblings. */\n    MatExpansionPanel.prototype._hasSpacing = function () {\n        if (this.accordion) {\n            // We don't need to subscribe to the `stateChanges` of the parent accordion because each time\n            // the [displayMode] input changes, the change detection will also cover the host bindings\n            // of this expansion panel.\n            return (this.expanded ? this.accordion.displayMode : this._getExpandedState()) === 'default';\n        }\n        return false;\n    };\n    /** Gets the expanded state string. */\n    MatExpansionPanel.prototype._getExpandedState = function () {\n        return this.expanded ? 'expanded' : 'collapsed';\n    };\n    MatExpansionPanel.prototype.ngAfterContentInit = function () {\n        var _this = this;\n        if (this._lazyContent) {\n            // Render the content as soon as the panel becomes open.\n            this.opened.pipe(startWith(null), filter(function () { return _this.expanded && !_this._portal; }), take(1)).subscribe(function () {\n                _this._portal = new TemplatePortal(_this._lazyContent._template, _this._viewContainerRef);\n            });\n        }\n    };\n    MatExpansionPanel.prototype.ngOnChanges = function (changes) {\n        this._inputChanges.next(changes);\n    };\n    MatExpansionPanel.prototype.ngOnDestroy = function () {\n        _super.prototype.ngOnDestroy.call(this);\n        this._bodyAnimationDone.complete();\n        this._inputChanges.complete();\n    };\n    /** Checks whether the expansion panel's content contains the currently-focused element. */\n    MatExpansionPanel.prototype._containsFocus = function () {\n        if (this._body) {\n            var focusedElement = this._document.activeElement;\n            var bodyElement = this._body.nativeElement;\n            return focusedElement === bodyElement || bodyElement.contains(focusedElement);\n        }\n        return false;\n    };\n    MatExpansionPanel.decorators = [\n        { type: Component, args: [{\n                    moduleId: module.id,\n                    selector: 'mat-expansion-panel',\n                    exportAs: 'matExpansionPanel',\n                    template: \"<ng-content select=\\\"mat-expansion-panel-header\\\"></ng-content>\\n<div class=\\\"mat-expansion-panel-content\\\"\\n     role=\\\"region\\\"\\n     [@bodyExpansion]=\\\"_getExpandedState()\\\"\\n     (@bodyExpansion.done)=\\\"_bodyAnimationDone.next($event)\\\"\\n     [attr.aria-labelledby]=\\\"_headerId\\\"\\n     [id]=\\\"id\\\"\\n     #body>\\n  <div class=\\\"mat-expansion-panel-body\\\">\\n    <ng-content></ng-content>\\n    <ng-template [cdkPortalOutlet]=\\\"_portal\\\"></ng-template>\\n  </div>\\n  <ng-content select=\\\"mat-action-row\\\"></ng-content>\\n</div>\\n\",\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    inputs: ['disabled', 'expanded'],\n                    outputs: ['opened', 'closed', 'expandedChange'],\n                    animations: [matExpansionAnimations.bodyExpansion],\n                    providers: [\n                        // Provide MatAccordion as undefined to prevent nested expansion panels from registering\n                        // to the same accordion.\n                        { provide: MAT_ACCORDION, useValue: Éµ0 },\n                    ],\n                    host: {\n                        'class': 'mat-expansion-panel',\n                        '[class.mat-expanded]': 'expanded',\n                        '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                        '[class.mat-expansion-panel-spacing]': '_hasSpacing()',\n                    },\n                    styles: [\".mat-expansion-panel{box-sizing:content-box;display:block;margin:0;border-radius:4px;overflow:hidden;transition:margin 225ms cubic-bezier(0.4, 0, 0.2, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-accordion .mat-expansion-panel:not(.mat-expanded),.mat-accordion .mat-expansion-panel:not(.mat-expansion-panel-spacing){border-radius:0}.mat-accordion .mat-expansion-panel:first-of-type{border-top-right-radius:4px;border-top-left-radius:4px}.mat-accordion .mat-expansion-panel:last-of-type{border-bottom-right-radius:4px;border-bottom-left-radius:4px}@media(-ms-high-contrast: active){.mat-expansion-panel{outline:solid 1px}}.mat-expansion-panel.ng-animate-disabled,.ng-animate-disabled .mat-expansion-panel,.mat-expansion-panel._mat-animation-noopable{transition:none}.mat-expansion-panel-content{display:flex;flex-direction:column;overflow:visible}.mat-expansion-panel-body{padding:0 24px 16px}.mat-expansion-panel-spacing{margin:16px 0}.mat-accordion>.mat-expansion-panel-spacing:first-child,.mat-accordion>*:first-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-top:0}.mat-accordion>.mat-expansion-panel-spacing:last-child,.mat-accordion>*:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-bottom:0}.mat-action-row{border-top-style:solid;border-top-width:1px;display:flex;flex-direction:row;justify-content:flex-end;padding:16px 8px 16px 24px}.mat-action-row button.mat-button-base{margin-left:8px}[dir=rtl] .mat-action-row button.mat-button-base{margin-left:0;margin-right:8px}/*# sourceMappingURL=expansion-panel.css.map */\\n\"]\n                }] }\n    ];\n    /** @nocollapse */\n    MatExpansionPanel.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: Optional }, { type: SkipSelf }, { type: Inject, args: [MAT_ACCORDION,] }] },\n        { type: ChangeDetectorRef },\n        { type: UniqueSelectionDispatcher },\n        { type: ViewContainerRef },\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n        { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n        { type: undefined, decorators: [{ type: Inject, args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS,] }, { type: Optional }] }\n    ]; };\n    MatExpansionPanel.propDecorators = {\n        hideToggle: [{ type: Input }],\n        togglePosition: [{ type: Input }],\n        afterExpand: [{ type: Output }],\n        afterCollapse: [{ type: Output }],\n        _lazyContent: [{ type: ContentChild, args: [MatExpansionPanelContent, { static: false },] }],\n        _body: [{ type: ViewChild, args: ['body', { static: false },] }]\n    };\n    return MatExpansionPanel;\n}(CdkAccordionItem));\nexport { MatExpansionPanel };\nvar MatExpansionPanelActionRow = /** @class */ (function () {\n    function MatExpansionPanelActionRow() {\n    }\n    MatExpansionPanelActionRow.decorators = [\n        { type: Directive, args: [{\n                    selector: 'mat-action-row',\n                    host: {\n                        class: 'mat-action-row'\n                    }\n                },] }\n    ];\n    return MatExpansionPanelActionRow;\n}());\nexport { MatExpansionPanelActionRow };\nexport { Éµ0 };\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { ENTER, SPACE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, Directive, ElementRef, Host, Input, ViewEncapsulation, Optional, Inject, } from '@angular/core';\nimport { merge, Subscription, EMPTY } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { matExpansionAnimations } from './expansion-animations';\nimport { MatExpansionPanel, MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, } from './expansion-panel';\n/**\n * `<mat-expansion-panel-header>`\n *\n * This component corresponds to the header element of an `<mat-expansion-panel>`.\n */\nvar MatExpansionPanelHeader = /** @class */ (function () {\n    function MatExpansionPanelHeader(panel, _element, _focusMonitor, _changeDetectorRef, defaultOptions) {\n        var _this = this;\n        this.panel = panel;\n        this._element = _element;\n        this._focusMonitor = _focusMonitor;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._parentChangeSubscription = Subscription.EMPTY;\n        /** Whether Angular animations in the panel header should be disabled. */\n        this._animationsDisabled = true;\n        var accordionHideToggleChange = panel.accordion ?\n            panel.accordion._stateChanges.pipe(filter(function (changes) { return !!(changes['hideToggle'] || changes['togglePosition']); })) :\n            EMPTY;\n        // Since the toggle state depends on an @Input on the panel, we\n        // need to subscribe and trigger change detection manually.\n        this._parentChangeSubscription =\n            merge(panel.opened, panel.closed, accordionHideToggleChange, panel._inputChanges.pipe(filter(function (changes) {\n                return !!(changes['hideToggle'] ||\n                    changes['disabled'] ||\n                    changes['togglePosition']);\n            })))\n                .subscribe(function () { return _this._changeDetectorRef.markForCheck(); });\n        // Avoids focus being lost if the panel contained the focused element and was closed.\n        panel.closed\n            .pipe(filter(function () { return panel._containsFocus(); }))\n            .subscribe(function () { return _focusMonitor.focusVia(_element, 'program'); });\n        _focusMonitor.monitor(_element).subscribe(function (origin) {\n            if (origin && panel.accordion) {\n                panel.accordion._handleHeaderFocus(_this);\n            }\n        });\n        if (defaultOptions) {\n            this.expandedHeight = defaultOptions.expandedHeight;\n            this.collapsedHeight = defaultOptions.collapsedHeight;\n        }\n    }\n    MatExpansionPanelHeader.prototype._animationStarted = function () {\n        // Currently the `expansionHeight` animation has a `void => collapsed` transition which is\n        // there to work around a bug in Angular (see #13088), however this introduces a different\n        // issue. The new transition will cause the header to animate in on init (see #16067), if the\n        // consumer has set a header height that is different from the default one. We work around it\n        // by disabling animations on the header and re-enabling them after the first animation has run.\n        // Note that Angular dispatches animation events even if animations are disabled. Ideally this\n        // wouldn't be necessary if we remove the `void => collapsed` transition, but we have to wait\n        // for https://github.com/angular/angular/issues/18847 to be resolved.\n        this._animationsDisabled = false;\n    };\n    Object.defineProperty(MatExpansionPanelHeader.prototype, \"disabled\", {\n        /**\n         * Whether the associated panel is disabled. Implemented as a part of `FocusableOption`.\n         * @docs-private\n         */\n        get: function () {\n            return this.panel.disabled;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** Toggles the expanded state of the panel. */\n    MatExpansionPanelHeader.prototype._toggle = function () {\n        this.panel.toggle();\n    };\n    /** Gets whether the panel is expanded. */\n    MatExpansionPanelHeader.prototype._isExpanded = function () {\n        return this.panel.expanded;\n    };\n    /** Gets the expanded state string of the panel. */\n    MatExpansionPanelHeader.prototype._getExpandedState = function () {\n        return this.panel._getExpandedState();\n    };\n    /** Gets the panel id. */\n    MatExpansionPanelHeader.prototype._getPanelId = function () {\n        return this.panel.id;\n    };\n    /** Gets the toggle position for the header. */\n    MatExpansionPanelHeader.prototype._getTogglePosition = function () {\n        return this.panel.togglePosition;\n    };\n    /** Gets whether the expand indicator should be shown. */\n    MatExpansionPanelHeader.prototype._showToggle = function () {\n        return !this.panel.hideToggle && !this.panel.disabled;\n    };\n    /** Handle keydown event calling to toggle() if appropriate. */\n    MatExpansionPanelHeader.prototype._keydown = function (event) {\n        switch (event.keyCode) {\n            // Toggle for space and enter keys.\n            case SPACE:\n            case ENTER:\n                if (!hasModifierKey(event)) {\n                    event.preventDefault();\n                    this._toggle();\n                }\n                break;\n            default:\n                if (this.panel.accordion) {\n                    this.panel.accordion._handleHeaderKeydown(event);\n                }\n                return;\n        }\n    };\n    /**\n     * Focuses the panel header. Implemented as a part of `FocusableOption`.\n     * @param origin Origin of the action that triggered the focus.\n     * @docs-private\n     */\n    MatExpansionPanelHeader.prototype.focus = function (origin, options) {\n        if (origin === void 0) { origin = 'program'; }\n        this._focusMonitor.focusVia(this._element, origin, options);\n    };\n    MatExpansionPanelHeader.prototype.ngOnDestroy = function () {\n        this._parentChangeSubscription.unsubscribe();\n        this._focusMonitor.stopMonitoring(this._element);\n    };\n    MatExpansionPanelHeader.decorators = [\n        { type: Component, args: [{\n                    moduleId: module.id,\n                    selector: 'mat-expansion-panel-header',\n                    template: \"<span class=\\\"mat-content\\\">\\n  <ng-content select=\\\"mat-panel-title\\\"></ng-content>\\n  <ng-content select=\\\"mat-panel-description\\\"></ng-content>\\n  <ng-content></ng-content>\\n</span>\\n<span [@indicatorRotate]=\\\"_getExpandedState()\\\" *ngIf=\\\"_showToggle()\\\"\\n      class=\\\"mat-expansion-indicator\\\"></span>\\n\",\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    animations: [\n                        matExpansionAnimations.indicatorRotate,\n                        matExpansionAnimations.expansionHeaderHeight\n                    ],\n                    host: {\n                        'class': 'mat-expansion-panel-header',\n                        'role': 'button',\n                        '[attr.id]': 'panel._headerId',\n                        '[attr.tabindex]': 'disabled ? -1 : 0',\n                        '[attr.aria-controls]': '_getPanelId()',\n                        '[attr.aria-expanded]': '_isExpanded()',\n                        '[attr.aria-disabled]': 'panel.disabled',\n                        '[class.mat-expanded]': '_isExpanded()',\n                        '[class.mat-expansion-toggle-indicator-after]': \"_getTogglePosition() === 'after'\",\n                        '[class.mat-expansion-toggle-indicator-before]': \"_getTogglePosition() === 'before'\",\n                        '(click)': '_toggle()',\n                        '(keydown)': '_keydown($event)',\n                        '[@.disabled]': '_animationsDisabled',\n                        '(@expansionHeight.start)': '_animationStarted()',\n                        '[@expansionHeight]': \"{\\n        value: _getExpandedState(),\\n        params: {\\n          collapsedHeight: collapsedHeight,\\n          expandedHeight: expandedHeight\\n        }\\n    }\",\n                    },\n                    styles: [\".mat-expansion-panel-header{display:flex;flex-direction:row;align-items:center;padding:0 24px;border-radius:inherit}.mat-expansion-panel-header:focus,.mat-expansion-panel-header:hover{outline:none}.mat-expansion-panel-header.mat-expanded:focus,.mat-expansion-panel-header.mat-expanded:hover{background:inherit}.mat-expansion-panel-header:not([aria-disabled=true]){cursor:pointer}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before{flex-direction:row-reverse}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 16px 0 0}[dir=rtl] .mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 0 0 16px}.mat-content{display:flex;flex:1;flex-direction:row;overflow:hidden}.mat-expansion-panel-header-title,.mat-expansion-panel-header-description{display:flex;flex-grow:1;margin-right:16px}[dir=rtl] .mat-expansion-panel-header-title,[dir=rtl] .mat-expansion-panel-header-description{margin-right:0;margin-left:16px}.mat-expansion-panel-header-description{flex-grow:2}.mat-expansion-indicator::after{border-style:solid;border-width:0 2px 2px 0;content:\\\"\\\";display:inline-block;padding:3px;transform:rotate(45deg);vertical-align:middle}/*# sourceMappingURL=expansion-panel-header.css.map */\\n\"]\n                }] }\n    ];\n    /** @nocollapse */\n    MatExpansionPanelHeader.ctorParameters = function () { return [\n        { type: MatExpansionPanel, decorators: [{ type: Host }] },\n        { type: ElementRef },\n        { type: FocusMonitor },\n        { type: ChangeDetectorRef },\n        { type: undefined, decorators: [{ type: Inject, args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS,] }, { type: Optional }] }\n    ]; };\n    MatExpansionPanelHeader.propDecorators = {\n        expandedHeight: [{ type: Input }],\n        collapsedHeight: [{ type: Input }]\n    };\n    return MatExpansionPanelHeader;\n}());\nexport { MatExpansionPanelHeader };\n/**\n * `<mat-panel-description>`\n *\n * This directive is to be used inside of the MatExpansionPanelHeader component.\n */\nvar MatExpansionPanelDescription = /** @class */ (function () {\n    function MatExpansionPanelDescription() {\n    }\n    MatExpansionPanelDescription.decorators = [\n        { type: Directive, args: [{\n                    selector: 'mat-panel-description',\n                    host: {\n                        class: 'mat-expansion-panel-header-description'\n                    }\n                },] }\n    ];\n    return MatExpansionPanelDescription;\n}());\nexport { MatExpansionPanelDescription };\n/**\n * `<mat-panel-title>`\n *\n * This directive is to be used inside of the MatExpansionPanelHeader component.\n */\nvar MatExpansionPanelTitle = /** @class */ (function () {\n    function MatExpansionPanelTitle() {\n    }\n    MatExpansionPanelTitle.decorators = [\n        { type: Directive, args: [{\n                    selector: 'mat-panel-title',\n                    host: {\n                        class: 'mat-expansion-panel-header-title'\n                    }\n                },] }\n    ];\n    return MatExpansionPanelTitle;\n}());\nexport { MatExpansionPanelTitle };\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, Input, ContentChildren, QueryList, AfterContentInit} from '@angular/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {CdkAccordion} from '@angular/cdk/accordion';\nimport {FocusKeyManager} from '@angular/cdk/a11y';\nimport {HOME, END, hasModifierKey} from '@angular/cdk/keycodes';\nimport {\n  MAT_ACCORDION,\n  MatAccordionBase,\n  MatAccordionDisplayMode,\n  MatAccordionTogglePosition\n} from './accordion-base';\nimport {MatExpansionPanelHeader} from './expansion-panel-header';\n\n/**\n * Directive for a Material Design Accordion.\n */\n@Directive({\n  selector: 'mat-accordion',\n  exportAs: 'matAccordion',\n  inputs: ['multi'],\n  providers: [{\n    provide: MAT_ACCORDION,\n    useExisting: MatAccordion\n  }],\n  host: {\n    class: 'mat-accordion'\n  }\n})\nexport class MatAccordion extends CdkAccordion implements MatAccordionBase, AfterContentInit {\n  private _keyManager: FocusKeyManager<MatExpansionPanelHeader>;\n\n  @ContentChildren(MatExpansionPanelHeader, {descendants: true})\n  _headers: QueryList<MatExpansionPanelHeader>;\n\n  /** Whether the expansion indicator should be hidden. */\n  @Input()\n  get hideToggle(): boolean { return this._hideToggle; }\n  set hideToggle(show: boolean) { this._hideToggle = coerceBooleanProperty(show); }\n  private _hideToggle: boolean = false;\n\n  /**\n   * Display mode used for all expansion panels in the accordion. Currently two display\n   * modes exist:\n   *  default - a gutter-like spacing is placed around any expanded panel, placing the expanded\n   *     panel at a different elevation from the rest of the accordion.\n   *  flat - no spacing is placed around expanded panels, showing all panels at the same\n   *     elevation.\n   */\n  @Input() displayMode: MatAccordionDisplayMode = 'default';\n\n  /** The position of the expansion indicator. */\n  @Input() togglePosition: MatAccordionTogglePosition = 'after';\n\n  ngAfterContentInit() {\n    this._keyManager = new FocusKeyManager(this._headers).withWrap();\n  }\n\n  /** Handles keyboard events coming in from the panel headers. */\n  _handleHeaderKeydown(event: KeyboardEvent) {\n    const {keyCode} = event;\n    const manager = this._keyManager;\n\n    if (keyCode === HOME) {\n      if (!hasModifierKey(event)) {\n        manager.setFirstItemActive();\n        event.preventDefault();\n      }\n    } else if (keyCode === END) {\n      if (!hasModifierKey(event)) {\n        manager.setLastItemActive();\n        event.preventDefault();\n      }\n    } else {\n      this._keyManager.onKeydown(event);\n    }\n  }\n\n  _handleHeaderFocus(header: MatExpansionPanelHeader) {\n    this._keyManager.updateActiveItem(header);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CdkAccordionModule} from '@angular/cdk/accordion';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatAccordion} from './accordion';\nimport {MatExpansionPanel, MatExpansionPanelActionRow} from './expansion-panel';\nimport {MatExpansionPanelContent} from './expansion-panel-content';\nimport {\n  MatExpansionPanelDescription,\n  MatExpansionPanelHeader,\n  MatExpansionPanelTitle,\n} from './expansion-panel-header';\n\n\n@NgModule({\n  imports: [CommonModule, CdkAccordionModule, PortalModule],\n  exports: [\n    MatAccordion,\n    MatExpansionPanel,\n    MatExpansionPanelActionRow,\n    MatExpansionPanelHeader,\n    MatExpansionPanelTitle,\n    MatExpansionPanelDescription,\n    MatExpansionPanelContent,\n  ],\n  declarations: [\n    MatAccordion,\n    MatExpansionPanel,\n    MatExpansionPanelActionRow,\n    MatExpansionPanelHeader,\n    MatExpansionPanelTitle,\n    MatExpansionPanelDescription,\n    MatExpansionPanelContent,\n  ],\n})\nexport class MatExpansionModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './expansion-module';\nexport * from './accordion';\nexport * from './accordion-base';\nexport * from './expansion-panel';\nexport * from './expansion-panel-header';\nexport * from './expansion-panel-content';\nexport * from './expansion-animations';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["tslib_1.__extends"],"mappings":"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"}