{"version":3,"file":"material-list.umd.js","sources":["npm_package.esm5/src/material/list/list.js","npm_package.esm5/src/material/list/selection-list.js","../../../../../../src/material/list/list-module.ts","../../../../../../src/material/list/public-api.ts","../../../../../../src/material/list/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { ChangeDetectionStrategy, Component, ContentChild, ContentChildren, Directive, ElementRef, Optional, QueryList, ViewEncapsulation, ChangeDetectorRef, } from '@angular/core';\nimport { MatLine, setLines, mixinDisableRipple, } from '@angular/material/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n// Boilerplate for applying mixins to MatList.\n/** @docs-private */\nvar MatListBase = /** @class */ (function () {\n    function MatListBase() {\n    }\n    return MatListBase;\n}());\nvar _MatListMixinBase = mixinDisableRipple(MatListBase);\n// Boilerplate for applying mixins to MatListItem.\n/** @docs-private */\nvar MatListItemBase = /** @class */ (function () {\n    function MatListItemBase() {\n    }\n    return MatListItemBase;\n}());\nvar _MatListItemMixinBase = mixinDisableRipple(MatListItemBase);\nvar MatNavList = /** @class */ (function (_super) {\n    tslib_1.__extends(MatNavList, _super);\n    function MatNavList() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /** Emits when the state of the list changes. */\n        _this._stateChanges = new Subject();\n        return _this;\n    }\n    MatNavList.prototype.ngOnChanges = function () {\n        this._stateChanges.next();\n    };\n    MatNavList.prototype.ngOnDestroy = function () {\n        this._stateChanges.complete();\n    };\n    MatNavList.decorators = [\n        { type: Component, args: [{\n                    moduleId: module.id,\n                    selector: 'mat-nav-list',\n                    exportAs: 'matNavList',\n                    host: {\n                        'role': 'navigation',\n                        'class': 'mat-nav-list mat-list-base'\n                    },\n                    template: \"<ng-content></ng-content>\\n\\n\",\n                    inputs: ['disableRipple'],\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}@media(-ms-high-contrast: active){.mat-selection-list:focus{outline-style:dotted}.mat-list-option:hover,.mat-list-option:focus,.mat-nav-list .mat-list-item:hover,.mat-nav-list .mat-list-item:focus,mat-action-list .mat-list-item:hover,mat-action-list .mat-list-item:focus{outline:dotted 1px}}@media(hover: none){.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}/*# sourceMappingURL=list.css.map */\\n\"]\n                }] }\n    ];\n    return MatNavList;\n}(_MatListMixinBase));\nexport { MatNavList };\nvar MatList = /** @class */ (function (_super) {\n    tslib_1.__extends(MatList, _super);\n    function MatList(_elementRef) {\n        var _this = _super.call(this) || this;\n        _this._elementRef = _elementRef;\n        /** Emits when the state of the list changes. */\n        _this._stateChanges = new Subject();\n        if (_this._getListType() === 'action-list') {\n            _elementRef.nativeElement.classList.add('mat-action-list');\n        }\n        return _this;\n    }\n    MatList.prototype._getListType = function () {\n        var nodeName = this._elementRef.nativeElement.nodeName.toLowerCase();\n        if (nodeName === 'mat-list') {\n            return 'list';\n        }\n        if (nodeName === 'mat-action-list') {\n            return 'action-list';\n        }\n        return null;\n    };\n    MatList.prototype.ngOnChanges = function () {\n        this._stateChanges.next();\n    };\n    MatList.prototype.ngOnDestroy = function () {\n        this._stateChanges.complete();\n    };\n    MatList.decorators = [\n        { type: Component, args: [{\n                    moduleId: module.id,\n                    selector: 'mat-list, mat-action-list',\n                    exportAs: 'matList',\n                    template: \"<ng-content></ng-content>\\n\\n\",\n                    host: {\n                        'class': 'mat-list mat-list-base'\n                    },\n                    inputs: ['disableRipple'],\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}@media(-ms-high-contrast: active){.mat-selection-list:focus{outline-style:dotted}.mat-list-option:hover,.mat-list-option:focus,.mat-nav-list .mat-list-item:hover,.mat-nav-list .mat-list-item:focus,mat-action-list .mat-list-item:hover,mat-action-list .mat-list-item:focus{outline:dotted 1px}}@media(hover: none){.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}/*# sourceMappingURL=list.css.map */\\n\"]\n                }] }\n    ];\n    /** @nocollapse */\n    MatList.ctorParameters = function () { return [\n        { type: ElementRef }\n    ]; };\n    return MatList;\n}(_MatListMixinBase));\nexport { MatList };\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\nvar MatListAvatarCssMatStyler = /** @class */ (function () {\n    function MatListAvatarCssMatStyler() {\n    }\n    MatListAvatarCssMatStyler.decorators = [\n        { type: Directive, args: [{\n                    selector: '[mat-list-avatar], [matListAvatar]',\n                    host: { 'class': 'mat-list-avatar' }\n                },] }\n    ];\n    return MatListAvatarCssMatStyler;\n}());\nexport { MatListAvatarCssMatStyler };\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\nvar MatListIconCssMatStyler = /** @class */ (function () {\n    function MatListIconCssMatStyler() {\n    }\n    MatListIconCssMatStyler.decorators = [\n        { type: Directive, args: [{\n                    selector: '[mat-list-icon], [matListIcon]',\n                    host: { 'class': 'mat-list-icon' }\n                },] }\n    ];\n    return MatListIconCssMatStyler;\n}());\nexport { MatListIconCssMatStyler };\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\nvar MatListSubheaderCssMatStyler = /** @class */ (function () {\n    function MatListSubheaderCssMatStyler() {\n    }\n    MatListSubheaderCssMatStyler.decorators = [\n        { type: Directive, args: [{\n                    selector: '[mat-subheader], [matSubheader]',\n                    host: { 'class': 'mat-subheader' }\n                },] }\n    ];\n    return MatListSubheaderCssMatStyler;\n}());\nexport { MatListSubheaderCssMatStyler };\n/** An item within a Material Design list. */\nvar MatListItem = /** @class */ (function (_super) {\n    tslib_1.__extends(MatListItem, _super);\n    function MatListItem(_element, _changeDetectorRef, navList, list) {\n        var _this = _super.call(this) || this;\n        _this._element = _element;\n        _this._isInteractiveList = false;\n        _this._destroyed = new Subject();\n        _this._isInteractiveList = !!(navList || (list && list._getListType() === 'action-list'));\n        _this._list = navList || list;\n        // If no type attributed is specified for <button>, set it to \"button\".\n        // If a type attribute is already specified, do nothing.\n        var element = _this._getHostElement();\n        if (element.nodeName.toLowerCase() === 'button' && !element.hasAttribute('type')) {\n            element.setAttribute('type', 'button');\n        }\n        if (_this._list) {\n            // React to changes in the state of the parent list since\n            // some of the item's properties depend on it (e.g. `disableRipple`).\n            _this._list._stateChanges.pipe(takeUntil(_this._destroyed)).subscribe(function () {\n                _changeDetectorRef.markForCheck();\n            });\n        }\n        return _this;\n    }\n    MatListItem.prototype.ngAfterContentInit = function () {\n        setLines(this._lines, this._element);\n    };\n    MatListItem.prototype.ngOnDestroy = function () {\n        this._destroyed.next();\n        this._destroyed.complete();\n    };\n    /** Whether this list item should show a ripple effect when clicked. */\n    MatListItem.prototype._isRippleDisabled = function () {\n        return !this._isInteractiveList || this.disableRipple ||\n            !!(this._list && this._list.disableRipple);\n    };\n    /** Retrieves the DOM element of the component host. */\n    MatListItem.prototype._getHostElement = function () {\n        return this._element.nativeElement;\n    };\n    MatListItem.decorators = [\n        { type: Component, args: [{\n                    moduleId: module.id,\n                    selector: 'mat-list-item, a[mat-list-item], button[mat-list-item]',\n                    exportAs: 'matListItem',\n                    host: {\n                        'class': 'mat-list-item',\n                        // @breaking-change 8.0.0 Remove `mat-list-item-avatar` in favor of `mat-list-item-with-avatar`.\n                        '[class.mat-list-item-avatar]': '_avatar || _icon',\n                        '[class.mat-list-item-with-avatar]': '_avatar || _icon',\n                    },\n                    inputs: ['disableRipple'],\n                    template: \"<div class=\\\"mat-list-item-content\\\">\\n  <div class=\\\"mat-list-item-ripple\\\" mat-ripple\\n       [matRippleTrigger]=\\\"_getHostElement()\\\"\\n       [matRippleDisabled]=\\\"_isRippleDisabled()\\\">\\n  </div>\\n\\n  <ng-content select=\\\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\\\">\\n  </ng-content>\\n\\n  <div class=\\\"mat-list-text\\\"><ng-content select=\\\"[mat-line], [matLine]\\\"></ng-content></div>\\n\\n  <ng-content></ng-content>\\n</div>\\n\",\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }] }\n    ];\n    /** @nocollapse */\n    MatListItem.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: ChangeDetectorRef },\n        { type: MatNavList, decorators: [{ type: Optional }] },\n        { type: MatList, decorators: [{ type: Optional }] }\n    ]; };\n    MatListItem.propDecorators = {\n        _lines: [{ type: ContentChildren, args: [MatLine, { descendants: true },] }],\n        _avatar: [{ type: ContentChild, args: [MatListAvatarCssMatStyler, { static: false },] }],\n        _icon: [{ type: ContentChild, args: [MatListIconCssMatStyler, { static: false },] }]\n    };\n    return MatListItem;\n}(_MatListItemMixinBase));\nexport { MatListItem };\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { SPACE, ENTER, HOME, END, UP_ARROW, DOWN_ARROW, A, hasModifierKey, } from '@angular/cdk/keycodes';\nimport { Attribute, ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChild, ContentChildren, ElementRef, EventEmitter, forwardRef, Inject, Input, Output, QueryList, ViewChild, ViewEncapsulation, } from '@angular/core';\nimport { MatLine, setLines, mixinDisableRipple, } from '@angular/material/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { MatListAvatarCssMatStyler, MatListIconCssMatStyler } from './list';\n/** @docs-private */\nvar MatSelectionListBase = /** @class */ (function () {\n    function MatSelectionListBase() {\n    }\n    return MatSelectionListBase;\n}());\nvar _MatSelectionListMixinBase = mixinDisableRipple(MatSelectionListBase);\n/** @docs-private */\nvar MatListOptionBase = /** @class */ (function () {\n    function MatListOptionBase() {\n    }\n    return MatListOptionBase;\n}());\nvar _MatListOptionMixinBase = mixinDisableRipple(MatListOptionBase);\n/** @docs-private */\nexport var MAT_SELECTION_LIST_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return MatSelectionList; }),\n    multi: true\n};\n/** Change event that is being fired whenever the selected state of an option changes. */\nvar MatSelectionListChange = /** @class */ (function () {\n    function MatSelectionListChange(\n    /** Reference to the selection list that emitted the event. */\n    source, \n    /** Reference to the option that has been changed. */\n    option) {\n        this.source = source;\n        this.option = option;\n    }\n    return MatSelectionListChange;\n}());\nexport { MatSelectionListChange };\n/**\n * Component for list-options of selection-list. Each list-option can automatically\n * generate a checkbox and can put current item into the selectionModel of selection-list\n * if the current item is selected.\n */\nvar MatListOption = /** @class */ (function (_super) {\n    tslib_1.__extends(MatListOption, _super);\n    function MatListOption(_element, _changeDetector, \n    /** @docs-private */\n    selectionList) {\n        var _this = _super.call(this) || this;\n        _this._element = _element;\n        _this._changeDetector = _changeDetector;\n        _this.selectionList = selectionList;\n        _this._selected = false;\n        _this._disabled = false;\n        _this._hasFocus = false;\n        /** Whether the label should appear before or after the checkbox. Defaults to 'after' */\n        _this.checkboxPosition = 'after';\n        return _this;\n    }\n    Object.defineProperty(MatListOption.prototype, \"color\", {\n        /** Theme color of the list option. This sets the color of the checkbox. */\n        get: function () { return this._color || this.selectionList.color; },\n        set: function (newValue) { this._color = newValue; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatListOption.prototype, \"value\", {\n        /** Value of the option */\n        get: function () { return this._value; },\n        set: function (newValue) {\n            if (this.selected && newValue !== this.value) {\n                this.selected = false;\n            }\n            this._value = newValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatListOption.prototype, \"disabled\", {\n        /** Whether the option is disabled. */\n        get: function () { return this._disabled || (this.selectionList && this.selectionList.disabled); },\n        set: function (value) {\n            var newValue = coerceBooleanProperty(value);\n            if (newValue !== this._disabled) {\n                this._disabled = newValue;\n                this._changeDetector.markForCheck();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatListOption.prototype, \"selected\", {\n        /** Whether the option is selected. */\n        get: function () { return this.selectionList.selectedOptions.isSelected(this); },\n        set: function (value) {\n            var isSelected = coerceBooleanProperty(value);\n            if (isSelected !== this._selected) {\n                this._setSelected(isSelected);\n                this.selectionList._reportValueChange();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MatListOption.prototype.ngOnInit = function () {\n        var _this = this;\n        var list = this.selectionList;\n        if (list._value && list._value.some(function (value) { return list.compareWith(value, _this._value); })) {\n            this._setSelected(true);\n        }\n        var wasSelected = this._selected;\n        // List options that are selected at initialization can't be reported properly to the form\n        // control. This is because it takes some time until the selection-list knows about all\n        // available options. Also it can happen that the ControlValueAccessor has an initial value\n        // that should be used instead. Deferring the value change report to the next tick ensures\n        // that the form control value is not being overwritten.\n        Promise.resolve().then(function () {\n            if (_this._selected || wasSelected) {\n                _this.selected = true;\n                _this._changeDetector.markForCheck();\n            }\n        });\n    };\n    MatListOption.prototype.ngAfterContentInit = function () {\n        setLines(this._lines, this._element);\n    };\n    MatListOption.prototype.ngOnDestroy = function () {\n        var _this = this;\n        if (this.selected) {\n            // We have to delay this until the next tick in order\n            // to avoid changed after checked errors.\n            Promise.resolve().then(function () {\n                _this.selected = false;\n            });\n        }\n        var hadFocus = this._hasFocus;\n        var newActiveItem = this.selectionList._removeOptionFromList(this);\n        // Only move focus if this option was focused at the time it was destroyed.\n        if (hadFocus && newActiveItem) {\n            newActiveItem.focus();\n        }\n    };\n    /** Toggles the selection state of the option. */\n    MatListOption.prototype.toggle = function () {\n        this.selected = !this.selected;\n    };\n    /** Allows for programmatic focusing of the option. */\n    MatListOption.prototype.focus = function () {\n        this._element.nativeElement.focus();\n    };\n    /**\n     * Returns the list item's text label. Implemented as a part of the FocusKeyManager.\n     * @docs-private\n     */\n    MatListOption.prototype.getLabel = function () {\n        return this._text ? (this._text.nativeElement.textContent || '') : '';\n    };\n    /** Whether this list item should show a ripple effect when clicked. */\n    MatListOption.prototype._isRippleDisabled = function () {\n        return this.disabled || this.disableRipple || this.selectionList.disableRipple;\n    };\n    MatListOption.prototype._handleClick = function () {\n        if (!this.disabled) {\n            this.toggle();\n            // Emit a change event if the selected state of the option changed through user interaction.\n            this.selectionList._emitChangeEvent(this);\n        }\n    };\n    MatListOption.prototype._handleFocus = function () {\n        this.selectionList._setFocusedOption(this);\n        this._hasFocus = true;\n    };\n    MatListOption.prototype._handleBlur = function () {\n        this.selectionList._onTouched();\n        this._hasFocus = false;\n    };\n    /** Retrieves the DOM element of the component host. */\n    MatListOption.prototype._getHostElement = function () {\n        return this._element.nativeElement;\n    };\n    /** Sets the selected state of the option. Returns whether the value has changed. */\n    MatListOption.prototype._setSelected = function (selected) {\n        if (selected === this._selected) {\n            return false;\n        }\n        this._selected = selected;\n        if (selected) {\n            this.selectionList.selectedOptions.select(this);\n        }\n        else {\n            this.selectionList.selectedOptions.deselect(this);\n        }\n        this._changeDetector.markForCheck();\n        return true;\n    };\n    /**\n     * Notifies Angular that the option needs to be checked in the next change detection run. Mainly\n     * used to trigger an update of the list option if the disabled state of the selection list\n     * changed.\n     */\n    MatListOption.prototype._markForCheck = function () {\n        this._changeDetector.markForCheck();\n    };\n    MatListOption.decorators = [\n        { type: Component, args: [{\n                    moduleId: module.id,\n                    selector: 'mat-list-option',\n                    exportAs: 'matListOption',\n                    inputs: ['disableRipple'],\n                    host: {\n                        'role': 'option',\n                        'class': 'mat-list-item mat-list-option',\n                        '(focus)': '_handleFocus()',\n                        '(blur)': '_handleBlur()',\n                        '(click)': '_handleClick()',\n                        'tabindex': '-1',\n                        '[class.mat-list-item-disabled]': 'disabled',\n                        '[class.mat-list-item-with-avatar]': '_avatar || _icon',\n                        // Manually set the \"primary\" or \"warn\" class if the color has been explicitly\n                        // set to \"primary\" or \"warn\". The pseudo checkbox picks up these classes for\n                        // its theme.\n                        '[class.mat-primary]': 'color === \"primary\"',\n                        // Even though accent is the default, we need to set this class anyway, because the  list might\n                        // be placed inside a parent that has one of the other colors with a higher specificity.\n                        '[class.mat-accent]': 'color !== \"primary\" && color !== \"warn\"',\n                        '[class.mat-warn]': 'color === \"warn\"',\n                        '[attr.aria-selected]': 'selected',\n                        '[attr.aria-disabled]': 'disabled',\n                    },\n                    template: \"<div class=\\\"mat-list-item-content\\\"\\n  [class.mat-list-item-content-reverse]=\\\"checkboxPosition == 'after'\\\">\\n\\n  <div mat-ripple\\n    class=\\\"mat-list-item-ripple\\\"\\n    [matRippleTrigger]=\\\"_getHostElement()\\\"\\n    [matRippleDisabled]=\\\"_isRippleDisabled()\\\"></div>\\n\\n  <mat-pseudo-checkbox\\n    [state]=\\\"selected ? 'checked' : 'unchecked'\\\"\\n    [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox>\\n\\n  <div class=\\\"mat-list-text\\\" #text><ng-content></ng-content></div>\\n\\n  <ng-content select=\\\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\\\">\\n  </ng-content>\\n\\n</div>\\n\",\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }] }\n    ];\n    /** @nocollapse */\n    MatListOption.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: ChangeDetectorRef },\n        { type: MatSelectionList, decorators: [{ type: Inject, args: [forwardRef(function () { return MatSelectionList; }),] }] }\n    ]; };\n    MatListOption.propDecorators = {\n        _avatar: [{ type: ContentChild, args: [MatListAvatarCssMatStyler, { static: false },] }],\n        _icon: [{ type: ContentChild, args: [MatListIconCssMatStyler, { static: false },] }],\n        _lines: [{ type: ContentChildren, args: [MatLine,] }],\n        _text: [{ type: ViewChild, args: ['text', { static: false },] }],\n        checkboxPosition: [{ type: Input }],\n        color: [{ type: Input }],\n        value: [{ type: Input }],\n        disabled: [{ type: Input }],\n        selected: [{ type: Input }]\n    };\n    return MatListOption;\n}(_MatListOptionMixinBase));\nexport { MatListOption };\n/**\n * Material Design list component where each item is a selectable option. Behaves as a listbox.\n */\nvar MatSelectionList = /** @class */ (function (_super) {\n    tslib_1.__extends(MatSelectionList, _super);\n    function MatSelectionList(_element, tabIndex) {\n        var _this = _super.call(this) || this;\n        _this._element = _element;\n        /** Emits a change event whenever the selected state of an option changes. */\n        _this.selectionChange = new EventEmitter();\n        /** Tabindex of the selection list. */\n        _this.tabIndex = 0;\n        /** Theme color of the selection list. This sets the checkbox color for all list options. */\n        _this.color = 'accent';\n        /**\n         * Function used for comparing an option against the selected value when determining which\n         * options should appear as selected. The first argument is the value of an options. The second\n         * one is a value from the selected value. A boolean must be returned.\n         */\n        _this.compareWith = function (a1, a2) { return a1 === a2; };\n        _this._disabled = false;\n        /** The currently selected options. */\n        _this.selectedOptions = new SelectionModel(true);\n        /** View to model callback that should be called whenever the selected options change. */\n        _this._onChange = function (_) { };\n        /** Emits when the list has been destroyed. */\n        _this._destroyed = new Subject();\n        /** View to model callback that should be called if the list or its options lost focus. */\n        _this._onTouched = function () { };\n        _this.tabIndex = parseInt(tabIndex) || 0;\n        return _this;\n    }\n    Object.defineProperty(MatSelectionList.prototype, \"disabled\", {\n        /** Whether the selection list is disabled. */\n        get: function () { return this._disabled; },\n        set: function (value) {\n            this._disabled = coerceBooleanProperty(value);\n            // The `MatSelectionList` and `MatListOption` are using the `OnPush` change detection\n            // strategy. Therefore the options will not check for any changes if the `MatSelectionList`\n            // changed its state. Since we know that a change to `disabled` property of the list affects\n            // the state of the options, we manually mark each option for check.\n            this._markOptionsForCheck();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MatSelectionList.prototype.ngAfterContentInit = function () {\n        this._keyManager = new FocusKeyManager(this.options)\n            .withWrap()\n            .withTypeAhead()\n            // Allow disabled items to be focusable. For accessibility reasons, there must be a way for\n            // screenreader users, that allows reading the different options of the list.\n            .skipPredicate(function () { return false; })\n            .withAllowedModifierKeys(['shiftKey']);\n        if (this._value) {\n            this._setOptionsFromValues(this._value);\n        }\n        // Sync external changes to the model back to the options.\n        this.selectedOptions.onChange.pipe(takeUntil(this._destroyed)).subscribe(function (event) {\n            var e_1, _a, e_2, _b;\n            if (event.added) {\n                try {\n                    for (var _c = tslib_1.__values(event.added), _d = _c.next(); !_d.done; _d = _c.next()) {\n                        var item = _d.value;\n                        item.selected = true;\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n            }\n            if (event.removed) {\n                try {\n                    for (var _e = tslib_1.__values(event.removed), _f = _e.next(); !_f.done; _f = _e.next()) {\n                        var item = _f.value;\n                        item.selected = false;\n                    }\n                }\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                finally {\n                    try {\n                        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n                    }\n                    finally { if (e_2) throw e_2.error; }\n                }\n            }\n        });\n    };\n    MatSelectionList.prototype.ngOnChanges = function (changes) {\n        var disableRippleChanges = changes['disableRipple'];\n        var colorChanges = changes['color'];\n        if ((disableRippleChanges && !disableRippleChanges.firstChange) ||\n            (colorChanges && !colorChanges.firstChange)) {\n            this._markOptionsForCheck();\n        }\n    };\n    MatSelectionList.prototype.ngOnDestroy = function () {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._isDestroyed = true;\n    };\n    /** Focuses the selection list. */\n    MatSelectionList.prototype.focus = function (options) {\n        this._element.nativeElement.focus(options);\n    };\n    /** Selects all of the options. */\n    MatSelectionList.prototype.selectAll = function () {\n        this._setAllOptionsSelected(true);\n    };\n    /** Deselects all of the options. */\n    MatSelectionList.prototype.deselectAll = function () {\n        this._setAllOptionsSelected(false);\n    };\n    /** Sets the focused option of the selection-list. */\n    MatSelectionList.prototype._setFocusedOption = function (option) {\n        this._keyManager.updateActiveItem(option);\n    };\n    /**\n     * Removes an option from the selection list and updates the active item.\n     * @returns Currently-active item.\n     */\n    MatSelectionList.prototype._removeOptionFromList = function (option) {\n        var optionIndex = this._getOptionIndex(option);\n        if (optionIndex > -1 && this._keyManager.activeItemIndex === optionIndex) {\n            // Check whether the option is the last item\n            if (optionIndex > 0) {\n                this._keyManager.updateActiveItem(optionIndex - 1);\n            }\n            else if (optionIndex === 0 && this.options.length > 1) {\n                this._keyManager.updateActiveItem(Math.min(optionIndex + 1, this.options.length - 1));\n            }\n        }\n        return this._keyManager.activeItem;\n    };\n    /** Passes relevant key presses to our key manager. */\n    MatSelectionList.prototype._keydown = function (event) {\n        var keyCode = event.keyCode;\n        var manager = this._keyManager;\n        var previousFocusIndex = manager.activeItemIndex;\n        var hasModifier = hasModifierKey(event);\n        switch (keyCode) {\n            case SPACE:\n            case ENTER:\n                if (!hasModifier) {\n                    this._toggleFocusedOption();\n                    // Always prevent space from scrolling the page since the list has focus\n                    event.preventDefault();\n                }\n                break;\n            case HOME:\n            case END:\n                if (!hasModifier) {\n                    keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n                    event.preventDefault();\n                }\n                break;\n            case A:\n                if (hasModifierKey(event, 'ctrlKey')) {\n                    this.options.find(function (option) { return !option.selected; }) ? this.selectAll() : this.deselectAll();\n                    event.preventDefault();\n                }\n                break;\n            default:\n                manager.onKeydown(event);\n        }\n        if ((keyCode === UP_ARROW || keyCode === DOWN_ARROW) && event.shiftKey &&\n            manager.activeItemIndex !== previousFocusIndex) {\n            this._toggleFocusedOption();\n        }\n    };\n    /** Reports a value change to the ControlValueAccessor */\n    MatSelectionList.prototype._reportValueChange = function () {\n        // Stop reporting value changes after the list has been destroyed. This avoids\n        // cases where the list might wrongly reset its value once it is removed, but\n        // the form control is still live.\n        if (this.options && !this._isDestroyed) {\n            var value = this._getSelectedOptionValues();\n            this._onChange(value);\n            this._value = value;\n        }\n    };\n    /** Emits a change event if the selected state of an option changed. */\n    MatSelectionList.prototype._emitChangeEvent = function (option) {\n        this.selectionChange.emit(new MatSelectionListChange(this, option));\n    };\n    /** Implemented as part of ControlValueAccessor. */\n    MatSelectionList.prototype.writeValue = function (values) {\n        this._value = values;\n        if (this.options) {\n            this._setOptionsFromValues(values || []);\n        }\n    };\n    /** Implemented as a part of ControlValueAccessor. */\n    MatSelectionList.prototype.setDisabledState = function (isDisabled) {\n        this.disabled = isDisabled;\n    };\n    /** Implemented as part of ControlValueAccessor. */\n    MatSelectionList.prototype.registerOnChange = function (fn) {\n        this._onChange = fn;\n    };\n    /** Implemented as part of ControlValueAccessor. */\n    MatSelectionList.prototype.registerOnTouched = function (fn) {\n        this._onTouched = fn;\n    };\n    /** Sets the selected options based on the specified values. */\n    MatSelectionList.prototype._setOptionsFromValues = function (values) {\n        var _this = this;\n        this.options.forEach(function (option) { return option._setSelected(false); });\n        values.forEach(function (value) {\n            var correspondingOption = _this.options.find(function (option) {\n                // Skip options that are already in the model. This allows us to handle cases\n                // where the same primitive value is selected multiple times.\n                return option.selected ? false : _this.compareWith(option.value, value);\n            });\n            if (correspondingOption) {\n                correspondingOption._setSelected(true);\n            }\n        });\n    };\n    /** Returns the values of the selected options. */\n    MatSelectionList.prototype._getSelectedOptionValues = function () {\n        return this.options.filter(function (option) { return option.selected; }).map(function (option) { return option.value; });\n    };\n    /** Toggles the state of the currently focused option if enabled. */\n    MatSelectionList.prototype._toggleFocusedOption = function () {\n        var focusedIndex = this._keyManager.activeItemIndex;\n        if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\n            var focusedOption = this.options.toArray()[focusedIndex];\n            if (focusedOption && !focusedOption.disabled) {\n                focusedOption.toggle();\n                // Emit a change event because the focused option changed its state through user\n                // interaction.\n                this._emitChangeEvent(focusedOption);\n            }\n        }\n    };\n    /**\n     * Sets the selected state on all of the options\n     * and emits an event if anything changed.\n     */\n    MatSelectionList.prototype._setAllOptionsSelected = function (isSelected) {\n        // Keep track of whether anything changed, because we only want to\n        // emit the changed event when something actually changed.\n        var hasChanged = false;\n        this.options.forEach(function (option) {\n            if (option._setSelected(isSelected)) {\n                hasChanged = true;\n            }\n        });\n        if (hasChanged) {\n            this._reportValueChange();\n        }\n    };\n    /**\n     * Utility to ensure all indexes are valid.\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of options.\n     */\n    MatSelectionList.prototype._isValidIndex = function (index) {\n        return index >= 0 && index < this.options.length;\n    };\n    /** Returns the index of the specified list option. */\n    MatSelectionList.prototype._getOptionIndex = function (option) {\n        return this.options.toArray().indexOf(option);\n    };\n    /** Marks all the options to be checked in the next change detection run. */\n    MatSelectionList.prototype._markOptionsForCheck = function () {\n        if (this.options) {\n            this.options.forEach(function (option) { return option._markForCheck(); });\n        }\n    };\n    MatSelectionList.decorators = [\n        { type: Component, args: [{\n                    moduleId: module.id,\n                    selector: 'mat-selection-list',\n                    exportAs: 'matSelectionList',\n                    inputs: ['disableRipple'],\n                    host: {\n                        'role': 'listbox',\n                        '[tabIndex]': 'tabIndex',\n                        'class': 'mat-selection-list mat-list-base',\n                        '(blur)': '_onTouched()',\n                        '(keydown)': '_keydown($event)',\n                        'aria-multiselectable': 'true',\n                        '[attr.aria-disabled]': 'disabled.toString()',\n                    },\n                    template: '<ng-content></ng-content>',\n                    encapsulation: ViewEncapsulation.None,\n                    providers: [MAT_SELECTION_LIST_VALUE_ACCESSOR],\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}@media(-ms-high-contrast: active){.mat-selection-list:focus{outline-style:dotted}.mat-list-option:hover,.mat-list-option:focus,.mat-nav-list .mat-list-item:hover,.mat-nav-list .mat-list-item:focus,mat-action-list .mat-list-item:hover,mat-action-list .mat-list-item:focus{outline:dotted 1px}}@media(hover: none){.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}/*# sourceMappingURL=list.css.map */\\n\"]\n                }] }\n    ];\n    /** @nocollapse */\n    MatSelectionList.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] }\n    ]; };\n    MatSelectionList.propDecorators = {\n        options: [{ type: ContentChildren, args: [MatListOption, { descendants: true },] }],\n        selectionChange: [{ type: Output }],\n        tabIndex: [{ type: Input }],\n        color: [{ type: Input }],\n        compareWith: [{ type: Input }],\n        disabled: [{ type: Input }]\n    };\n    return MatSelectionList;\n}(_MatSelectionListMixinBase));\nexport { MatSelectionList };\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {\n  MatCommonModule,\n  MatLineModule,\n  MatPseudoCheckboxModule,\n  MatRippleModule,\n} from '@angular/material/core';\nimport {\n  MatList,\n  MatNavList,\n  MatListAvatarCssMatStyler,\n  MatListIconCssMatStyler,\n  MatListItem,\n  MatListSubheaderCssMatStyler,\n} from './list';\nimport {MatListOption, MatSelectionList} from './selection-list';\nimport {MatDividerModule} from '@angular/material/divider';\n\n\n@NgModule({\n  imports: [MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, CommonModule],\n  exports: [\n    MatList,\n    MatNavList,\n    MatListItem,\n    MatListAvatarCssMatStyler,\n    MatLineModule,\n    MatCommonModule,\n    MatListIconCssMatStyler,\n    MatListSubheaderCssMatStyler,\n    MatPseudoCheckboxModule,\n    MatSelectionList,\n    MatListOption,\n    MatDividerModule\n  ],\n  declarations: [\n    MatList,\n    MatNavList,\n    MatListItem,\n    MatListAvatarCssMatStyler,\n    MatListIconCssMatStyler,\n    MatListSubheaderCssMatStyler,\n    MatSelectionList,\n    MatListOption\n  ],\n})\nexport class MatListModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './list-module';\nexport * from './list';\nexport * from './selection-list';\n\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["mixinDisableRipple","tslib_1.__extends","Subject","Component","ViewEncapsulation","ChangeDetectionStrategy","ElementRef","Directive","takeUntil","setLines","ChangeDetectorRef","Optional","ContentChildren","MatLine","ContentChild","NG_VALUE_ACCESSOR","forwardRef","coerceBooleanProperty","Inject","ViewChild","Input","EventEmitter","SelectionModel","FocusKeyManager","tslib_1.__values","hasModifierKey","SPACE","ENTER","HOME","END","A","UP_ARROW","DOWN_ARROW","Attribute","Output","NgModule","MatLineModule","MatRippleModule","MatCommonModule","MatPseudoCheckboxModule","CommonModule","MatDividerModule"],"mappings":"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"}