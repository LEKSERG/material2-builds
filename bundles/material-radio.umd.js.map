{"version":3,"file":"material-radio.umd.js","sources":["npm_package.esm5/src/material/radio/radio.js","../../../../../../src/material/radio/radio-module.ts","../../../../../../src/material/radio/public-api.ts","../../../../../../src/material/radio/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChildren, Directive, ElementRef, EventEmitter, forwardRef, Inject, InjectionToken, Input, Optional, Output, QueryList, ViewChild, ViewEncapsulation, } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { mixinDisableRipple, mixinTabIndex, } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nexport var MAT_RADIO_DEFAULT_OPTIONS = new InjectionToken('mat-radio-default-options', {\n    providedIn: 'root',\n    factory: MAT_RADIO_DEFAULT_OPTIONS_FACTORY\n});\nexport function MAT_RADIO_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        color: 'accent'\n    };\n}\n// Increasing integer for generating unique ids for radio components.\nvar nextUniqueId = 0;\n/**\n * Provider Expression that allows mat-radio-group to register as a ControlValueAccessor. This\n * allows it to support [(ngModel)] and ngControl.\n * @docs-private\n */\nexport var MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return MatRadioGroup; }),\n    multi: true\n};\n/** Change event object emitted by MatRadio and MatRadioGroup. */\nvar MatRadioChange = /** @class */ (function () {\n    function MatRadioChange(\n    /** The MatRadioButton that emits the change event. */\n    source, \n    /** The value of the MatRadioButton. */\n    value) {\n        this.source = source;\n        this.value = value;\n    }\n    return MatRadioChange;\n}());\nexport { MatRadioChange };\n/**\n * A group of radio buttons. May contain one or more `<mat-radio-button>` elements.\n */\nvar MatRadioGroup = /** @class */ (function () {\n    function MatRadioGroup(_changeDetector) {\n        this._changeDetector = _changeDetector;\n        /** Selected value for the radio group. */\n        this._value = null;\n        /** The HTML name attribute applied to radio buttons in this group. */\n        this._name = \"mat-radio-group-\" + nextUniqueId++;\n        /** The currently selected radio button. Should match value. */\n        this._selected = null;\n        /** Whether the `value` has been set to its initial value. */\n        this._isInitialized = false;\n        /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n        this._labelPosition = 'after';\n        /** Whether the radio group is disabled. */\n        this._disabled = false;\n        /** Whether the radio group is required. */\n        this._required = false;\n        /** The method to be called in order to update ngModel */\n        this._controlValueAccessorChangeFn = function () { };\n        /**\n         * onTouch function registered via registerOnTouch (ControlValueAccessor).\n         * @docs-private\n         */\n        this.onTouched = function () { };\n        /**\n         * Event emitted when the group value changes.\n         * Change events are only emitted when the value changes due to user interaction with\n         * a radio button (the same behavior as `<input type-\"radio\">`).\n         */\n        this.change = new EventEmitter();\n    }\n    Object.defineProperty(MatRadioGroup.prototype, \"name\", {\n        /** Name of the radio button group. All radio buttons inside this group will use this name. */\n        get: function () { return this._name; },\n        set: function (value) {\n            this._name = value;\n            this._updateRadioButtonNames();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatRadioGroup.prototype, \"labelPosition\", {\n        /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n        get: function () {\n            return this._labelPosition;\n        },\n        set: function (v) {\n            this._labelPosition = v === 'before' ? 'before' : 'after';\n            this._markRadiosForCheck();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatRadioGroup.prototype, \"value\", {\n        /**\n         * Value for the radio-group. Should equal the value of the selected radio button if there is\n         * a corresponding radio button with a matching value. If there is not such a corresponding\n         * radio button, this value persists to be applied in case a new radio button is added with a\n         * matching value.\n         */\n        get: function () { return this._value; },\n        set: function (newValue) {\n            if (this._value !== newValue) {\n                // Set this before proceeding to ensure no circular loop occurs with selection.\n                this._value = newValue;\n                this._updateSelectedRadioFromValue();\n                this._checkSelectedRadioButton();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MatRadioGroup.prototype._checkSelectedRadioButton = function () {\n        if (this._selected && !this._selected.checked) {\n            this._selected.checked = true;\n        }\n    };\n    Object.defineProperty(MatRadioGroup.prototype, \"selected\", {\n        /**\n         * The currently selected radio button. If set to a new radio button, the radio group value\n         * will be updated to match the new selected button.\n         */\n        get: function () { return this._selected; },\n        set: function (selected) {\n            this._selected = selected;\n            this.value = selected ? selected.value : null;\n            this._checkSelectedRadioButton();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatRadioGroup.prototype, \"disabled\", {\n        /** Whether the radio group is disabled */\n        get: function () { return this._disabled; },\n        set: function (value) {\n            this._disabled = coerceBooleanProperty(value);\n            this._markRadiosForCheck();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatRadioGroup.prototype, \"required\", {\n        /** Whether the radio group is required */\n        get: function () { return this._required; },\n        set: function (value) {\n            this._required = coerceBooleanProperty(value);\n            this._markRadiosForCheck();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Initialize properties once content children are available.\n     * This allows us to propagate relevant attributes to associated buttons.\n     */\n    MatRadioGroup.prototype.ngAfterContentInit = function () {\n        // Mark this component as initialized in AfterContentInit because the initial value can\n        // possibly be set by NgModel on MatRadioGroup, and it is possible that the OnInit of the\n        // NgModel occurs *after* the OnInit of the MatRadioGroup.\n        this._isInitialized = true;\n    };\n    /**\n     * Mark this group as being \"touched\" (for ngModel). Meant to be called by the contained\n     * radio buttons upon their blur.\n     */\n    MatRadioGroup.prototype._touch = function () {\n        if (this.onTouched) {\n            this.onTouched();\n        }\n    };\n    MatRadioGroup.prototype._updateRadioButtonNames = function () {\n        var _this = this;\n        if (this._radios) {\n            this._radios.forEach(function (radio) {\n                radio.name = _this.name;\n                radio._markForCheck();\n            });\n        }\n    };\n    /** Updates the `selected` radio button from the internal _value state. */\n    MatRadioGroup.prototype._updateSelectedRadioFromValue = function () {\n        var _this = this;\n        // If the value already matches the selected radio, do nothing.\n        var isAlreadySelected = this._selected !== null && this._selected.value === this._value;\n        if (this._radios && !isAlreadySelected) {\n            this._selected = null;\n            this._radios.forEach(function (radio) {\n                radio.checked = _this.value === radio.value;\n                if (radio.checked) {\n                    _this._selected = radio;\n                }\n            });\n        }\n    };\n    /** Dispatch change event with current selection and group value. */\n    MatRadioGroup.prototype._emitChangeEvent = function () {\n        if (this._isInitialized) {\n            this.change.emit(new MatRadioChange(this._selected, this._value));\n        }\n    };\n    MatRadioGroup.prototype._markRadiosForCheck = function () {\n        if (this._radios) {\n            this._radios.forEach(function (radio) { return radio._markForCheck(); });\n        }\n    };\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param value\n     */\n    MatRadioGroup.prototype.writeValue = function (value) {\n        this.value = value;\n        this._changeDetector.markForCheck();\n    };\n    /**\n     * Registers a callback to be triggered when the model value changes.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    MatRadioGroup.prototype.registerOnChange = function (fn) {\n        this._controlValueAccessorChangeFn = fn;\n    };\n    /**\n     * Registers a callback to be triggered when the control is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    MatRadioGroup.prototype.registerOnTouched = function (fn) {\n        this.onTouched = fn;\n    };\n    /**\n     * Sets the disabled state of the control. Implemented as a part of ControlValueAccessor.\n     * @param isDisabled Whether the control should be disabled.\n     */\n    MatRadioGroup.prototype.setDisabledState = function (isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetector.markForCheck();\n    };\n    MatRadioGroup.decorators = [\n        { type: Directive, args: [{\n                    selector: 'mat-radio-group',\n                    exportAs: 'matRadioGroup',\n                    providers: [MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR],\n                    host: {\n                        'role': 'radiogroup',\n                        'class': 'mat-radio-group',\n                    },\n                },] }\n    ];\n    /** @nocollapse */\n    MatRadioGroup.ctorParameters = function () { return [\n        { type: ChangeDetectorRef }\n    ]; };\n    MatRadioGroup.propDecorators = {\n        change: [{ type: Output }],\n        _radios: [{ type: ContentChildren, args: [forwardRef(function () { return MatRadioButton; }), { descendants: true },] }],\n        color: [{ type: Input }],\n        name: [{ type: Input }],\n        labelPosition: [{ type: Input }],\n        value: [{ type: Input }],\n        selected: [{ type: Input }],\n        disabled: [{ type: Input }],\n        required: [{ type: Input }]\n    };\n    return MatRadioGroup;\n}());\nexport { MatRadioGroup };\n// Boilerplate for applying mixins to MatRadioButton.\n/** @docs-private */\nvar MatRadioButtonBase = /** @class */ (function () {\n    function MatRadioButtonBase(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n    return MatRadioButtonBase;\n}());\n// As per Material design specifications the selection control radio should use the accent color\n// palette by default. https://material.io/guidelines/components/selection-controls.html\nvar _MatRadioButtonMixinBase = mixinDisableRipple(mixinTabIndex(MatRadioButtonBase));\n/**\n * A Material design radio-button. Typically placed inside of `<mat-radio-group>` elements.\n */\nvar MatRadioButton = /** @class */ (function (_super) {\n    tslib_1.__extends(MatRadioButton, _super);\n    function MatRadioButton(radioGroup, elementRef, _changeDetector, _focusMonitor, _radioDispatcher, _animationMode, _providerOverride) {\n        var _this = _super.call(this, elementRef) || this;\n        _this._changeDetector = _changeDetector;\n        _this._focusMonitor = _focusMonitor;\n        _this._radioDispatcher = _radioDispatcher;\n        _this._animationMode = _animationMode;\n        _this._providerOverride = _providerOverride;\n        _this._uniqueId = \"mat-radio-\" + ++nextUniqueId;\n        /** The unique ID for the radio button. */\n        _this.id = _this._uniqueId;\n        /**\n         * Event emitted when the checked state of this radio button changes.\n         * Change events are only emitted when the value changes due to user interaction with\n         * the radio button (the same behavior as `<input type-\"radio\">`).\n         */\n        _this.change = new EventEmitter();\n        /** Whether this radio is checked. */\n        _this._checked = false;\n        /** Value assigned to this radio. */\n        _this._value = null;\n        /** Unregister function for _radioDispatcher */\n        _this._removeUniqueSelectionListener = function () { };\n        // Assertions. Ideally these should be stripped out by the compiler.\n        // TODO(jelbourn): Assert that there's no name binding AND a parent radio group.\n        _this.radioGroup = radioGroup;\n        _this._removeUniqueSelectionListener =\n            _radioDispatcher.listen(function (id, name) {\n                if (id !== _this.id && name === _this.name) {\n                    _this.checked = false;\n                }\n            });\n        return _this;\n    }\n    Object.defineProperty(MatRadioButton.prototype, \"checked\", {\n        /** Whether this radio button is checked. */\n        get: function () { return this._checked; },\n        set: function (value) {\n            var newCheckedState = coerceBooleanProperty(value);\n            if (this._checked !== newCheckedState) {\n                this._checked = newCheckedState;\n                if (newCheckedState && this.radioGroup && this.radioGroup.value !== this.value) {\n                    this.radioGroup.selected = this;\n                }\n                else if (!newCheckedState && this.radioGroup && this.radioGroup.value === this.value) {\n                    // When unchecking the selected radio button, update the selected radio\n                    // property on the group.\n                    this.radioGroup.selected = null;\n                }\n                if (newCheckedState) {\n                    // Notify all radio buttons with the same name to un-check.\n                    this._radioDispatcher.notify(this.id, this.name);\n                }\n                this._changeDetector.markForCheck();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatRadioButton.prototype, \"value\", {\n        /** The value of this radio button. */\n        get: function () { return this._value; },\n        set: function (value) {\n            if (this._value !== value) {\n                this._value = value;\n                if (this.radioGroup !== null) {\n                    if (!this.checked) {\n                        // Update checked when the value changed to match the radio group's value\n                        this.checked = this.radioGroup.value === value;\n                    }\n                    if (this.checked) {\n                        this.radioGroup.selected = this;\n                    }\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatRadioButton.prototype, \"labelPosition\", {\n        /** Whether the label should appear after or before the radio button. Defaults to 'after' */\n        get: function () {\n            return this._labelPosition || (this.radioGroup && this.radioGroup.labelPosition) || 'after';\n        },\n        set: function (value) {\n            this._labelPosition = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatRadioButton.prototype, \"disabled\", {\n        /** Whether the radio button is disabled. */\n        get: function () {\n            return this._disabled || (this.radioGroup !== null && this.radioGroup.disabled);\n        },\n        set: function (value) {\n            var newDisabledState = coerceBooleanProperty(value);\n            if (this._disabled !== newDisabledState) {\n                this._disabled = newDisabledState;\n                this._changeDetector.markForCheck();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatRadioButton.prototype, \"required\", {\n        /** Whether the radio button is required. */\n        get: function () {\n            return this._required || (this.radioGroup && this.radioGroup.required);\n        },\n        set: function (value) {\n            this._required = coerceBooleanProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatRadioButton.prototype, \"color\", {\n        /** Theme color of the radio button. */\n        get: function () {\n            return this._color ||\n                (this.radioGroup && this.radioGroup.color) ||\n                this._providerOverride && this._providerOverride.color || 'accent';\n        },\n        set: function (newValue) { this._color = newValue; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatRadioButton.prototype, \"inputId\", {\n        /** ID of the native input element inside `<mat-radio-button>` */\n        get: function () { return (this.id || this._uniqueId) + \"-input\"; },\n        enumerable: true,\n        configurable: true\n    });\n    /** Focuses the radio button. */\n    MatRadioButton.prototype.focus = function (options) {\n        this._focusMonitor.focusVia(this._inputElement, 'keyboard', options);\n    };\n    /**\n     * Marks the radio button as needing checking for change detection.\n     * This method is exposed because the parent radio group will directly\n     * update bound properties of the radio button.\n     */\n    MatRadioButton.prototype._markForCheck = function () {\n        // When group value changes, the button will not be notified. Use `markForCheck` to explicit\n        // update radio button's status\n        this._changeDetector.markForCheck();\n    };\n    MatRadioButton.prototype.ngOnInit = function () {\n        if (this.radioGroup) {\n            // If the radio is inside a radio group, determine if it should be checked\n            this.checked = this.radioGroup.value === this._value;\n            // Copy name from parent radio group\n            this.name = this.radioGroup.name;\n        }\n    };\n    MatRadioButton.prototype.ngAfterViewInit = function () {\n        var _this = this;\n        this._focusMonitor\n            .monitor(this._elementRef, true)\n            .subscribe(function (focusOrigin) {\n            if (!focusOrigin && _this.radioGroup) {\n                _this.radioGroup._touch();\n            }\n        });\n    };\n    MatRadioButton.prototype.ngOnDestroy = function () {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        this._removeUniqueSelectionListener();\n    };\n    /** Dispatch change event with current value. */\n    MatRadioButton.prototype._emitChangeEvent = function () {\n        this.change.emit(new MatRadioChange(this, this._value));\n    };\n    MatRadioButton.prototype._isRippleDisabled = function () {\n        return this.disableRipple || this.disabled;\n    };\n    MatRadioButton.prototype._onInputClick = function (event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `radio-button` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    };\n    /**\n     * Triggered when the radio button received a click or the input recognized any change.\n     * Clicking on a label element, will trigger a change event on the associated input.\n     */\n    MatRadioButton.prototype._onInputChange = function (event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n        var groupValueChanged = this.radioGroup && this.value !== this.radioGroup.value;\n        this.checked = true;\n        this._emitChangeEvent();\n        if (this.radioGroup) {\n            this.radioGroup._controlValueAccessorChangeFn(this.value);\n            if (groupValueChanged) {\n                this.radioGroup._emitChangeEvent();\n            }\n        }\n    };\n    MatRadioButton.decorators = [\n        { type: Component, args: [{\n                    moduleId: module.id,\n                    selector: 'mat-radio-button',\n                    template: \"<!-- TODO(jelbourn): render the radio on either side of the content -->\\n<!-- TODO(mtlin): Evaluate trade-offs of using native radio vs. cost of additional bindings. -->\\n<label [attr.for]=\\\"inputId\\\" class=\\\"mat-radio-label\\\" #label>\\n  <!-- The actual 'radio' part of the control. -->\\n  <div class=\\\"mat-radio-container\\\">\\n    <div class=\\\"mat-radio-outer-circle\\\"></div>\\n    <div class=\\\"mat-radio-inner-circle\\\"></div>\\n    <div mat-ripple class=\\\"mat-radio-ripple\\\"\\n         [matRippleTrigger]=\\\"label\\\"\\n         [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n         [matRippleCentered]=\\\"true\\\"\\n         [matRippleRadius]=\\\"20\\\"\\n         [matRippleAnimation]=\\\"{enterDuration: 150}\\\">\\n\\n      <div class=\\\"mat-ripple-element mat-radio-persistent-ripple\\\"></div>\\n    </div>\\n\\n    <input #input class=\\\"mat-radio-input cdk-visually-hidden\\\" type=\\\"radio\\\"\\n        [id]=\\\"inputId\\\"\\n        [checked]=\\\"checked\\\"\\n        [disabled]=\\\"disabled\\\"\\n        [tabIndex]=\\\"tabIndex\\\"\\n        [attr.name]=\\\"name\\\"\\n        [attr.value]=\\\"value\\\"\\n        [required]=\\\"required\\\"\\n        [attr.aria-label]=\\\"ariaLabel\\\"\\n        [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n        [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n        (change)=\\\"_onInputChange($event)\\\"\\n        (click)=\\\"_onInputClick($event)\\\">\\n  </div>\\n\\n  <!-- The label content for radio control. -->\\n  <div class=\\\"mat-radio-label-content\\\" [class.mat-radio-label-before]=\\\"labelPosition == 'before'\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </div>\\n</label>\\n\",\n                    inputs: ['disableRipple', 'tabIndex'],\n                    encapsulation: ViewEncapsulation.None,\n                    exportAs: 'matRadioButton',\n                    host: {\n                        'class': 'mat-radio-button',\n                        '[class.mat-radio-checked]': 'checked',\n                        '[class.mat-radio-disabled]': 'disabled',\n                        '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                        '[class.mat-primary]': 'color === \"primary\"',\n                        '[class.mat-accent]': 'color === \"accent\"',\n                        '[class.mat-warn]': 'color === \"warn\"',\n                        // Needs to be -1 so the `focus` event still fires.\n                        '[attr.tabindex]': '-1',\n                        '[attr.id]': 'id',\n                        '[attr.aria-label]': 'null',\n                        '[attr.aria-labelledby]': 'null',\n                        '[attr.aria-describedby]': 'null',\n                        // Note: under normal conditions focus shouldn't land on this element, however it may be\n                        // programmatically set, for example inside of a focus trap, in this case we want to forward\n                        // the focus to the native element.\n                        '(focus)': '_inputElement.nativeElement.focus()',\n                    },\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    styles: [\".mat-radio-button{display:inline-block;-webkit-tap-highlight-color:transparent;outline:0}.mat-radio-label{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;display:inline-flex;align-items:center;white-space:nowrap;vertical-align:middle;width:100%}.mat-radio-container{box-sizing:border-box;display:inline-block;position:relative;width:20px;height:20px;flex-shrink:0}.mat-radio-outer-circle{box-sizing:border-box;height:20px;left:0;position:absolute;top:0;transition:border-color ease 280ms;width:20px;border-width:2px;border-style:solid;border-radius:50%}._mat-animation-noopable .mat-radio-outer-circle{transition:none}.mat-radio-inner-circle{border-radius:50%;box-sizing:border-box;height:20px;left:0;position:absolute;top:0;transition:transform ease 280ms,background-color ease 280ms;width:20px;transform:scale(0.001)}._mat-animation-noopable .mat-radio-inner-circle{transition:none}.mat-radio-checked .mat-radio-inner-circle{transform:scale(0.5)}@media(-ms-high-contrast: active){.mat-radio-checked .mat-radio-inner-circle{border:solid 10px}}.mat-radio-label-content{-webkit-user-select:auto;-moz-user-select:auto;-ms-user-select:auto;user-select:auto;display:inline-block;order:0;line-height:inherit;padding-left:8px;padding-right:0}[dir=rtl] .mat-radio-label-content{padding-right:8px;padding-left:0}.mat-radio-label-content.mat-radio-label-before{order:-1;padding-left:0;padding-right:8px}[dir=rtl] .mat-radio-label-content.mat-radio-label-before{padding-right:0;padding-left:8px}.mat-radio-disabled,.mat-radio-disabled .mat-radio-label{cursor:default}.mat-radio-button .mat-radio-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-radio-button .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple){opacity:.16}.mat-radio-persistent-ripple{width:100%;height:100%;transform:none}.mat-radio-container:hover .mat-radio-persistent-ripple{opacity:.04}.mat-radio-button:not(.mat-radio-disabled).cdk-keyboard-focused .mat-radio-persistent-ripple,.mat-radio-button:not(.mat-radio-disabled).cdk-program-focused .mat-radio-persistent-ripple{opacity:.12}.mat-radio-persistent-ripple,.mat-radio-disabled .mat-radio-container:hover .mat-radio-persistent-ripple{opacity:0}@media(hover: none){.mat-radio-container:hover .mat-radio-persistent-ripple{display:none}}.mat-radio-input{bottom:0;left:50%}@media(-ms-high-contrast: active){.mat-radio-disabled{opacity:.5}}/*# sourceMappingURL=radio.css.map */\\n\"]\n                }] }\n    ];\n    /** @nocollapse */\n    MatRadioButton.ctorParameters = function () { return [\n        { type: MatRadioGroup, decorators: [{ type: Optional }] },\n        { type: ElementRef },\n        { type: ChangeDetectorRef },\n        { type: FocusMonitor },\n        { type: UniqueSelectionDispatcher },\n        { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RADIO_DEFAULT_OPTIONS,] }] }\n    ]; };\n    MatRadioButton.propDecorators = {\n        id: [{ type: Input }],\n        name: [{ type: Input }],\n        ariaLabel: [{ type: Input, args: ['aria-label',] }],\n        ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n        ariaDescribedby: [{ type: Input, args: ['aria-describedby',] }],\n        checked: [{ type: Input }],\n        value: [{ type: Input }],\n        labelPosition: [{ type: Input }],\n        disabled: [{ type: Input }],\n        required: [{ type: Input }],\n        color: [{ type: Input }],\n        change: [{ type: Output }],\n        _inputElement: [{ type: ViewChild, args: ['input', { static: false },] }]\n    };\n    return MatRadioButton;\n}(_MatRadioButtonMixinBase));\nexport { MatRadioButton };\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatCommonModule, MatRippleModule} from '@angular/material/core';\nimport {MatRadioButton, MatRadioGroup} from './radio';\n\n\n@NgModule({\n  imports: [CommonModule, MatRippleModule, MatCommonModule],\n  exports: [MatRadioGroup, MatRadioButton, MatCommonModule],\n  declarations: [MatRadioGroup, MatRadioButton],\n})\nexport class MatRadioModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './radio-module';\nexport * from './radio';\n\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["InjectionToken","NG_VALUE_ACCESSOR","forwardRef","EventEmitter","coerceBooleanProperty","Directive","ChangeDetectorRef","Output","ContentChildren","Input","mixinDisableRipple","mixinTabIndex","tslib_1.__extends","Component","ViewEncapsulation","ChangeDetectionStrategy","Optional","ElementRef","FocusMonitor","UniqueSelectionDispatcher","Inject","ANIMATION_MODULE_TYPE","ViewChild","NgModule","CommonModule","MatRippleModule","MatCommonModule"],"mappings":"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"}