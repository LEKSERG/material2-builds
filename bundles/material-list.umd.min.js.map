{"version":3,"sources":["src/material/material-list.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","material","list","common","core","tslib","rxjs","operators","cdk","a11y","coercion","collections","keycodes","forms","divider","this","core$1","_MatListMixinBase","mixinDisableRipple","MatListBase","_MatListItemMixinBase","MatListItemBase","MatNavList","_super","_this","apply","arguments","_stateChanges","Subject","__extends","prototype","ngOnChanges","next","ngOnDestroy","complete","decorators","type","Component","args","moduleId","id","selector","exportAs","host","role","class","template","inputs","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","styles","MatList","_elementRef","call","_getListType","nativeElement","classList","add","nodeName","toLowerCase","ctorParameters","ElementRef","MatListAvatarCssMatStyler","Directive","MatListIconCssMatStyler","MatListSubheaderCssMatStyler","MatListItem","_element","_changeDetectorRef","navList","_isInteractiveList","_destroyed","_list","element","_getHostElement","hasAttribute","setAttribute","pipe","takeUntil","subscribe","markForCheck","ngAfterContentInit","setLines","_lines","_isRippleDisabled","disableRipple","[class.mat-list-item-avatar]","[class.mat-list-item-with-avatar]","ChangeDetectorRef","Optional","propDecorators","ContentChildren","MatLine","descendants","_avatar","ContentChild","_icon","_MatSelectionListMixinBase","MatSelectionListBase","_MatListOptionMixinBase","MatListOptionBase","MAT_SELECTION_LIST_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","MatSelectionList","multi","MatSelectionListChange","source","option","MatListOption","_changeDetector","selectionList","_selected","_disabled","_hasFocus","checkboxPosition","Object","defineProperty","get","_color","color","set","newValue","enumerable","configurable","_value","selected","value","disabled","coerceBooleanProperty","selectedOptions","isSelected","_setSelected","_reportValueChange","ngOnInit","some","compareWith","wasSelected","Promise","resolve","then","hadFocus","newActiveItem","_removeOptionFromList","focus","toggle","getLabel","_text","textContent","_handleClick","_emitChangeEvent","_handleFocus","_setFocusedOption","_handleBlur","_onTouched","select","deselect","_markForCheck","(focus)","(blur)","(click)","tabindex","[class.mat-list-item-disabled]","[class.mat-primary]","[class.mat-accent]","[class.mat-warn]","[attr.aria-selected]","[attr.aria-disabled]","Inject","ViewChild","Input","tabIndex","selectionChange","EventEmitter","a1","a2","SelectionModel","_onChange","_","parseInt","_markOptionsForCheck","_keyManager","FocusKeyManager","options","withWrap","withTypeAhead","skipPredicate","withAllowedModifierKeys","_setOptionsFromValues","changed","event","e_1","_a","e_2","_b","added","_c","__values","_d","done","e_1_1","error","return","removed","_e","_f","e_2_1","changes","disableRippleChanges","colorChanges","firstChange","_isDestroyed","selectAll","_setAllOptionsSelected","deselectAll","updateActiveItem","optionIndex","_getOptionIndex","activeItemIndex","length","Math","min","activeItem","_keydown","keyCode","manager","previousFocusIndex","hasModifier","hasModifierKey","SPACE","ENTER","_toggleFocusedOption","preventDefault","HOME","END","setFirstItemActive","setLastItemActive","A","find","onKeydown","UP_ARROW","DOWN_ARROW","shiftKey","_getSelectedOptionValues","emit","writeValue","values","setDisabledState","isDisabled","registerOnChange","fn","registerOnTouched","forEach","correspondingOption","filter","map","focusedIndex","_isValidIndex","focusedOption","toArray","hasChanged","index","indexOf","[tabIndex]","(keydown)","aria-multiselectable","providers","String","Attribute","Output","MatListModule","NgModule","imports","MatLineModule","MatRippleModule","MatCommonModule","MatPseudoCheckboxModule","CommonModule","MatDividerModule","declarations"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/common'), require('@angular/core'), require('@angular/material/core'), require('tslib'), require('rxjs'), require('rxjs/operators'), require('@angular/cdk/a11y'), require('@angular/cdk/coercion'), require('@angular/cdk/collections'), require('@angular/cdk/keycodes'), require('@angular/forms'), require('@angular/material/divider')) :\n    typeof define === 'function' && define.amd ? define('@angular/material/list', ['exports', '@angular/common', '@angular/core', '@angular/material/core', 'tslib', 'rxjs', 'rxjs/operators', '@angular/cdk/a11y', '@angular/cdk/coercion', '@angular/cdk/collections', '@angular/cdk/keycodes', '@angular/forms', '@angular/material/divider'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.material = global.ng.material || {}, global.ng.material.list = {}), global.ng.common, global.ng.core, global.ng.material.core, global.tslib, global.rxjs, global.rxjs.operators, global.ng.cdk.a11y, global.ng.cdk.coercion, global.ng.cdk.collections, global.ng.cdk.keycodes, global.ng.forms, global.ng.material.divider));\n}(this, function (exports, common, core, core$1, tslib, rxjs, operators, a11y, coercion, collections, keycodes, forms, divider) { 'use strict';\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Boilerplate for applying mixins to MatList.\n    /** @docs-private */\n    var MatListBase = /** @class */ (function () {\n        function MatListBase() {\n        }\n        return MatListBase;\n    }());\n    var _MatListMixinBase = core$1.mixinDisableRipple(MatListBase);\n    // Boilerplate for applying mixins to MatListItem.\n    /** @docs-private */\n    var MatListItemBase = /** @class */ (function () {\n        function MatListItemBase() {\n        }\n        return MatListItemBase;\n    }());\n    var _MatListItemMixinBase = core$1.mixinDisableRipple(MatListItemBase);\n    var MatNavList = /** @class */ (function (_super) {\n        tslib.__extends(MatNavList, _super);\n        function MatNavList() {\n            var _this = _super !== null && _super.apply(this, arguments) || this;\n            /** Emits when the state of the list changes. */\n            _this._stateChanges = new rxjs.Subject();\n            return _this;\n        }\n        MatNavList.prototype.ngOnChanges = function () {\n            this._stateChanges.next();\n        };\n        MatNavList.prototype.ngOnDestroy = function () {\n            this._stateChanges.complete();\n        };\n        MatNavList.decorators = [\n            { type: core.Component, args: [{\n                        moduleId: module.id,\n                        selector: 'mat-nav-list',\n                        exportAs: 'matNavList',\n                        host: {\n                            'role': 'navigation',\n                            'class': 'mat-nav-list mat-list-base'\n                        },\n                        template: \"<ng-content></ng-content>\\n\\n\",\n                        inputs: ['disableRipple'],\n                        encapsulation: core.ViewEncapsulation.None,\n                        changeDetection: core.ChangeDetectionStrategy.OnPush,\n                        styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}@media(-ms-high-contrast: active){.mat-selection-list:focus{outline-style:dotted}.mat-list-option:hover,.mat-list-option:focus,.mat-nav-list .mat-list-item:hover,.mat-nav-list .mat-list-item:focus,mat-action-list .mat-list-item:hover,mat-action-list .mat-list-item:focus{outline:dotted 1px}}@media(hover: none){.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"]\n                    }] }\n        ];\n        return MatNavList;\n    }(_MatListMixinBase));\n    var MatList = /** @class */ (function (_super) {\n        tslib.__extends(MatList, _super);\n        function MatList(_elementRef) {\n            var _this = _super.call(this) || this;\n            _this._elementRef = _elementRef;\n            /** Emits when the state of the list changes. */\n            _this._stateChanges = new rxjs.Subject();\n            if (_this._getListType() === 'action-list') {\n                _elementRef.nativeElement.classList.add('mat-action-list');\n            }\n            return _this;\n        }\n        MatList.prototype._getListType = function () {\n            var nodeName = this._elementRef.nativeElement.nodeName.toLowerCase();\n            if (nodeName === 'mat-list') {\n                return 'list';\n            }\n            if (nodeName === 'mat-action-list') {\n                return 'action-list';\n            }\n            return null;\n        };\n        MatList.prototype.ngOnChanges = function () {\n            this._stateChanges.next();\n        };\n        MatList.prototype.ngOnDestroy = function () {\n            this._stateChanges.complete();\n        };\n        MatList.decorators = [\n            { type: core.Component, args: [{\n                        moduleId: module.id,\n                        selector: 'mat-list, mat-action-list',\n                        exportAs: 'matList',\n                        template: \"<ng-content></ng-content>\\n\\n\",\n                        host: {\n                            'class': 'mat-list mat-list-base'\n                        },\n                        inputs: ['disableRipple'],\n                        encapsulation: core.ViewEncapsulation.None,\n                        changeDetection: core.ChangeDetectionStrategy.OnPush,\n                        styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}@media(-ms-high-contrast: active){.mat-selection-list:focus{outline-style:dotted}.mat-list-option:hover,.mat-list-option:focus,.mat-nav-list .mat-list-item:hover,.mat-nav-list .mat-list-item:focus,mat-action-list .mat-list-item:hover,mat-action-list .mat-list-item:focus{outline:dotted 1px}}@media(hover: none){.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"]\n                    }] }\n        ];\n        /** @nocollapse */\n        MatList.ctorParameters = function () { return [\n            { type: core.ElementRef }\n        ]; };\n        return MatList;\n    }(_MatListMixinBase));\n    /**\n     * Directive whose purpose is to add the mat- CSS styling to this selector.\n     * @docs-private\n     */\n    var MatListAvatarCssMatStyler = /** @class */ (function () {\n        function MatListAvatarCssMatStyler() {\n        }\n        MatListAvatarCssMatStyler.decorators = [\n            { type: core.Directive, args: [{\n                        selector: '[mat-list-avatar], [matListAvatar]',\n                        host: { 'class': 'mat-list-avatar' }\n                    },] }\n        ];\n        return MatListAvatarCssMatStyler;\n    }());\n    /**\n     * Directive whose purpose is to add the mat- CSS styling to this selector.\n     * @docs-private\n     */\n    var MatListIconCssMatStyler = /** @class */ (function () {\n        function MatListIconCssMatStyler() {\n        }\n        MatListIconCssMatStyler.decorators = [\n            { type: core.Directive, args: [{\n                        selector: '[mat-list-icon], [matListIcon]',\n                        host: { 'class': 'mat-list-icon' }\n                    },] }\n        ];\n        return MatListIconCssMatStyler;\n    }());\n    /**\n     * Directive whose purpose is to add the mat- CSS styling to this selector.\n     * @docs-private\n     */\n    var MatListSubheaderCssMatStyler = /** @class */ (function () {\n        function MatListSubheaderCssMatStyler() {\n        }\n        MatListSubheaderCssMatStyler.decorators = [\n            { type: core.Directive, args: [{\n                        selector: '[mat-subheader], [matSubheader]',\n                        host: { 'class': 'mat-subheader' }\n                    },] }\n        ];\n        return MatListSubheaderCssMatStyler;\n    }());\n    /** An item within a Material Design list. */\n    var MatListItem = /** @class */ (function (_super) {\n        tslib.__extends(MatListItem, _super);\n        function MatListItem(_element, _changeDetectorRef, navList, list) {\n            var _this = _super.call(this) || this;\n            _this._element = _element;\n            _this._isInteractiveList = false;\n            _this._destroyed = new rxjs.Subject();\n            _this._isInteractiveList = !!(navList || (list && list._getListType() === 'action-list'));\n            _this._list = navList || list;\n            // If no type attributed is specified for <button>, set it to \"button\".\n            // If a type attribute is already specified, do nothing.\n            var element = _this._getHostElement();\n            if (element.nodeName.toLowerCase() === 'button' && !element.hasAttribute('type')) {\n                element.setAttribute('type', 'button');\n            }\n            if (_this._list) {\n                // React to changes in the state of the parent list since\n                // some of the item's properties depend on it (e.g. `disableRipple`).\n                _this._list._stateChanges.pipe(operators.takeUntil(_this._destroyed)).subscribe(function () {\n                    _changeDetectorRef.markForCheck();\n                });\n            }\n            return _this;\n        }\n        MatListItem.prototype.ngAfterContentInit = function () {\n            core$1.setLines(this._lines, this._element);\n        };\n        MatListItem.prototype.ngOnDestroy = function () {\n            this._destroyed.next();\n            this._destroyed.complete();\n        };\n        /** Whether this list item should show a ripple effect when clicked. */\n        MatListItem.prototype._isRippleDisabled = function () {\n            return !this._isInteractiveList || this.disableRipple ||\n                !!(this._list && this._list.disableRipple);\n        };\n        /** Retrieves the DOM element of the component host. */\n        MatListItem.prototype._getHostElement = function () {\n            return this._element.nativeElement;\n        };\n        MatListItem.decorators = [\n            { type: core.Component, args: [{\n                        moduleId: module.id,\n                        selector: 'mat-list-item, a[mat-list-item], button[mat-list-item]',\n                        exportAs: 'matListItem',\n                        host: {\n                            'class': 'mat-list-item',\n                            // @breaking-change 8.0.0 Remove `mat-list-item-avatar` in favor of `mat-list-item-with-avatar`.\n                            '[class.mat-list-item-avatar]': '_avatar || _icon',\n                            '[class.mat-list-item-with-avatar]': '_avatar || _icon',\n                        },\n                        inputs: ['disableRipple'],\n                        template: \"<div class=\\\"mat-list-item-content\\\">\\n  <div class=\\\"mat-list-item-ripple\\\" mat-ripple\\n       [matRippleTrigger]=\\\"_getHostElement()\\\"\\n       [matRippleDisabled]=\\\"_isRippleDisabled()\\\">\\n  </div>\\n\\n  <ng-content select=\\\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\\\">\\n  </ng-content>\\n\\n  <div class=\\\"mat-list-text\\\"><ng-content select=\\\"[mat-line], [matLine]\\\"></ng-content></div>\\n\\n  <ng-content></ng-content>\\n</div>\\n\",\n                        encapsulation: core.ViewEncapsulation.None,\n                        changeDetection: core.ChangeDetectionStrategy.OnPush\n                    }] }\n        ];\n        /** @nocollapse */\n        MatListItem.ctorParameters = function () { return [\n            { type: core.ElementRef },\n            { type: core.ChangeDetectorRef },\n            { type: MatNavList, decorators: [{ type: core.Optional }] },\n            { type: MatList, decorators: [{ type: core.Optional }] }\n        ]; };\n        MatListItem.propDecorators = {\n            _lines: [{ type: core.ContentChildren, args: [core$1.MatLine, { descendants: true },] }],\n            _avatar: [{ type: core.ContentChild, args: [MatListAvatarCssMatStyler,] }],\n            _icon: [{ type: core.ContentChild, args: [MatListIconCssMatStyler,] }]\n        };\n        return MatListItem;\n    }(_MatListItemMixinBase));\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** @docs-private */\n    var MatSelectionListBase = /** @class */ (function () {\n        function MatSelectionListBase() {\n        }\n        return MatSelectionListBase;\n    }());\n    var _MatSelectionListMixinBase = core$1.mixinDisableRipple(MatSelectionListBase);\n    /** @docs-private */\n    var MatListOptionBase = /** @class */ (function () {\n        function MatListOptionBase() {\n        }\n        return MatListOptionBase;\n    }());\n    var _MatListOptionMixinBase = core$1.mixinDisableRipple(MatListOptionBase);\n    /** @docs-private */\n    var MAT_SELECTION_LIST_VALUE_ACCESSOR = {\n        provide: forms.NG_VALUE_ACCESSOR,\n        useExisting: core.forwardRef(function () { return MatSelectionList; }),\n        multi: true\n    };\n    /** Change event that is being fired whenever the selected state of an option changes. */\n    var MatSelectionListChange = /** @class */ (function () {\n        function MatSelectionListChange(\n        /** Reference to the selection list that emitted the event. */\n        source, \n        /** Reference to the option that has been changed. */\n        option) {\n            this.source = source;\n            this.option = option;\n        }\n        return MatSelectionListChange;\n    }());\n    /**\n     * Component for list-options of selection-list. Each list-option can automatically\n     * generate a checkbox and can put current item into the selectionModel of selection-list\n     * if the current item is selected.\n     */\n    var MatListOption = /** @class */ (function (_super) {\n        tslib.__extends(MatListOption, _super);\n        function MatListOption(_element, _changeDetector, \n        /** @docs-private */\n        selectionList) {\n            var _this = _super.call(this) || this;\n            _this._element = _element;\n            _this._changeDetector = _changeDetector;\n            _this.selectionList = selectionList;\n            _this._selected = false;\n            _this._disabled = false;\n            _this._hasFocus = false;\n            /** Whether the label should appear before or after the checkbox. Defaults to 'after' */\n            _this.checkboxPosition = 'after';\n            return _this;\n        }\n        Object.defineProperty(MatListOption.prototype, \"color\", {\n            /** Theme color of the list option. This sets the color of the checkbox. */\n            get: function () { return this._color || this.selectionList.color; },\n            set: function (newValue) { this._color = newValue; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(MatListOption.prototype, \"value\", {\n            /** Value of the option */\n            get: function () { return this._value; },\n            set: function (newValue) {\n                if (this.selected && newValue !== this.value) {\n                    this.selected = false;\n                }\n                this._value = newValue;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(MatListOption.prototype, \"disabled\", {\n            /** Whether the option is disabled. */\n            get: function () { return this._disabled || (this.selectionList && this.selectionList.disabled); },\n            set: function (value) {\n                var newValue = coercion.coerceBooleanProperty(value);\n                if (newValue !== this._disabled) {\n                    this._disabled = newValue;\n                    this._changeDetector.markForCheck();\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(MatListOption.prototype, \"selected\", {\n            /** Whether the option is selected. */\n            get: function () { return this.selectionList.selectedOptions.isSelected(this); },\n            set: function (value) {\n                var isSelected = coercion.coerceBooleanProperty(value);\n                if (isSelected !== this._selected) {\n                    this._setSelected(isSelected);\n                    this.selectionList._reportValueChange();\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        MatListOption.prototype.ngOnInit = function () {\n            var _this = this;\n            var list = this.selectionList;\n            if (list._value && list._value.some(function (value) { return list.compareWith(value, _this._value); })) {\n                this._setSelected(true);\n            }\n            var wasSelected = this._selected;\n            // List options that are selected at initialization can't be reported properly to the form\n            // control. This is because it takes some time until the selection-list knows about all\n            // available options. Also it can happen that the ControlValueAccessor has an initial value\n            // that should be used instead. Deferring the value change report to the next tick ensures\n            // that the form control value is not being overwritten.\n            Promise.resolve().then(function () {\n                if (_this._selected || wasSelected) {\n                    _this.selected = true;\n                    _this._changeDetector.markForCheck();\n                }\n            });\n        };\n        MatListOption.prototype.ngAfterContentInit = function () {\n            core$1.setLines(this._lines, this._element);\n        };\n        MatListOption.prototype.ngOnDestroy = function () {\n            var _this = this;\n            if (this.selected) {\n                // We have to delay this until the next tick in order\n                // to avoid changed after checked errors.\n                Promise.resolve().then(function () {\n                    _this.selected = false;\n                });\n            }\n            var hadFocus = this._hasFocus;\n            var newActiveItem = this.selectionList._removeOptionFromList(this);\n            // Only move focus if this option was focused at the time it was destroyed.\n            if (hadFocus && newActiveItem) {\n                newActiveItem.focus();\n            }\n        };\n        /** Toggles the selection state of the option. */\n        MatListOption.prototype.toggle = function () {\n            this.selected = !this.selected;\n        };\n        /** Allows for programmatic focusing of the option. */\n        MatListOption.prototype.focus = function () {\n            this._element.nativeElement.focus();\n        };\n        /**\n         * Returns the list item's text label. Implemented as a part of the FocusKeyManager.\n         * @docs-private\n         */\n        MatListOption.prototype.getLabel = function () {\n            return this._text ? (this._text.nativeElement.textContent || '') : '';\n        };\n        /** Whether this list item should show a ripple effect when clicked. */\n        MatListOption.prototype._isRippleDisabled = function () {\n            return this.disabled || this.disableRipple || this.selectionList.disableRipple;\n        };\n        MatListOption.prototype._handleClick = function () {\n            if (!this.disabled) {\n                this.toggle();\n                // Emit a change event if the selected state of the option changed through user interaction.\n                this.selectionList._emitChangeEvent(this);\n            }\n        };\n        MatListOption.prototype._handleFocus = function () {\n            this.selectionList._setFocusedOption(this);\n            this._hasFocus = true;\n        };\n        MatListOption.prototype._handleBlur = function () {\n            this.selectionList._onTouched();\n            this._hasFocus = false;\n        };\n        /** Retrieves the DOM element of the component host. */\n        MatListOption.prototype._getHostElement = function () {\n            return this._element.nativeElement;\n        };\n        /** Sets the selected state of the option. Returns whether the value has changed. */\n        MatListOption.prototype._setSelected = function (selected) {\n            if (selected === this._selected) {\n                return false;\n            }\n            this._selected = selected;\n            if (selected) {\n                this.selectionList.selectedOptions.select(this);\n            }\n            else {\n                this.selectionList.selectedOptions.deselect(this);\n            }\n            this._changeDetector.markForCheck();\n            return true;\n        };\n        /**\n         * Notifies Angular that the option needs to be checked in the next change detection run. Mainly\n         * used to trigger an update of the list option if the disabled state of the selection list\n         * changed.\n         */\n        MatListOption.prototype._markForCheck = function () {\n            this._changeDetector.markForCheck();\n        };\n        MatListOption.decorators = [\n            { type: core.Component, args: [{\n                        moduleId: module.id,\n                        selector: 'mat-list-option',\n                        exportAs: 'matListOption',\n                        inputs: ['disableRipple'],\n                        host: {\n                            'role': 'option',\n                            'class': 'mat-list-item mat-list-option',\n                            '(focus)': '_handleFocus()',\n                            '(blur)': '_handleBlur()',\n                            '(click)': '_handleClick()',\n                            'tabindex': '-1',\n                            '[class.mat-list-item-disabled]': 'disabled',\n                            '[class.mat-list-item-with-avatar]': '_avatar || _icon',\n                            // Manually set the \"primary\" or \"warn\" class if the color has been explicitly\n                            // set to \"primary\" or \"warn\". The pseudo checkbox picks up these classes for\n                            // its theme.\n                            '[class.mat-primary]': 'color === \"primary\"',\n                            // Even though accent is the default, we need to set this class anyway, because the  list might\n                            // be placed inside a parent that has one of the other colors with a higher specificity.\n                            '[class.mat-accent]': 'color !== \"primary\" && color !== \"warn\"',\n                            '[class.mat-warn]': 'color === \"warn\"',\n                            '[attr.aria-selected]': 'selected',\n                            '[attr.aria-disabled]': 'disabled',\n                        },\n                        template: \"<div class=\\\"mat-list-item-content\\\"\\n  [class.mat-list-item-content-reverse]=\\\"checkboxPosition == 'after'\\\">\\n\\n  <div mat-ripple\\n    class=\\\"mat-list-item-ripple\\\"\\n    [matRippleTrigger]=\\\"_getHostElement()\\\"\\n    [matRippleDisabled]=\\\"_isRippleDisabled()\\\"></div>\\n\\n  <mat-pseudo-checkbox\\n    [state]=\\\"selected ? 'checked' : 'unchecked'\\\"\\n    [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox>\\n\\n  <div class=\\\"mat-list-text\\\" #text><ng-content></ng-content></div>\\n\\n  <ng-content select=\\\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\\\">\\n  </ng-content>\\n\\n</div>\\n\",\n                        encapsulation: core.ViewEncapsulation.None,\n                        changeDetection: core.ChangeDetectionStrategy.OnPush\n                    }] }\n        ];\n        /** @nocollapse */\n        MatListOption.ctorParameters = function () { return [\n            { type: core.ElementRef },\n            { type: core.ChangeDetectorRef },\n            { type: MatSelectionList, decorators: [{ type: core.Inject, args: [core.forwardRef(function () { return MatSelectionList; }),] }] }\n        ]; };\n        MatListOption.propDecorators = {\n            _avatar: [{ type: core.ContentChild, args: [MatListAvatarCssMatStyler,] }],\n            _icon: [{ type: core.ContentChild, args: [MatListIconCssMatStyler,] }],\n            _lines: [{ type: core.ContentChildren, args: [core$1.MatLine,] }],\n            _text: [{ type: core.ViewChild, args: ['text',] }],\n            checkboxPosition: [{ type: core.Input }],\n            color: [{ type: core.Input }],\n            value: [{ type: core.Input }],\n            disabled: [{ type: core.Input }],\n            selected: [{ type: core.Input }]\n        };\n        return MatListOption;\n    }(_MatListOptionMixinBase));\n    /**\n     * Material Design list component where each item is a selectable option. Behaves as a listbox.\n     */\n    var MatSelectionList = /** @class */ (function (_super) {\n        tslib.__extends(MatSelectionList, _super);\n        function MatSelectionList(_element, tabIndex) {\n            var _this = _super.call(this) || this;\n            _this._element = _element;\n            /** Emits a change event whenever the selected state of an option changes. */\n            _this.selectionChange = new core.EventEmitter();\n            /** Tabindex of the selection list. */\n            _this.tabIndex = 0;\n            /** Theme color of the selection list. This sets the checkbox color for all list options. */\n            _this.color = 'accent';\n            /**\n             * Function used for comparing an option against the selected value when determining which\n             * options should appear as selected. The first argument is the value of an options. The second\n             * one is a value from the selected value. A boolean must be returned.\n             */\n            _this.compareWith = function (a1, a2) { return a1 === a2; };\n            _this._disabled = false;\n            /** The currently selected options. */\n            _this.selectedOptions = new collections.SelectionModel(true);\n            /** View to model callback that should be called whenever the selected options change. */\n            _this._onChange = function (_) { };\n            /** Emits when the list has been destroyed. */\n            _this._destroyed = new rxjs.Subject();\n            /** View to model callback that should be called if the list or its options lost focus. */\n            _this._onTouched = function () { };\n            _this.tabIndex = parseInt(tabIndex) || 0;\n            return _this;\n        }\n        Object.defineProperty(MatSelectionList.prototype, \"disabled\", {\n            /** Whether the selection list is disabled. */\n            get: function () { return this._disabled; },\n            set: function (value) {\n                this._disabled = coercion.coerceBooleanProperty(value);\n                // The `MatSelectionList` and `MatListOption` are using the `OnPush` change detection\n                // strategy. Therefore the options will not check for any changes if the `MatSelectionList`\n                // changed its state. Since we know that a change to `disabled` property of the list affects\n                // the state of the options, we manually mark each option for check.\n                this._markOptionsForCheck();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        MatSelectionList.prototype.ngAfterContentInit = function () {\n            this._keyManager = new a11y.FocusKeyManager(this.options)\n                .withWrap()\n                .withTypeAhead()\n                // Allow disabled items to be focusable. For accessibility reasons, there must be a way for\n                // screenreader users, that allows reading the different options of the list.\n                .skipPredicate(function () { return false; })\n                .withAllowedModifierKeys(['shiftKey']);\n            if (this._value) {\n                this._setOptionsFromValues(this._value);\n            }\n            // Sync external changes to the model back to the options.\n            this.selectedOptions.changed.pipe(operators.takeUntil(this._destroyed)).subscribe(function (event) {\n                var e_1, _a, e_2, _b;\n                if (event.added) {\n                    try {\n                        for (var _c = tslib.__values(event.added), _d = _c.next(); !_d.done; _d = _c.next()) {\n                            var item = _d.value;\n                            item.selected = true;\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                if (event.removed) {\n                    try {\n                        for (var _e = tslib.__values(event.removed), _f = _e.next(); !_f.done; _f = _e.next()) {\n                            var item = _f.value;\n                            item.selected = false;\n                        }\n                    }\n                    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                    finally {\n                        try {\n                            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n                        }\n                        finally { if (e_2) throw e_2.error; }\n                    }\n                }\n            });\n        };\n        MatSelectionList.prototype.ngOnChanges = function (changes) {\n            var disableRippleChanges = changes['disableRipple'];\n            var colorChanges = changes['color'];\n            if ((disableRippleChanges && !disableRippleChanges.firstChange) ||\n                (colorChanges && !colorChanges.firstChange)) {\n                this._markOptionsForCheck();\n            }\n        };\n        MatSelectionList.prototype.ngOnDestroy = function () {\n            this._destroyed.next();\n            this._destroyed.complete();\n            this._isDestroyed = true;\n        };\n        /** Focuses the selection list. */\n        MatSelectionList.prototype.focus = function (options) {\n            this._element.nativeElement.focus(options);\n        };\n        /** Selects all of the options. */\n        MatSelectionList.prototype.selectAll = function () {\n            this._setAllOptionsSelected(true);\n        };\n        /** Deselects all of the options. */\n        MatSelectionList.prototype.deselectAll = function () {\n            this._setAllOptionsSelected(false);\n        };\n        /** Sets the focused option of the selection-list. */\n        MatSelectionList.prototype._setFocusedOption = function (option) {\n            this._keyManager.updateActiveItem(option);\n        };\n        /**\n         * Removes an option from the selection list and updates the active item.\n         * @returns Currently-active item.\n         */\n        MatSelectionList.prototype._removeOptionFromList = function (option) {\n            var optionIndex = this._getOptionIndex(option);\n            if (optionIndex > -1 && this._keyManager.activeItemIndex === optionIndex) {\n                // Check whether the option is the last item\n                if (optionIndex > 0) {\n                    this._keyManager.updateActiveItem(optionIndex - 1);\n                }\n                else if (optionIndex === 0 && this.options.length > 1) {\n                    this._keyManager.updateActiveItem(Math.min(optionIndex + 1, this.options.length - 1));\n                }\n            }\n            return this._keyManager.activeItem;\n        };\n        /** Passes relevant key presses to our key manager. */\n        MatSelectionList.prototype._keydown = function (event) {\n            var keyCode = event.keyCode;\n            var manager = this._keyManager;\n            var previousFocusIndex = manager.activeItemIndex;\n            var hasModifier = keycodes.hasModifierKey(event);\n            switch (keyCode) {\n                case keycodes.SPACE:\n                case keycodes.ENTER:\n                    if (!hasModifier) {\n                        this._toggleFocusedOption();\n                        // Always prevent space from scrolling the page since the list has focus\n                        event.preventDefault();\n                    }\n                    break;\n                case keycodes.HOME:\n                case keycodes.END:\n                    if (!hasModifier) {\n                        keyCode === keycodes.HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n                        event.preventDefault();\n                    }\n                    break;\n                case keycodes.A:\n                    if (keycodes.hasModifierKey(event, 'ctrlKey')) {\n                        this.options.find(function (option) { return !option.selected; }) ? this.selectAll() : this.deselectAll();\n                        event.preventDefault();\n                    }\n                    break;\n                default:\n                    manager.onKeydown(event);\n            }\n            if ((keyCode === keycodes.UP_ARROW || keyCode === keycodes.DOWN_ARROW) && event.shiftKey &&\n                manager.activeItemIndex !== previousFocusIndex) {\n                this._toggleFocusedOption();\n            }\n        };\n        /** Reports a value change to the ControlValueAccessor */\n        MatSelectionList.prototype._reportValueChange = function () {\n            // Stop reporting value changes after the list has been destroyed. This avoids\n            // cases where the list might wrongly reset its value once it is removed, but\n            // the form control is still live.\n            if (this.options && !this._isDestroyed) {\n                var value = this._getSelectedOptionValues();\n                this._onChange(value);\n                this._value = value;\n            }\n        };\n        /** Emits a change event if the selected state of an option changed. */\n        MatSelectionList.prototype._emitChangeEvent = function (option) {\n            this.selectionChange.emit(new MatSelectionListChange(this, option));\n        };\n        /** Implemented as part of ControlValueAccessor. */\n        MatSelectionList.prototype.writeValue = function (values) {\n            this._value = values;\n            if (this.options) {\n                this._setOptionsFromValues(values || []);\n            }\n        };\n        /** Implemented as a part of ControlValueAccessor. */\n        MatSelectionList.prototype.setDisabledState = function (isDisabled) {\n            this.disabled = isDisabled;\n        };\n        /** Implemented as part of ControlValueAccessor. */\n        MatSelectionList.prototype.registerOnChange = function (fn) {\n            this._onChange = fn;\n        };\n        /** Implemented as part of ControlValueAccessor. */\n        MatSelectionList.prototype.registerOnTouched = function (fn) {\n            this._onTouched = fn;\n        };\n        /** Sets the selected options based on the specified values. */\n        MatSelectionList.prototype._setOptionsFromValues = function (values) {\n            var _this = this;\n            this.options.forEach(function (option) { return option._setSelected(false); });\n            values.forEach(function (value) {\n                var correspondingOption = _this.options.find(function (option) {\n                    // Skip options that are already in the model. This allows us to handle cases\n                    // where the same primitive value is selected multiple times.\n                    return option.selected ? false : _this.compareWith(option.value, value);\n                });\n                if (correspondingOption) {\n                    correspondingOption._setSelected(true);\n                }\n            });\n        };\n        /** Returns the values of the selected options. */\n        MatSelectionList.prototype._getSelectedOptionValues = function () {\n            return this.options.filter(function (option) { return option.selected; }).map(function (option) { return option.value; });\n        };\n        /** Toggles the state of the currently focused option if enabled. */\n        MatSelectionList.prototype._toggleFocusedOption = function () {\n            var focusedIndex = this._keyManager.activeItemIndex;\n            if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\n                var focusedOption = this.options.toArray()[focusedIndex];\n                if (focusedOption && !focusedOption.disabled) {\n                    focusedOption.toggle();\n                    // Emit a change event because the focused option changed its state through user\n                    // interaction.\n                    this._emitChangeEvent(focusedOption);\n                }\n            }\n        };\n        /**\n         * Sets the selected state on all of the options\n         * and emits an event if anything changed.\n         */\n        MatSelectionList.prototype._setAllOptionsSelected = function (isSelected) {\n            // Keep track of whether anything changed, because we only want to\n            // emit the changed event when something actually changed.\n            var hasChanged = false;\n            this.options.forEach(function (option) {\n                if (option._setSelected(isSelected)) {\n                    hasChanged = true;\n                }\n            });\n            if (hasChanged) {\n                this._reportValueChange();\n            }\n        };\n        /**\n         * Utility to ensure all indexes are valid.\n         * @param index The index to be checked.\n         * @returns True if the index is valid for our list of options.\n         */\n        MatSelectionList.prototype._isValidIndex = function (index) {\n            return index >= 0 && index < this.options.length;\n        };\n        /** Returns the index of the specified list option. */\n        MatSelectionList.prototype._getOptionIndex = function (option) {\n            return this.options.toArray().indexOf(option);\n        };\n        /** Marks all the options to be checked in the next change detection run. */\n        MatSelectionList.prototype._markOptionsForCheck = function () {\n            if (this.options) {\n                this.options.forEach(function (option) { return option._markForCheck(); });\n            }\n        };\n        MatSelectionList.decorators = [\n            { type: core.Component, args: [{\n                        moduleId: module.id,\n                        selector: 'mat-selection-list',\n                        exportAs: 'matSelectionList',\n                        inputs: ['disableRipple'],\n                        host: {\n                            'role': 'listbox',\n                            '[tabIndex]': 'tabIndex',\n                            'class': 'mat-selection-list mat-list-base',\n                            '(blur)': '_onTouched()',\n                            '(keydown)': '_keydown($event)',\n                            'aria-multiselectable': 'true',\n                            '[attr.aria-disabled]': 'disabled.toString()',\n                        },\n                        template: '<ng-content></ng-content>',\n                        encapsulation: core.ViewEncapsulation.None,\n                        providers: [MAT_SELECTION_LIST_VALUE_ACCESSOR],\n                        changeDetection: core.ChangeDetectionStrategy.OnPush,\n                        styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}@media(-ms-high-contrast: active){.mat-selection-list:focus{outline-style:dotted}.mat-list-option:hover,.mat-list-option:focus,.mat-nav-list .mat-list-item:hover,.mat-nav-list .mat-list-item:focus,mat-action-list .mat-list-item:hover,mat-action-list .mat-list-item:focus{outline:dotted 1px}}@media(hover: none){.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"]\n                    }] }\n        ];\n        /** @nocollapse */\n        MatSelectionList.ctorParameters = function () { return [\n            { type: core.ElementRef },\n            { type: String, decorators: [{ type: core.Attribute, args: ['tabindex',] }] }\n        ]; };\n        MatSelectionList.propDecorators = {\n            options: [{ type: core.ContentChildren, args: [MatListOption, { descendants: true },] }],\n            selectionChange: [{ type: core.Output }],\n            tabIndex: [{ type: core.Input }],\n            color: [{ type: core.Input }],\n            compareWith: [{ type: core.Input }],\n            disabled: [{ type: core.Input }]\n        };\n        return MatSelectionList;\n    }(_MatSelectionListMixinBase));\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var MatListModule = /** @class */ (function () {\n        function MatListModule() {\n        }\n        MatListModule.decorators = [\n            { type: core.NgModule, args: [{\n                        imports: [core$1.MatLineModule, core$1.MatRippleModule, core$1.MatCommonModule, core$1.MatPseudoCheckboxModule, common.CommonModule],\n                        exports: [\n                            MatList,\n                            MatNavList,\n                            MatListItem,\n                            MatListAvatarCssMatStyler,\n                            core$1.MatLineModule,\n                            core$1.MatCommonModule,\n                            MatListIconCssMatStyler,\n                            MatListSubheaderCssMatStyler,\n                            core$1.MatPseudoCheckboxModule,\n                            MatSelectionList,\n                            MatListOption,\n                            divider.MatDividerModule\n                        ],\n                        declarations: [\n                            MatList,\n                            MatNavList,\n                            MatListItem,\n                            MatListAvatarCssMatStyler,\n                            MatListIconCssMatStyler,\n                            MatListSubheaderCssMatStyler,\n                            MatSelectionList,\n                            MatListOption\n                        ],\n                    },] }\n        ];\n        return MatListModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.MatListModule = MatListModule;\n    exports.MatNavList = MatNavList;\n    exports.MatList = MatList;\n    exports.MatListAvatarCssMatStyler = MatListAvatarCssMatStyler;\n    exports.MatListIconCssMatStyler = MatListIconCssMatStyler;\n    exports.MatListSubheaderCssMatStyler = MatListSubheaderCssMatStyler;\n    exports.MatListItem = MatListItem;\n    exports.MAT_SELECTION_LIST_VALUE_ACCESSOR = MAT_SELECTION_LIST_VALUE_ACCESSOR;\n    exports.MatSelectionListChange = MatSelectionListChange;\n    exports.MatListOption = MatListOption;\n    exports.MatSelectionList = MatSelectionList;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=material-list.umd.js.map\n"]}