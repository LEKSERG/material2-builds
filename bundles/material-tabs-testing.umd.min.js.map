{"version":3,"sources":["src/material/material-tabs-testing.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","material","tabs","testing","tslib","cdk","this","tslib_1","MatTabHarness","_super","_this","apply","arguments","_rootLocatorFactory","documentRootLocatorFactory","__extends","with","options","HarnessPredicate","prototype","getLabel","__awaiter","__generator","_a","label","host","sent","text","getAriaLabel","getAttribute","getAriaLabelledby","getContentElement","_b","_c","_d","locatorFor","_getContentId","isSelected","isDisabled","select","click","hostSelector","ComponentHarness","MatTabGroupHarness","_tabs","locatorForAll","addOption","selectedTabLabel","harness","selectedTab","getSelectedTab","stringMatches","getTabs","i","Promise","all","map","t","length","Error","Object","defineProperty","value"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('tslib'), require('@angular/cdk/testing')) :\n    typeof define === 'function' && define.amd ? define('@angular/material/tabs/testing', ['exports', 'tslib', '@angular/cdk/testing'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.material = global.ng.material || {}, global.ng.material.tabs = global.ng.material.tabs || {}, global.ng.material.tabs.testing = {}), global.tslib, global.ng.cdk.testing));\n}(this, function (exports, tslib_1, testing) { 'use strict';\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Harness for interacting with a standard Angular Material tab-label in tests.\n     * @dynamic\n     */\n    var MatTabHarness = /** @class */ (function (_super) {\n        tslib_1.__extends(MatTabHarness, _super);\n        function MatTabHarness() {\n            var _this = _super !== null && _super.apply(this, arguments) || this;\n            _this._rootLocatorFactory = _this.documentRootLocatorFactory();\n            return _this;\n        }\n        /**\n         * Gets a `HarnessPredicate` that can be used to search for a tab with specific attributes.\n         */\n        MatTabHarness.with = function (options) {\n            if (options === void 0) { options = {}; }\n            return new testing.HarnessPredicate(MatTabHarness, options);\n        };\n        /** Gets the label of the tab. */\n        MatTabHarness.prototype.getLabel = function () {\n            return tslib_1.__awaiter(this, void 0, void 0, function () {\n                return tslib_1.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this.host()];\n                        case 1: return [2 /*return*/, (_a.sent()).text()];\n                    }\n                });\n            });\n        };\n        /** Gets the aria label of the tab. */\n        MatTabHarness.prototype.getAriaLabel = function () {\n            return tslib_1.__awaiter(this, void 0, void 0, function () {\n                return tslib_1.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this.host()];\n                        case 1: return [2 /*return*/, (_a.sent()).getAttribute('aria-label')];\n                    }\n                });\n            });\n        };\n        /** Gets the value of the \"aria-labelledby\" attribute. */\n        MatTabHarness.prototype.getAriaLabelledby = function () {\n            return tslib_1.__awaiter(this, void 0, void 0, function () {\n                return tslib_1.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this.host()];\n                        case 1: return [2 /*return*/, (_a.sent()).getAttribute('aria-labelledby')];\n                    }\n                });\n            });\n        };\n        /**\n         * Gets the content element of the given tab. Note that the element will be empty\n         * until the tab is selected. This is an implementation detail of the tab-group\n         * in order to avoid rendering of non-active tabs.\n         */\n        MatTabHarness.prototype.getContentElement = function () {\n            return tslib_1.__awaiter(this, void 0, void 0, function () {\n                var _a, _b, _c;\n                return tslib_1.__generator(this, function (_d) {\n                    switch (_d.label) {\n                        case 0:\n                            _b = (_a = this._rootLocatorFactory).locatorFor;\n                            _c = \"#\";\n                            return [4 /*yield*/, this._getContentId()];\n                        case 1: return [2 /*return*/, _b.apply(_a, [_c + (_d.sent())])()];\n                    }\n                });\n            });\n        };\n        /** Whether the tab is selected. */\n        MatTabHarness.prototype.isSelected = function () {\n            return tslib_1.__awaiter(this, void 0, void 0, function () {\n                var hostEl;\n                return tslib_1.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this.host()];\n                        case 1:\n                            hostEl = _a.sent();\n                            return [4 /*yield*/, hostEl.getAttribute('aria-selected')];\n                        case 2: return [2 /*return*/, (_a.sent()) === 'true'];\n                    }\n                });\n            });\n        };\n        /** Whether the tab is disabled. */\n        MatTabHarness.prototype.isDisabled = function () {\n            return tslib_1.__awaiter(this, void 0, void 0, function () {\n                var hostEl;\n                return tslib_1.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this.host()];\n                        case 1:\n                            hostEl = _a.sent();\n                            return [4 /*yield*/, hostEl.getAttribute('aria-disabled')];\n                        case 2: return [2 /*return*/, (_a.sent()) === 'true'];\n                    }\n                });\n            });\n        };\n        /**\n         * Selects the given tab by clicking on the label. Tab cannot be\n         * selected if disabled.\n         */\n        MatTabHarness.prototype.select = function () {\n            return tslib_1.__awaiter(this, void 0, void 0, function () {\n                return tslib_1.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this.host()];\n                        case 1: return [4 /*yield*/, (_a.sent()).click()];\n                        case 2:\n                            _a.sent();\n                            return [2 /*return*/];\n                    }\n                });\n            });\n        };\n        /** Gets the element id for the content of the current tab. */\n        MatTabHarness.prototype._getContentId = function () {\n            return tslib_1.__awaiter(this, void 0, void 0, function () {\n                var hostEl;\n                return tslib_1.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this.host()];\n                        case 1:\n                            hostEl = _a.sent();\n                            return [4 /*yield*/, hostEl.getAttribute('aria-controls')];\n                        case 2: \n                        // Tabs never have an empty \"aria-controls\" attribute.\n                        return [2 /*return*/, (_a.sent())];\n                    }\n                });\n            });\n        };\n        MatTabHarness.hostSelector = '.mat-tab-label';\n        return MatTabHarness;\n    }(testing.ComponentHarness));\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Harness for interacting with a standard mat-tab-group in tests.\n     * @dynamic\n     */\n    var MatTabGroupHarness = /** @class */ (function (_super) {\n        tslib_1.__extends(MatTabGroupHarness, _super);\n        function MatTabGroupHarness() {\n            var _this = _super !== null && _super.apply(this, arguments) || this;\n            _this._tabs = _this.locatorForAll(MatTabHarness);\n            return _this;\n        }\n        /**\n         * Gets a `HarnessPredicate` that can be used to search for a radio-button with\n         * specific attributes.\n         * @param options Options for narrowing the search\n         *   - `selector` finds a tab-group whose host element matches the given selector.\n         *   - `selectedTabLabel` finds a tab-group with a selected tab that matches the\n         *      specified tab label.\n         * @return a `HarnessPredicate` configured with the given options.\n         */\n        MatTabGroupHarness.with = function (options) {\n            var _this = this;\n            if (options === void 0) { options = {}; }\n            return new testing.HarnessPredicate(MatTabGroupHarness, options)\n                .addOption('selectedTabLabel', options.selectedTabLabel, function (harness, label) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n                var selectedTab, _a, _b;\n                return tslib_1.__generator(this, function (_c) {\n                    switch (_c.label) {\n                        case 0: return [4 /*yield*/, harness.getSelectedTab()];\n                        case 1:\n                            selectedTab = _c.sent();\n                            _b = (_a = testing.HarnessPredicate).stringMatches;\n                            return [4 /*yield*/, selectedTab.getLabel()];\n                        case 2: return [2 /*return*/, _b.apply(_a, [_c.sent(), label])];\n                    }\n                });\n            }); });\n        };\n        /** Gets all tabs of the tab group. */\n        MatTabGroupHarness.prototype.getTabs = function () {\n            return tslib_1.__awaiter(this, void 0, void 0, function () {\n                return tslib_1.__generator(this, function (_a) {\n                    return [2 /*return*/, this._tabs()];\n                });\n            });\n        };\n        /** Gets the selected tab of the tab group. */\n        MatTabGroupHarness.prototype.getSelectedTab = function () {\n            return tslib_1.__awaiter(this, void 0, void 0, function () {\n                var tabs, isSelected, i;\n                return tslib_1.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this.getTabs()];\n                        case 1:\n                            tabs = _a.sent();\n                            return [4 /*yield*/, Promise.all(tabs.map(function (t) { return t.isSelected(); }))];\n                        case 2:\n                            isSelected = _a.sent();\n                            for (i = 0; i < tabs.length; i++) {\n                                if (isSelected[i]) {\n                                    return [2 /*return*/, tabs[i]];\n                                }\n                            }\n                            throw new Error('No selected tab could be found.');\n                    }\n                });\n            });\n        };\n        MatTabGroupHarness.hostSelector = '.mat-tab-group';\n        return MatTabGroupHarness;\n    }(testing.ComponentHarness));\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    exports.MatTabGroupHarness = MatTabGroupHarness;\n    exports.MatTabHarness = MatTabHarness;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=material-tabs-testing.umd.js.map\n"]}