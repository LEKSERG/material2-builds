{"version":3,"sources":["src/material/material-tabs.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","material","tabs","cdk","observers","portal","common","core","a11y","platformBrowser","animations","tslib","rxjs","bidi","operators","coercion","scrolling","platform","keycodes","this","core$1","tslib_1","animations$1","_MAT_INK_BAR_POSITIONER","InjectionToken","providedIn","_MAT_INK_BAR_POSITIONER_FACTORY","element","left","offsetLeft","width","offsetWidth","MatInkBar","_elementRef","_ngZone","_inkBarPositioner","_animationMode","prototype","alignToElement","_this","show","requestAnimationFrame","runOutsideAngular","_setStyles","nativeElement","style","visibility","hide","positions","inkBar","decorators","type","Directive","args","selector","host","class","[class._mat-animation-noopable]","ctorParameters","ElementRef","NgZone","undefined","Inject","String","Optional","ANIMATION_MODULE_TYPE","MatTabContent","template","TemplateRef","MatTabLabel","_super","apply","arguments","__extends","CdkPortal","MatTab","_viewContainerRef","call","textLabel","_contentPortal","_stateChanges","Subject","position","origin","isActive","Object","defineProperty","get","enumerable","configurable","ngOnChanges","changes","hasOwnProperty","next","ngOnDestroy","complete","ngOnInit","TemplatePortal","_explicitContent","_implicitContent","Component","moduleId","id","inputs","changeDetection","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","exportAs","ViewContainerRef","propDecorators","templateLabel","ContentChild","static","read","ViewChild","Input","ariaLabel","ariaLabelledby","mixinDisabled","MatTabBase","matTabsAnimations","translateTab","trigger","state","transform","minHeight","transition","animate","MatTabBodyPortal","componentFactoryResolver","viewContainerRef","_host","_centeringSub","Subscription","EMPTY","_leavingSub","_beforeCentering","pipe","startWith","_isCenterPosition","_position","subscribe","isCentering","hasAttached","attach","_content","_afterLeavingCenter","detach","unsubscribe","ComponentFactoryResolver","MatTabBody","forwardRef","CdkPortalOutlet","_MatTabBodyBase","_dir","changeDetectorRef","_dirChangeSubscription","_translateTabComplete","_onCentering","EventEmitter","_onCentered","animationDuration","change","dir","_computePositionAnimationState","markForCheck","distinctUntilChanged","x","y","fromState","toState","event","emit","set","_positionIndex","_computePositionFromOrigin","_onTranslateTabStarted","clientHeight","_getLayoutDirection","value","Directionality","ChangeDetectorRef","Output","elementRef","styles","_portalHost","PortalHostDirective","nextId","MatTabChangeEvent","MAT_TABS_CONFIG","_MatTabGroupBase","_changeDetectorRef","defaultConfig","_indexToSelect","_tabBodyWrapperHeight","_tabsSubscription","_tabLabelSubscription","_dynamicHeight","_selectedIndex","headerPosition","selectedIndexChange","focusChange","animationDone","selectedTabChange","_groupId","coerceBooleanProperty","coerceNumberProperty","_animationDuration","test","_backgroundColor","classList","remove","backgroundColor","add","ngAfterContentChecked","indexToSelect","_clampTabIndex","isFirstRun_1","_createChangeEvent","Promise","resolve","then","_tabs","forEach","tab","index","ngAfterContentInit","_subscribeToTabLabels","toArray","i","length","realignInkBar","_tabHeader","_alignInkBarToSelectedTab","_focusChanged","merge","__spread","map","Math","min","max","_getTabLabelId","_getTabContentId","_setTabBodyWrapperHeight","tabHeight","wrapper","_tabBodyWrapper","height","offsetHeight","_removeTabBodyWrapperHeight","_handleClick","tabHeader","disabled","selectedIndex","focusIndex","_getTabIndex","idx","dynamicHeight","mixinColor","mixinDisableRipple","MatTabGroupMixinBase","MatTabGroup","animationMode","[class.mat-tab-group-dynamic-height]","[class.mat-tab-group-inverted-header]","ContentChildren","MatTabLabelWrapper","focus","getOffsetLeft","getOffsetWidth","[class.mat-tab-disabled]","[attr.aria-disabled]","MatTabLabelWrapperBase","passiveEventListenerOptions","normalizePassiveListenerOptions","passive","MatPaginatedTabHeader","_viewportRuler","_platform","_scrollDistance","_selectedIndexChanged","_destroyed","_showPaginationControls","_disableScrollAfter","_disableScrollBefore","_stopScrolling","selectFocusedIndex","indexFocused","fromEvent","takeUntil","_stopInterval","_keyManager","updateActiveItemIndex","ngAfterViewInit","_previousPaginator","_handlePaginatorPress","_nextPaginator","dirChange","of","resize","realign","updatePagination","FocusKeyManager","_items","withHorizontalOrientation","withWrap","updateActiveItem","newFocusIndex","_setTabFocus","_tabLabelCount","_scrollToLabel","_checkScrollingControls","_scrollDistanceChanged","_updateTabScrollPosition","_handleKeydown","hasModifierKey","keyCode","HOME","setFirstItemActive","preventDefault","END","setLastItemActive","ENTER","SPACE","_itemSelected","onKeydown","_onContentChanges","textContent","_currentTextContent","run","_checkPaginationEnabled","activeItemIndex","_isValidIndex","setActiveItem","tabIndex","containerEl","_tabListContainer","scrollLeft","scrollWidth","scrollDistance","translateX","_tabList","round","TRIDENT","EDGE","_scrollTo","_scrollHeader","direction","_handlePaginatorClick","labelIndex","selectedLabel","labelBeforePos","labelAfterPos","viewLength","_a","beforeVisiblePos","afterVisiblePos","isEnabled","_getMaxScrollDistance","selectedItem","selectedLabelWrapper","_inkBar","timer","distance","maxScrollDistance","ViewportRuler","Platform","_MatTabHeaderBase","viewportRuler","ngZone","_disableRipple","disableRipple","MatTabHeader","outputs","[class.mat-tab-header-pagination-controls-enabled]","[class.mat-tab-header-rtl]","_MatTabNavBase","color","updateActiveLink","_element","items","active","MatTabNav","[class.mat-primary]","[class.mat-accent]","[class.mat-warn]","MatTabLink","descendants","_MatTabLinkBase","_tabNavBar","globalRippleOptions","_focusMonitor","_isActive","rippleConfig","parseInt","animation","enterDuration","exitDuration","monitor","stopMonitoring","MAT_RIPPLE_GLOBAL_OPTIONS","Attribute","FocusMonitor","mixinTabIndex","MatTabLinkMixinBase","tabNavBar","focusMonitor","_tabLinkRipple","RippleRenderer","setupTriggerEvents","_removeTriggerEvents","[attr.aria-current]","[attr.tabIndex]","[class.mat-tab-label-active]","MatTabsModule","NgModule","imports","CommonModule","MatCommonModule","PortalModule","MatRippleModule","ObserversModule","A11yModule","declarations","ɵangular_material_src_material_tabs_tabs_a","ɵangular_material_src_material_tabs_tabs_b"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/cdk/observers'), require('@angular/cdk/portal'), require('@angular/common'), require('@angular/core'), require('@angular/cdk/a11y'), require('@angular/material/core'), require('@angular/platform-browser/animations'), require('tslib'), require('rxjs'), require('@angular/cdk/bidi'), require('@angular/animations'), require('rxjs/operators'), require('@angular/cdk/coercion'), require('@angular/cdk/scrolling'), require('@angular/cdk/platform'), require('@angular/cdk/keycodes')) :\n    typeof define === 'function' && define.amd ? define('@angular/material/tabs', ['exports', '@angular/cdk/observers', '@angular/cdk/portal', '@angular/common', '@angular/core', '@angular/cdk/a11y', '@angular/material/core', '@angular/platform-browser/animations', 'tslib', 'rxjs', '@angular/cdk/bidi', '@angular/animations', 'rxjs/operators', '@angular/cdk/coercion', '@angular/cdk/scrolling', '@angular/cdk/platform', '@angular/cdk/keycodes'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.material = global.ng.material || {}, global.ng.material.tabs = {}), global.ng.cdk.observers, global.ng.cdk.portal, global.ng.common, global.ng.core, global.ng.cdk.a11y, global.ng.material.core, global.ng.platformBrowser.animations, global.tslib, global.rxjs, global.ng.cdk.bidi, global.ng.animations, global.rxjs.operators, global.ng.cdk.coercion, global.ng.cdk.scrolling, global.ng.cdk.platform, global.ng.cdk.keycodes));\n}(this, function (exports, observers, portal, common, core, a11y, core$1, animations, tslib_1, rxjs, bidi, animations$1, operators, coercion, scrolling, platform, keycodes) { 'use strict';\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Injection token for the MatInkBar's Positioner. */\n    var _MAT_INK_BAR_POSITIONER = new core.InjectionToken('MatInkBarPositioner', {\n        providedIn: 'root',\n        factory: _MAT_INK_BAR_POSITIONER_FACTORY\n    });\n    /**\n     * The default positioner function for the MatInkBar.\n     * @docs-private\n     */\n    function _MAT_INK_BAR_POSITIONER_FACTORY() {\n        var method = function (element) { return ({\n            left: element ? (element.offsetLeft || 0) + 'px' : '0',\n            width: element ? (element.offsetWidth || 0) + 'px' : '0',\n        }); };\n        return method;\n    }\n    /**\n     * The ink-bar is used to display and animate the line underneath the current active tab label.\n     * @docs-private\n     */\n    var MatInkBar = /** @class */ (function () {\n        function MatInkBar(_elementRef, _ngZone, _inkBarPositioner, _animationMode) {\n            this._elementRef = _elementRef;\n            this._ngZone = _ngZone;\n            this._inkBarPositioner = _inkBarPositioner;\n            this._animationMode = _animationMode;\n        }\n        /**\n         * Calculates the styles from the provided element in order to align the ink-bar to that element.\n         * Shows the ink bar if previously set as hidden.\n         * @param element\n         */\n        MatInkBar.prototype.alignToElement = function (element) {\n            var _this = this;\n            this.show();\n            if (typeof requestAnimationFrame !== 'undefined') {\n                this._ngZone.runOutsideAngular(function () {\n                    requestAnimationFrame(function () { return _this._setStyles(element); });\n                });\n            }\n            else {\n                this._setStyles(element);\n            }\n        };\n        /** Shows the ink bar. */\n        MatInkBar.prototype.show = function () {\n            this._elementRef.nativeElement.style.visibility = 'visible';\n        };\n        /** Hides the ink bar. */\n        MatInkBar.prototype.hide = function () {\n            this._elementRef.nativeElement.style.visibility = 'hidden';\n        };\n        /**\n         * Sets the proper styles to the ink bar element.\n         * @param element\n         */\n        MatInkBar.prototype._setStyles = function (element) {\n            var positions = this._inkBarPositioner(element);\n            var inkBar = this._elementRef.nativeElement;\n            inkBar.style.left = positions.left;\n            inkBar.style.width = positions.width;\n        };\n        MatInkBar.decorators = [\n            { type: core.Directive, args: [{\n                        selector: 'mat-ink-bar',\n                        host: {\n                            'class': 'mat-ink-bar',\n                            '[class._mat-animation-noopable]': \"_animationMode === 'NoopAnimations'\",\n                        },\n                    },] }\n        ];\n        /** @nocollapse */\n        MatInkBar.ctorParameters = function () { return [\n            { type: core.ElementRef },\n            { type: core.NgZone },\n            { type: undefined, decorators: [{ type: core.Inject, args: [_MAT_INK_BAR_POSITIONER,] }] },\n            { type: String, decorators: [{ type: core.Optional }, { type: core.Inject, args: [animations.ANIMATION_MODULE_TYPE,] }] }\n        ]; };\n        return MatInkBar;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Decorates the `ng-template` tags and reads out the template from it. */\n    var MatTabContent = /** @class */ (function () {\n        function MatTabContent(template) {\n            this.template = template;\n        }\n        MatTabContent.decorators = [\n            { type: core.Directive, args: [{ selector: '[matTabContent]' },] }\n        ];\n        /** @nocollapse */\n        MatTabContent.ctorParameters = function () { return [\n            { type: core.TemplateRef }\n        ]; };\n        return MatTabContent;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Used to flag tab labels for use with the portal directive */\n    var MatTabLabel = /** @class */ (function (_super) {\n        tslib_1.__extends(MatTabLabel, _super);\n        function MatTabLabel() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        MatTabLabel.decorators = [\n            { type: core.Directive, args: [{\n                        selector: '[mat-tab-label], [matTabLabel]',\n                    },] }\n        ];\n        return MatTabLabel;\n    }(portal.CdkPortal));\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Boilerplate for applying mixins to MatTab.\n    /** @docs-private */\n    var MatTabBase = /** @class */ (function () {\n        function MatTabBase() {\n        }\n        return MatTabBase;\n    }());\n    var _MatTabMixinBase = core$1.mixinDisabled(MatTabBase);\n    var MatTab = /** @class */ (function (_super) {\n        tslib_1.__extends(MatTab, _super);\n        function MatTab(_viewContainerRef) {\n            var _this = _super.call(this) || this;\n            _this._viewContainerRef = _viewContainerRef;\n            /** Plain text label for the tab, used when there is no template label. */\n            _this.textLabel = '';\n            /** Portal that will be the hosted content of the tab */\n            _this._contentPortal = null;\n            /** Emits whenever the internal state of the tab changes. */\n            _this._stateChanges = new rxjs.Subject();\n            /**\n             * The relatively indexed position where 0 represents the center, negative is left, and positive\n             * represents the right.\n             */\n            _this.position = null;\n            /**\n             * The initial relatively index origin of the tab if it was created and selected after there\n             * was already a selected tab. Provides context of what position the tab should originate from.\n             */\n            _this.origin = null;\n            /**\n             * Whether the tab is currently active.\n             */\n            _this.isActive = false;\n            return _this;\n        }\n        Object.defineProperty(MatTab.prototype, \"content\", {\n            /** @docs-private */\n            get: function () {\n                return this._contentPortal;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        MatTab.prototype.ngOnChanges = function (changes) {\n            if (changes.hasOwnProperty('textLabel') || changes.hasOwnProperty('disabled')) {\n                this._stateChanges.next();\n            }\n        };\n        MatTab.prototype.ngOnDestroy = function () {\n            this._stateChanges.complete();\n        };\n        MatTab.prototype.ngOnInit = function () {\n            this._contentPortal = new portal.TemplatePortal(this._explicitContent || this._implicitContent, this._viewContainerRef);\n        };\n        MatTab.decorators = [\n            { type: core.Component, args: [{\n                        moduleId: module.id,\n                        selector: 'mat-tab',\n                        template: \"<!-- Create a template for the content of the <mat-tab> so that we can grab a reference to this\\n    TemplateRef and use it in a Portal to render the tab content in the appropriate place in the\\n    tab-group. -->\\n<ng-template><ng-content></ng-content></ng-template>\\n\",\n                        inputs: ['disabled'],\n                        changeDetection: core.ChangeDetectionStrategy.OnPush,\n                        encapsulation: core.ViewEncapsulation.None,\n                        exportAs: 'matTab'\n                    }] }\n        ];\n        /** @nocollapse */\n        MatTab.ctorParameters = function () { return [\n            { type: core.ViewContainerRef }\n        ]; };\n        MatTab.propDecorators = {\n            templateLabel: [{ type: core.ContentChild, args: [MatTabLabel, { static: false },] }],\n            _explicitContent: [{ type: core.ContentChild, args: [MatTabContent, { read: core.TemplateRef, static: true },] }],\n            _implicitContent: [{ type: core.ViewChild, args: [core.TemplateRef, { static: true },] }],\n            textLabel: [{ type: core.Input, args: ['label',] }],\n            ariaLabel: [{ type: core.Input, args: ['aria-label',] }],\n            ariaLabelledby: [{ type: core.Input, args: ['aria-labelledby',] }]\n        };\n        return MatTab;\n    }(_MatTabMixinBase));\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Animations used by the Material tabs.\n     * @docs-private\n     */\n    var matTabsAnimations = {\n        /** Animation translates a tab along the X axis. */\n        translateTab: animations$1.trigger('translateTab', [\n            // Note: transitions to `none` instead of 0, because some browsers might blur the content.\n            animations$1.state('center, void, left-origin-center, right-origin-center', animations$1.style({ transform: 'none' })),\n            // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n            // in order to ensure that the element has a height before its state changes. This is\n            // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n            // not have a static height and is not rendered. See related issue: #9465\n            animations$1.state('left', animations$1.style({ transform: 'translate3d(-100%, 0, 0)', minHeight: '1px' })),\n            animations$1.state('right', animations$1.style({ transform: 'translate3d(100%, 0, 0)', minHeight: '1px' })),\n            animations$1.transition('* => left, * => right, left => center, right => center', animations$1.animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')),\n            animations$1.transition('void => left-origin-center', [\n                animations$1.style({ transform: 'translate3d(-100%, 0, 0)' }),\n                animations$1.animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n            ]),\n            animations$1.transition('void => right-origin-center', [\n                animations$1.style({ transform: 'translate3d(100%, 0, 0)' }),\n                animations$1.animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n            ])\n        ])\n    };\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The portal host directive for the contents of the tab.\n     * @docs-private\n     */\n    var MatTabBodyPortal = /** @class */ (function (_super) {\n        tslib_1.__extends(MatTabBodyPortal, _super);\n        function MatTabBodyPortal(componentFactoryResolver, viewContainerRef, _host) {\n            var _this = _super.call(this, componentFactoryResolver, viewContainerRef) || this;\n            _this._host = _host;\n            /** Subscription to events for when the tab body begins centering. */\n            _this._centeringSub = rxjs.Subscription.EMPTY;\n            /** Subscription to events for when the tab body finishes leaving from center position. */\n            _this._leavingSub = rxjs.Subscription.EMPTY;\n            return _this;\n        }\n        /** Set initial visibility or set up subscription for changing visibility. */\n        MatTabBodyPortal.prototype.ngOnInit = function () {\n            var _this = this;\n            _super.prototype.ngOnInit.call(this);\n            this._centeringSub = this._host._beforeCentering\n                .pipe(operators.startWith(this._host._isCenterPosition(this._host._position)))\n                .subscribe(function (isCentering) {\n                if (isCentering && !_this.hasAttached()) {\n                    _this.attach(_this._host._content);\n                }\n            });\n            this._leavingSub = this._host._afterLeavingCenter.subscribe(function () {\n                _this.detach();\n            });\n        };\n        /** Clean up centering subscription. */\n        MatTabBodyPortal.prototype.ngOnDestroy = function () {\n            _super.prototype.ngOnDestroy.call(this);\n            this._centeringSub.unsubscribe();\n            this._leavingSub.unsubscribe();\n        };\n        MatTabBodyPortal.decorators = [\n            { type: core.Directive, args: [{\n                        selector: '[matTabBodyHost]'\n                    },] }\n        ];\n        /** @nocollapse */\n        MatTabBodyPortal.ctorParameters = function () { return [\n            { type: core.ComponentFactoryResolver },\n            { type: core.ViewContainerRef },\n            { type: MatTabBody, decorators: [{ type: core.Inject, args: [core.forwardRef(function () { return MatTabBody; }),] }] }\n        ]; };\n        return MatTabBodyPortal;\n    }(portal.CdkPortalOutlet));\n    /**\n     * Base class with all of the `MatTabBody` functionality.\n     * @docs-private\n     */\n    var _MatTabBodyBase = /** @class */ (function () {\n        function _MatTabBodyBase(_elementRef, _dir, changeDetectorRef) {\n            var _this = this;\n            this._elementRef = _elementRef;\n            this._dir = _dir;\n            /** Subscription to the directionality change observable. */\n            this._dirChangeSubscription = rxjs.Subscription.EMPTY;\n            /** Emits when an animation on the tab is complete. */\n            this._translateTabComplete = new rxjs.Subject();\n            /** Event emitted when the tab begins to animate towards the center as the active tab. */\n            this._onCentering = new core.EventEmitter();\n            /** Event emitted before the centering of the tab begins. */\n            this._beforeCentering = new core.EventEmitter();\n            /** Event emitted before the centering of the tab begins. */\n            this._afterLeavingCenter = new core.EventEmitter();\n            /** Event emitted when the tab completes its animation towards the center. */\n            this._onCentered = new core.EventEmitter(true);\n            // Note that the default value will always be overwritten by `MatTabBody`, but we need one\n            // anyway to prevent the animations module from throwing an error if the body is used on its own.\n            /** Duration for the tab's animation. */\n            this.animationDuration = '500ms';\n            if (_dir) {\n                this._dirChangeSubscription = _dir.change.subscribe(function (dir) {\n                    _this._computePositionAnimationState(dir);\n                    changeDetectorRef.markForCheck();\n                });\n            }\n            // Ensure that we get unique animation events, because the `.done` callback can get\n            // invoked twice in some browsers. See https://github.com/angular/angular/issues/24084.\n            this._translateTabComplete.pipe(operators.distinctUntilChanged(function (x, y) {\n                return x.fromState === y.fromState && x.toState === y.toState;\n            })).subscribe(function (event) {\n                // If the transition to the center is complete, emit an event.\n                if (_this._isCenterPosition(event.toState) && _this._isCenterPosition(_this._position)) {\n                    _this._onCentered.emit();\n                }\n                if (_this._isCenterPosition(event.fromState) && !_this._isCenterPosition(_this._position)) {\n                    _this._afterLeavingCenter.emit();\n                }\n            });\n        }\n        Object.defineProperty(_MatTabBodyBase.prototype, \"position\", {\n            /** The shifted index position of the tab body, where zero represents the active center tab. */\n            set: function (position) {\n                this._positionIndex = position;\n                this._computePositionAnimationState();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * After initialized, check if the content is centered and has an origin. If so, set the\n         * special position states that transition the tab from the left or right before centering.\n         */\n        _MatTabBodyBase.prototype.ngOnInit = function () {\n            if (this._position == 'center' && this.origin != null) {\n                this._position = this._computePositionFromOrigin();\n            }\n        };\n        _MatTabBodyBase.prototype.ngOnDestroy = function () {\n            this._dirChangeSubscription.unsubscribe();\n            this._translateTabComplete.complete();\n        };\n        _MatTabBodyBase.prototype._onTranslateTabStarted = function (event) {\n            var isCentering = this._isCenterPosition(event.toState);\n            this._beforeCentering.emit(isCentering);\n            if (isCentering) {\n                this._onCentering.emit(this._elementRef.nativeElement.clientHeight);\n            }\n        };\n        /** The text direction of the containing app. */\n        _MatTabBodyBase.prototype._getLayoutDirection = function () {\n            return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n        };\n        /** Whether the provided position state is considered center, regardless of origin. */\n        _MatTabBodyBase.prototype._isCenterPosition = function (position) {\n            return position == 'center' ||\n                position == 'left-origin-center' ||\n                position == 'right-origin-center';\n        };\n        /** Computes the position state that will be used for the tab-body animation trigger. */\n        _MatTabBodyBase.prototype._computePositionAnimationState = function (dir) {\n            if (dir === void 0) { dir = this._getLayoutDirection(); }\n            if (this._positionIndex < 0) {\n                this._position = dir == 'ltr' ? 'left' : 'right';\n            }\n            else if (this._positionIndex > 0) {\n                this._position = dir == 'ltr' ? 'right' : 'left';\n            }\n            else {\n                this._position = 'center';\n            }\n        };\n        /**\n         * Computes the position state based on the specified origin position. This is used if the\n         * tab is becoming visible immediately after creation.\n         */\n        _MatTabBodyBase.prototype._computePositionFromOrigin = function () {\n            var dir = this._getLayoutDirection();\n            if ((dir == 'ltr' && this.origin <= 0) || (dir == 'rtl' && this.origin > 0)) {\n                return 'left-origin-center';\n            }\n            return 'right-origin-center';\n        };\n        _MatTabBodyBase.decorators = [\n            { type: core.Directive, args: [{\n                        // TODO(crisbeto): this selector can be removed when we update to Angular 9.0.\n                        selector: 'do-not-use-abstract-mat-tab-body-base'\n                    },] }\n        ];\n        /** @nocollapse */\n        _MatTabBodyBase.ctorParameters = function () { return [\n            { type: core.ElementRef },\n            { type: bidi.Directionality, decorators: [{ type: core.Optional }] },\n            { type: core.ChangeDetectorRef }\n        ]; };\n        _MatTabBodyBase.propDecorators = {\n            _onCentering: [{ type: core.Output }],\n            _beforeCentering: [{ type: core.Output }],\n            _afterLeavingCenter: [{ type: core.Output }],\n            _onCentered: [{ type: core.Output }],\n            _content: [{ type: core.Input, args: ['content',] }],\n            origin: [{ type: core.Input }],\n            animationDuration: [{ type: core.Input }],\n            position: [{ type: core.Input }]\n        };\n        return _MatTabBodyBase;\n    }());\n    /**\n     * Wrapper for the contents of a tab.\n     * @docs-private\n     */\n    var MatTabBody = /** @class */ (function (_super) {\n        tslib_1.__extends(MatTabBody, _super);\n        function MatTabBody(elementRef, dir, changeDetectorRef) {\n            return _super.call(this, elementRef, dir, changeDetectorRef) || this;\n        }\n        MatTabBody.decorators = [\n            { type: core.Component, args: [{\n                        moduleId: module.id,\n                        selector: 'mat-tab-body',\n                        template: \"<div class=\\\"mat-tab-body-content\\\" #content\\n     [@translateTab]=\\\"{\\n        value: _position,\\n        params: {animationDuration: animationDuration}\\n     }\\\"\\n     (@translateTab.start)=\\\"_onTranslateTabStarted($event)\\\"\\n     (@translateTab.done)=\\\"_translateTabComplete.next($event)\\\">\\n  <ng-template matTabBodyHost></ng-template>\\n</div>\\n\",\n                        encapsulation: core.ViewEncapsulation.None,\n                        changeDetection: core.ChangeDetectionStrategy.OnPush,\n                        animations: [matTabsAnimations.translateTab],\n                        host: {\n                            'class': 'mat-tab-body',\n                        },\n                        styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}/*# sourceMappingURL=tab-body.css.map */\\n\"]\n                    }] }\n        ];\n        /** @nocollapse */\n        MatTabBody.ctorParameters = function () { return [\n            { type: core.ElementRef },\n            { type: bidi.Directionality, decorators: [{ type: core.Optional }] },\n            { type: core.ChangeDetectorRef }\n        ]; };\n        MatTabBody.propDecorators = {\n            _portalHost: [{ type: core.ViewChild, args: [portal.PortalHostDirective, { static: false },] }]\n        };\n        return MatTabBody;\n    }(_MatTabBodyBase));\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Used to generate unique ID's for each tab component */\n    var nextId = 0;\n    /** A simple change event emitted on focus or selection changes. */\n    var MatTabChangeEvent = /** @class */ (function () {\n        function MatTabChangeEvent() {\n        }\n        return MatTabChangeEvent;\n    }());\n    /** Injection token that can be used to provide the default options the tabs module. */\n    var MAT_TABS_CONFIG = new core.InjectionToken('MAT_TABS_CONFIG');\n    // Boilerplate for applying mixins to MatTabGroup.\n    /** @docs-private */\n    var MatTabGroupMixinBase = /** @class */ (function () {\n        function MatTabGroupMixinBase(_elementRef) {\n            this._elementRef = _elementRef;\n        }\n        return MatTabGroupMixinBase;\n    }());\n    var _MatTabGroupMixinBase = core$1.mixinColor(core$1.mixinDisableRipple(MatTabGroupMixinBase), 'primary');\n    /**\n     * Base class with all of the `MatTabGroupBase` functionality.\n     * @docs-private\n     */\n    var _MatTabGroupBase = /** @class */ (function (_super) {\n        tslib_1.__extends(_MatTabGroupBase, _super);\n        function _MatTabGroupBase(elementRef, _changeDetectorRef, defaultConfig, _animationMode) {\n            var _this = _super.call(this, elementRef) || this;\n            _this._changeDetectorRef = _changeDetectorRef;\n            _this._animationMode = _animationMode;\n            /** The tab index that should be selected after the content has been checked. */\n            _this._indexToSelect = 0;\n            /** Snapshot of the height of the tab body wrapper before another tab is activated. */\n            _this._tabBodyWrapperHeight = 0;\n            /** Subscription to tabs being added/removed. */\n            _this._tabsSubscription = rxjs.Subscription.EMPTY;\n            /** Subscription to changes in the tab labels. */\n            _this._tabLabelSubscription = rxjs.Subscription.EMPTY;\n            _this._dynamicHeight = false;\n            _this._selectedIndex = null;\n            /** Position of the tab header. */\n            _this.headerPosition = 'above';\n            /** Output to enable support for two-way binding on `[(selectedIndex)]` */\n            _this.selectedIndexChange = new core.EventEmitter();\n            /** Event emitted when focus has changed within a tab group. */\n            _this.focusChange = new core.EventEmitter();\n            /** Event emitted when the body animation has completed */\n            _this.animationDone = new core.EventEmitter();\n            /** Event emitted when the tab selection has changed. */\n            _this.selectedTabChange = new core.EventEmitter(true);\n            _this._groupId = nextId++;\n            _this.animationDuration = defaultConfig && defaultConfig.animationDuration ?\n                defaultConfig.animationDuration : '500ms';\n            return _this;\n        }\n        Object.defineProperty(_MatTabGroupBase.prototype, \"dynamicHeight\", {\n            /** Whether the tab group should grow to the size of the active tab. */\n            get: function () { return this._dynamicHeight; },\n            set: function (value) { this._dynamicHeight = coercion.coerceBooleanProperty(value); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(_MatTabGroupBase.prototype, \"selectedIndex\", {\n            /** The index of the active tab. */\n            get: function () { return this._selectedIndex; },\n            set: function (value) {\n                this._indexToSelect = coercion.coerceNumberProperty(value, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(_MatTabGroupBase.prototype, \"animationDuration\", {\n            /** Duration for the tab animation. Will be normalized to milliseconds if no units are set. */\n            get: function () { return this._animationDuration; },\n            set: function (value) {\n                this._animationDuration = /^\\d+$/.test(value) ? value + 'ms' : value;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(_MatTabGroupBase.prototype, \"backgroundColor\", {\n            /** Background color of the tab group. */\n            get: function () { return this._backgroundColor; },\n            set: function (value) {\n                var nativeElement = this._elementRef.nativeElement;\n                nativeElement.classList.remove(\"mat-background-\" + this.backgroundColor);\n                if (value) {\n                    nativeElement.classList.add(\"mat-background-\" + value);\n                }\n                this._backgroundColor = value;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * After the content is checked, this component knows what tabs have been defined\n         * and what the selected index should be. This is where we can know exactly what position\n         * each tab should be in according to the new selected index, and additionally we know how\n         * a new selected tab should transition in (from the left or right).\n         */\n        _MatTabGroupBase.prototype.ngAfterContentChecked = function () {\n            var _this = this;\n            // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n            // the amount of tabs changes before the actual change detection runs.\n            var indexToSelect = this._indexToSelect = this._clampTabIndex(this._indexToSelect);\n            // If there is a change in selected index, emit a change event. Should not trigger if\n            // the selected index has not yet been initialized.\n            if (this._selectedIndex != indexToSelect) {\n                var isFirstRun_1 = this._selectedIndex == null;\n                if (!isFirstRun_1) {\n                    this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n                }\n                // Changing these values after change detection has run\n                // since the checked content may contain references to them.\n                Promise.resolve().then(function () {\n                    _this._tabs.forEach(function (tab, index) { return tab.isActive = index === indexToSelect; });\n                    if (!isFirstRun_1) {\n                        _this.selectedIndexChange.emit(indexToSelect);\n                    }\n                });\n            }\n            // Setup the position for each tab and optionally setup an origin on the next selected tab.\n            this._tabs.forEach(function (tab, index) {\n                tab.position = index - indexToSelect;\n                // If there is already a selected tab, then set up an origin for the next selected tab\n                // if it doesn't have one already.\n                if (_this._selectedIndex != null && tab.position == 0 && !tab.origin) {\n                    tab.origin = indexToSelect - _this._selectedIndex;\n                }\n            });\n            if (this._selectedIndex !== indexToSelect) {\n                this._selectedIndex = indexToSelect;\n                this._changeDetectorRef.markForCheck();\n            }\n        };\n        _MatTabGroupBase.prototype.ngAfterContentInit = function () {\n            var _this = this;\n            this._subscribeToTabLabels();\n            // Subscribe to changes in the amount of tabs, in order to be\n            // able to re-render the content as new tabs are added or removed.\n            this._tabsSubscription = this._tabs.changes.subscribe(function () {\n                var indexToSelect = _this._clampTabIndex(_this._indexToSelect);\n                // Maintain the previously-selected tab if a new tab is added or removed and there is no\n                // explicit change that selects a different tab.\n                if (indexToSelect === _this._selectedIndex) {\n                    var tabs = _this._tabs.toArray();\n                    for (var i = 0; i < tabs.length; i++) {\n                        if (tabs[i].isActive) {\n                            // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n                            // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n                            // adding a tab within the `selectedIndexChange` event.\n                            _this._indexToSelect = _this._selectedIndex = i;\n                            break;\n                        }\n                    }\n                }\n                _this._subscribeToTabLabels();\n                _this._changeDetectorRef.markForCheck();\n            });\n        };\n        _MatTabGroupBase.prototype.ngOnDestroy = function () {\n            this._tabsSubscription.unsubscribe();\n            this._tabLabelSubscription.unsubscribe();\n        };\n        /** Re-aligns the ink bar to the selected tab element. */\n        _MatTabGroupBase.prototype.realignInkBar = function () {\n            if (this._tabHeader) {\n                this._tabHeader._alignInkBarToSelectedTab();\n            }\n        };\n        _MatTabGroupBase.prototype._focusChanged = function (index) {\n            this.focusChange.emit(this._createChangeEvent(index));\n        };\n        _MatTabGroupBase.prototype._createChangeEvent = function (index) {\n            var event = new MatTabChangeEvent;\n            event.index = index;\n            if (this._tabs && this._tabs.length) {\n                event.tab = this._tabs.toArray()[index];\n            }\n            return event;\n        };\n        /**\n         * Subscribes to changes in the tab labels. This is needed, because the @Input for the label is\n         * on the MatTab component, whereas the data binding is inside the MatTabGroup. In order for the\n         * binding to be updated, we need to subscribe to changes in it and trigger change detection\n         * manually.\n         */\n        _MatTabGroupBase.prototype._subscribeToTabLabels = function () {\n            var _this = this;\n            if (this._tabLabelSubscription) {\n                this._tabLabelSubscription.unsubscribe();\n            }\n            this._tabLabelSubscription = rxjs.merge.apply(void 0, tslib_1.__spread(this._tabs.map(function (tab) { return tab._stateChanges; }))).subscribe(function () { return _this._changeDetectorRef.markForCheck(); });\n        };\n        /** Clamps the given index to the bounds of 0 and the tabs length. */\n        _MatTabGroupBase.prototype._clampTabIndex = function (index) {\n            // Note the `|| 0`, which ensures that values like NaN can't get through\n            // and which would otherwise throw the component into an infinite loop\n            // (since Math.max(NaN, 0) === NaN).\n            return Math.min(this._tabs.length - 1, Math.max(index || 0, 0));\n        };\n        /** Returns a unique id for each tab label element */\n        _MatTabGroupBase.prototype._getTabLabelId = function (i) {\n            return \"mat-tab-label-\" + this._groupId + \"-\" + i;\n        };\n        /** Returns a unique id for each tab content element */\n        _MatTabGroupBase.prototype._getTabContentId = function (i) {\n            return \"mat-tab-content-\" + this._groupId + \"-\" + i;\n        };\n        /**\n         * Sets the height of the body wrapper to the height of the activating tab if dynamic\n         * height property is true.\n         */\n        _MatTabGroupBase.prototype._setTabBodyWrapperHeight = function (tabHeight) {\n            if (!this._dynamicHeight || !this._tabBodyWrapperHeight) {\n                return;\n            }\n            var wrapper = this._tabBodyWrapper.nativeElement;\n            wrapper.style.height = this._tabBodyWrapperHeight + 'px';\n            // This conditional forces the browser to paint the height so that\n            // the animation to the new height can have an origin.\n            if (this._tabBodyWrapper.nativeElement.offsetHeight) {\n                wrapper.style.height = tabHeight + 'px';\n            }\n        };\n        /** Removes the height of the tab body wrapper. */\n        _MatTabGroupBase.prototype._removeTabBodyWrapperHeight = function () {\n            var wrapper = this._tabBodyWrapper.nativeElement;\n            this._tabBodyWrapperHeight = wrapper.clientHeight;\n            wrapper.style.height = '';\n            this.animationDone.emit();\n        };\n        /** Handle click events, setting new selected index if appropriate. */\n        _MatTabGroupBase.prototype._handleClick = function (tab, tabHeader, index) {\n            if (!tab.disabled) {\n                this.selectedIndex = tabHeader.focusIndex = index;\n            }\n        };\n        /** Retrieves the tabindex for the tab. */\n        _MatTabGroupBase.prototype._getTabIndex = function (tab, idx) {\n            if (tab.disabled) {\n                return null;\n            }\n            return this.selectedIndex === idx ? 0 : -1;\n        };\n        _MatTabGroupBase.decorators = [\n            { type: core.Directive, args: [{\n                        // TODO(crisbeto): this selector can be removed when we update to Angular 9.0.\n                        selector: 'do-not-use-abstract-mat-tab-group-base'\n                    },] }\n        ];\n        /** @nocollapse */\n        _MatTabGroupBase.ctorParameters = function () { return [\n            { type: core.ElementRef },\n            { type: core.ChangeDetectorRef },\n            { type: undefined, decorators: [{ type: core.Inject, args: [MAT_TABS_CONFIG,] }, { type: core.Optional }] },\n            { type: String, decorators: [{ type: core.Optional }, { type: core.Inject, args: [animations.ANIMATION_MODULE_TYPE,] }] }\n        ]; };\n        _MatTabGroupBase.propDecorators = {\n            dynamicHeight: [{ type: core.Input }],\n            selectedIndex: [{ type: core.Input }],\n            headerPosition: [{ type: core.Input }],\n            animationDuration: [{ type: core.Input }],\n            backgroundColor: [{ type: core.Input }],\n            selectedIndexChange: [{ type: core.Output }],\n            focusChange: [{ type: core.Output }],\n            animationDone: [{ type: core.Output }],\n            selectedTabChange: [{ type: core.Output }]\n        };\n        return _MatTabGroupBase;\n    }(_MatTabGroupMixinBase));\n    /**\n     * Material design tab-group component. Supports basic tab pairs (label + content) and includes\n     * animated ink-bar, keyboard navigation, and screen reader.\n     * See: https://material.io/design/components/tabs.html\n     */\n    var MatTabGroup = /** @class */ (function (_super) {\n        tslib_1.__extends(MatTabGroup, _super);\n        function MatTabGroup(elementRef, changeDetectorRef, defaultConfig, animationMode) {\n            return _super.call(this, elementRef, changeDetectorRef, defaultConfig, animationMode) || this;\n        }\n        MatTabGroup.decorators = [\n            { type: core.Component, args: [{\n                        moduleId: module.id,\n                        selector: 'mat-tab-group',\n                        exportAs: 'matTabGroup',\n                        template: \"<mat-tab-header #tabHeader\\n               [selectedIndex]=\\\"selectedIndex\\\"\\n               [disableRipple]=\\\"disableRipple\\\"\\n               (indexFocused)=\\\"_focusChanged($event)\\\"\\n               (selectFocusedIndex)=\\\"selectedIndex = $event\\\">\\n  <div class=\\\"mat-tab-label\\\" role=\\\"tab\\\" matTabLabelWrapper mat-ripple cdkMonitorElementFocus\\n       *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n       [id]=\\\"_getTabLabelId(i)\\\"\\n       [attr.tabIndex]=\\\"_getTabIndex(tab, i)\\\"\\n       [attr.aria-posinset]=\\\"i + 1\\\"\\n       [attr.aria-setsize]=\\\"_tabs.length\\\"\\n       [attr.aria-controls]=\\\"_getTabContentId(i)\\\"\\n       [attr.aria-selected]=\\\"selectedIndex == i\\\"\\n       [attr.aria-label]=\\\"tab.ariaLabel || null\\\"\\n       [attr.aria-labelledby]=\\\"(!tab.ariaLabel && tab.ariaLabelledby) ? tab.ariaLabelledby : null\\\"\\n       [class.mat-tab-label-active]=\\\"selectedIndex == i\\\"\\n       [disabled]=\\\"tab.disabled\\\"\\n       [matRippleDisabled]=\\\"tab.disabled || disableRipple\\\"\\n       (click)=\\\"_handleClick(tab, tabHeader, i)\\\">\\n\\n\\n    <div class=\\\"mat-tab-label-content\\\">\\n      <!-- If there is a label template, use it. -->\\n      <ng-template [ngIf]=\\\"tab.templateLabel\\\">\\n        <ng-template [cdkPortalOutlet]=\\\"tab.templateLabel\\\"></ng-template>\\n      </ng-template>\\n\\n      <!-- If there is not a label template, fall back to the text label. -->\\n      <ng-template [ngIf]=\\\"!tab.templateLabel\\\">{{tab.textLabel}}</ng-template>\\n    </div>\\n  </div>\\n</mat-tab-header>\\n\\n<div\\n  class=\\\"mat-tab-body-wrapper\\\"\\n  [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n  #tabBodyWrapper>\\n  <mat-tab-body role=\\\"tabpanel\\\"\\n               *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n               [id]=\\\"_getTabContentId(i)\\\"\\n               [attr.aria-labelledby]=\\\"_getTabLabelId(i)\\\"\\n               [class.mat-tab-body-active]=\\\"selectedIndex == i\\\"\\n               [content]=\\\"tab.content\\\"\\n               [position]=\\\"tab.position\\\"\\n               [origin]=\\\"tab.origin\\\"\\n               [animationDuration]=\\\"animationDuration\\\"\\n               (_onCentered)=\\\"_removeTabBodyWrapperHeight()\\\"\\n               (_onCentering)=\\\"_setTabBodyWrapperHeight($event)\\\">\\n  </mat-tab-body>\\n</div>\\n\",\n                        encapsulation: core.ViewEncapsulation.None,\n                        changeDetection: core.ChangeDetectionStrategy.OnPush,\n                        inputs: ['color', 'disableRipple'],\n                        host: {\n                            'class': 'mat-tab-group',\n                            '[class.mat-tab-group-dynamic-height]': 'dynamicHeight',\n                            '[class.mat-tab-group-inverted-header]': 'headerPosition === \"below\"',\n                        },\n                        styles: [\".mat-tab-group{display:flex;flex-direction:column}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}@media(-ms-high-contrast: active){.mat-tab-label:focus{outline:dotted 2px}}.mat-tab-label.mat-tab-disabled{cursor:default}@media(-ms-high-contrast: active){.mat-tab-label.mat-tab-disabled{opacity:.5}}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}@media(-ms-high-contrast: active){.mat-tab-label{opacity:1}}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-tab-body-wrapper{transition:none;animation:none}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}/*# sourceMappingURL=tab-group.css.map */\\n\"]\n                    }] }\n        ];\n        /** @nocollapse */\n        MatTabGroup.ctorParameters = function () { return [\n            { type: core.ElementRef },\n            { type: core.ChangeDetectorRef },\n            { type: undefined, decorators: [{ type: core.Inject, args: [MAT_TABS_CONFIG,] }, { type: core.Optional }] },\n            { type: String, decorators: [{ type: core.Optional }, { type: core.Inject, args: [animations.ANIMATION_MODULE_TYPE,] }] }\n        ]; };\n        MatTabGroup.propDecorators = {\n            _tabs: [{ type: core.ContentChildren, args: [MatTab,] }],\n            _tabBodyWrapper: [{ type: core.ViewChild, args: ['tabBodyWrapper', { static: false },] }],\n            _tabHeader: [{ type: core.ViewChild, args: ['tabHeader', { static: false },] }]\n        };\n        return MatTabGroup;\n    }(_MatTabGroupBase));\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Boilerplate for applying mixins to MatTabLabelWrapper.\n    /** @docs-private */\n    var MatTabLabelWrapperBase = /** @class */ (function () {\n        function MatTabLabelWrapperBase() {\n        }\n        return MatTabLabelWrapperBase;\n    }());\n    var _MatTabLabelWrapperMixinBase = core$1.mixinDisabled(MatTabLabelWrapperBase);\n    /**\n     * Used in the `mat-tab-group` view to display tab labels.\n     * @docs-private\n     */\n    var MatTabLabelWrapper = /** @class */ (function (_super) {\n        tslib_1.__extends(MatTabLabelWrapper, _super);\n        function MatTabLabelWrapper(elementRef) {\n            var _this = _super.call(this) || this;\n            _this.elementRef = elementRef;\n            return _this;\n        }\n        /** Sets focus on the wrapper element */\n        MatTabLabelWrapper.prototype.focus = function () {\n            this.elementRef.nativeElement.focus();\n        };\n        MatTabLabelWrapper.prototype.getOffsetLeft = function () {\n            return this.elementRef.nativeElement.offsetLeft;\n        };\n        MatTabLabelWrapper.prototype.getOffsetWidth = function () {\n            return this.elementRef.nativeElement.offsetWidth;\n        };\n        MatTabLabelWrapper.decorators = [\n            { type: core.Directive, args: [{\n                        selector: '[matTabLabelWrapper]',\n                        inputs: ['disabled'],\n                        host: {\n                            '[class.mat-tab-disabled]': 'disabled',\n                            '[attr.aria-disabled]': '!!disabled',\n                        }\n                    },] }\n        ];\n        /** @nocollapse */\n        MatTabLabelWrapper.ctorParameters = function () { return [\n            { type: core.ElementRef }\n        ]; };\n        return MatTabLabelWrapper;\n    }(_MatTabLabelWrapperMixinBase));\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Config used to bind passive event listeners */\n    var passiveEventListenerOptions = platform.normalizePassiveListenerOptions({ passive: true });\n    /**\n     * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n     * provide a small affordance to the label next to it.\n     */\n    var EXAGGERATED_OVERSCROLL = 60;\n    /**\n     * Amount of milliseconds to wait before starting to scroll the header automatically.\n     * Set a little conservatively in order to handle fake events dispatched on touch devices.\n     */\n    var HEADER_SCROLL_DELAY = 650;\n    /**\n     * Interval in milliseconds at which to scroll the header\n     * while the user is holding their pointer.\n     */\n    var HEADER_SCROLL_INTERVAL = 100;\n    /**\n     * Base class for a tab header that supported pagination.\n     * @docs-private\n     */\n    var MatPaginatedTabHeader = /** @class */ (function () {\n        function MatPaginatedTabHeader(_elementRef, _changeDetectorRef, _viewportRuler, _dir, _ngZone, \n        /**\n         * @deprecated @breaking-change 9.0.0 `_platform` and `_animationMode`\n         * parameters to become required.\n         */\n        _platform, _animationMode) {\n            var _this = this;\n            this._elementRef = _elementRef;\n            this._changeDetectorRef = _changeDetectorRef;\n            this._viewportRuler = _viewportRuler;\n            this._dir = _dir;\n            this._ngZone = _ngZone;\n            this._platform = _platform;\n            this._animationMode = _animationMode;\n            /** The distance in pixels that the tab labels should be translated to the left. */\n            this._scrollDistance = 0;\n            /** Whether the header should scroll to the selected index after the view has been checked. */\n            this._selectedIndexChanged = false;\n            /** Emits when the component is destroyed. */\n            this._destroyed = new rxjs.Subject();\n            /** Whether the controls for pagination should be displayed */\n            this._showPaginationControls = false;\n            /** Whether the tab list can be scrolled more towards the end of the tab label list. */\n            this._disableScrollAfter = true;\n            /** Whether the tab list can be scrolled more towards the beginning of the tab label list. */\n            this._disableScrollBefore = true;\n            /** Stream that will stop the automated scrolling. */\n            this._stopScrolling = new rxjs.Subject();\n            this._selectedIndex = 0;\n            /** Event emitted when the option is selected. */\n            this.selectFocusedIndex = new core.EventEmitter();\n            /** Event emitted when a label is focused. */\n            this.indexFocused = new core.EventEmitter();\n            // Bind the `mouseleave` event on the outside since it doesn't change anything in the view.\n            _ngZone.runOutsideAngular(function () {\n                rxjs.fromEvent(_elementRef.nativeElement, 'mouseleave')\n                    .pipe(operators.takeUntil(_this._destroyed))\n                    .subscribe(function () {\n                    _this._stopInterval();\n                });\n            });\n        }\n        Object.defineProperty(MatPaginatedTabHeader.prototype, \"selectedIndex\", {\n            /** The index of the active tab. */\n            get: function () { return this._selectedIndex; },\n            set: function (value) {\n                value = coercion.coerceNumberProperty(value);\n                if (this._selectedIndex != value) {\n                    this._selectedIndexChanged = true;\n                    this._selectedIndex = value;\n                    if (this._keyManager) {\n                        this._keyManager.updateActiveItemIndex(value);\n                    }\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        MatPaginatedTabHeader.prototype.ngAfterViewInit = function () {\n            var _this = this;\n            // We need to handle these events manually, because we want to bind passive event listeners.\n            rxjs.fromEvent(this._previousPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n                .pipe(operators.takeUntil(this._destroyed))\n                .subscribe(function () {\n                _this._handlePaginatorPress('before');\n            });\n            rxjs.fromEvent(this._nextPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n                .pipe(operators.takeUntil(this._destroyed))\n                .subscribe(function () {\n                _this._handlePaginatorPress('after');\n            });\n        };\n        MatPaginatedTabHeader.prototype.ngAfterContentInit = function () {\n            var _this = this;\n            var dirChange = this._dir ? this._dir.change : rxjs.of(null);\n            var resize = this._viewportRuler.change(150);\n            var realign = function () {\n                _this.updatePagination();\n                _this._alignInkBarToSelectedTab();\n            };\n            this._keyManager = new a11y.FocusKeyManager(this._items)\n                .withHorizontalOrientation(this._getLayoutDirection())\n                .withWrap();\n            this._keyManager.updateActiveItem(0);\n            // Defer the first call in order to allow for slower browsers to lay out the elements.\n            // This helps in cases where the user lands directly on a page with paginated tabs.\n            typeof requestAnimationFrame !== 'undefined' ? requestAnimationFrame(realign) : realign();\n            // On dir change or window resize, realign the ink bar and update the orientation of\n            // the key manager if the direction has changed.\n            rxjs.merge(dirChange, resize, this._items.changes).pipe(operators.takeUntil(this._destroyed)).subscribe(function () {\n                realign();\n                _this._keyManager.withHorizontalOrientation(_this._getLayoutDirection());\n            });\n            // If there is a change in the focus key manager we need to emit the `indexFocused`\n            // event in order to provide a public event that notifies about focus changes. Also we realign\n            // the tabs container by scrolling the new focused tab into the visible section.\n            this._keyManager.change.pipe(operators.takeUntil(this._destroyed)).subscribe(function (newFocusIndex) {\n                _this.indexFocused.emit(newFocusIndex);\n                _this._setTabFocus(newFocusIndex);\n            });\n        };\n        MatPaginatedTabHeader.prototype.ngAfterContentChecked = function () {\n            // If the number of tab labels have changed, check if scrolling should be enabled\n            if (this._tabLabelCount != this._items.length) {\n                this.updatePagination();\n                this._tabLabelCount = this._items.length;\n                this._changeDetectorRef.markForCheck();\n            }\n            // If the selected index has changed, scroll to the label and check if the scrolling controls\n            // should be disabled.\n            if (this._selectedIndexChanged) {\n                this._scrollToLabel(this._selectedIndex);\n                this._checkScrollingControls();\n                this._alignInkBarToSelectedTab();\n                this._selectedIndexChanged = false;\n                this._changeDetectorRef.markForCheck();\n            }\n            // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n            // then translate the header to reflect this.\n            if (this._scrollDistanceChanged) {\n                this._updateTabScrollPosition();\n                this._scrollDistanceChanged = false;\n                this._changeDetectorRef.markForCheck();\n            }\n        };\n        MatPaginatedTabHeader.prototype.ngOnDestroy = function () {\n            this._destroyed.next();\n            this._destroyed.complete();\n            this._stopScrolling.complete();\n        };\n        /** Handles keyboard events on the header. */\n        MatPaginatedTabHeader.prototype._handleKeydown = function (event) {\n            // We don't handle any key bindings with a modifier key.\n            if (keycodes.hasModifierKey(event)) {\n                return;\n            }\n            switch (event.keyCode) {\n                case keycodes.HOME:\n                    this._keyManager.setFirstItemActive();\n                    event.preventDefault();\n                    break;\n                case keycodes.END:\n                    this._keyManager.setLastItemActive();\n                    event.preventDefault();\n                    break;\n                case keycodes.ENTER:\n                case keycodes.SPACE:\n                    this.selectFocusedIndex.emit(this.focusIndex);\n                    this._itemSelected(event);\n                    break;\n                default:\n                    this._keyManager.onKeydown(event);\n            }\n        };\n        /**\n         * Callback for when the MutationObserver detects that the content has changed.\n         */\n        MatPaginatedTabHeader.prototype._onContentChanges = function () {\n            var _this = this;\n            var textContent = this._elementRef.nativeElement.textContent;\n            // We need to diff the text content of the header, because the MutationObserver callback\n            // will fire even if the text content didn't change which is inefficient and is prone\n            // to infinite loops if a poorly constructed expression is passed in (see #14249).\n            if (textContent !== this._currentTextContent) {\n                this._currentTextContent = textContent || '';\n                // The content observer runs outside the `NgZone` by default, which\n                // means that we need to bring the callback back in ourselves.\n                this._ngZone.run(function () {\n                    _this.updatePagination();\n                    _this._alignInkBarToSelectedTab();\n                    _this._changeDetectorRef.markForCheck();\n                });\n            }\n        };\n        /**\n         * Updates the view whether pagination should be enabled or not.\n         *\n         * WARNING: Calling this method can be very costly in terms of performance. It should be called\n         * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n         * page.\n         */\n        MatPaginatedTabHeader.prototype.updatePagination = function () {\n            this._checkPaginationEnabled();\n            this._checkScrollingControls();\n            this._updateTabScrollPosition();\n        };\n        Object.defineProperty(MatPaginatedTabHeader.prototype, \"focusIndex\", {\n            /** Tracks which element has focus; used for keyboard navigation */\n            get: function () {\n                return this._keyManager ? this._keyManager.activeItemIndex : 0;\n            },\n            /** When the focus index is set, we must manually send focus to the correct label */\n            set: function (value) {\n                if (!this._isValidIndex(value) || this.focusIndex === value || !this._keyManager) {\n                    return;\n                }\n                this._keyManager.setActiveItem(value);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n         * providing a valid index and return true.\n         */\n        MatPaginatedTabHeader.prototype._isValidIndex = function (index) {\n            if (!this._items) {\n                return true;\n            }\n            var tab = this._items ? this._items.toArray()[index] : null;\n            return !!tab && !tab.disabled;\n        };\n        /**\n         * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n         * scrolling is enabled.\n         */\n        MatPaginatedTabHeader.prototype._setTabFocus = function (tabIndex) {\n            if (this._showPaginationControls) {\n                this._scrollToLabel(tabIndex);\n            }\n            if (this._items && this._items.length) {\n                this._items.toArray()[tabIndex].focus();\n                // Do not let the browser manage scrolling to focus the element, this will be handled\n                // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n                // should be the full width minus the offset width.\n                var containerEl = this._tabListContainer.nativeElement;\n                var dir = this._getLayoutDirection();\n                if (dir == 'ltr') {\n                    containerEl.scrollLeft = 0;\n                }\n                else {\n                    containerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;\n                }\n            }\n        };\n        /** The layout direction of the containing app. */\n        MatPaginatedTabHeader.prototype._getLayoutDirection = function () {\n            return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n        };\n        /** Performs the CSS transformation on the tab list that will cause the list to scroll. */\n        MatPaginatedTabHeader.prototype._updateTabScrollPosition = function () {\n            var scrollDistance = this.scrollDistance;\n            var platform = this._platform;\n            var translateX = this._getLayoutDirection() === 'ltr' ? -scrollDistance : scrollDistance;\n            // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n            // seems to cause flickering and overflow in Internet Explorer. For example, the ink bar\n            // and ripples will exceed the boundaries of the visible tab bar.\n            // See: https://github.com/angular/components/issues/10276\n            // We round the `transform` here, because transforms with sub-pixel precision cause some\n            // browsers to blur the content of the element.\n            this._tabList.nativeElement.style.transform = \"translateX(\" + Math.round(translateX) + \"px)\";\n            // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n            // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n            // it doesn't get thrown off. Note that we scope it only to IE and Edge, because messing\n            // with the scroll position throws off Chrome 71+ in RTL mode (see #14689).\n            // @breaking-change 9.0.0 Remove null check for `platform` after it can no longer be undefined.\n            if (platform && (platform.TRIDENT || platform.EDGE)) {\n                this._tabListContainer.nativeElement.scrollLeft = 0;\n            }\n        };\n        Object.defineProperty(MatPaginatedTabHeader.prototype, \"scrollDistance\", {\n            /** Sets the distance in pixels that the tab header should be transformed in the X-axis. */\n            get: function () { return this._scrollDistance; },\n            set: function (value) {\n                this._scrollTo(value);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n         * the end of the list, respectively). The distance to scroll is computed to be a third of the\n         * length of the tab list view window.\n         *\n         * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n         * should be called sparingly.\n         */\n        MatPaginatedTabHeader.prototype._scrollHeader = function (direction) {\n            var viewLength = this._tabListContainer.nativeElement.offsetWidth;\n            // Move the scroll distance one-third the length of the tab list's viewport.\n            var scrollAmount = (direction == 'before' ? -1 : 1) * viewLength / 3;\n            return this._scrollTo(this._scrollDistance + scrollAmount);\n        };\n        /** Handles click events on the pagination arrows. */\n        MatPaginatedTabHeader.prototype._handlePaginatorClick = function (direction) {\n            this._stopInterval();\n            this._scrollHeader(direction);\n        };\n        /**\n         * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n         *\n         * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n         * should be called sparingly.\n         */\n        MatPaginatedTabHeader.prototype._scrollToLabel = function (labelIndex) {\n            var selectedLabel = this._items ? this._items.toArray()[labelIndex] : null;\n            if (!selectedLabel) {\n                return;\n            }\n            // The view length is the visible width of the tab labels.\n            var viewLength = this._tabListContainer.nativeElement.offsetWidth;\n            var _a = selectedLabel.elementRef.nativeElement, offsetLeft = _a.offsetLeft, offsetWidth = _a.offsetWidth;\n            var labelBeforePos, labelAfterPos;\n            if (this._getLayoutDirection() == 'ltr') {\n                labelBeforePos = offsetLeft;\n                labelAfterPos = labelBeforePos + offsetWidth;\n            }\n            else {\n                labelAfterPos = this._tabList.nativeElement.offsetWidth - offsetLeft;\n                labelBeforePos = labelAfterPos - offsetWidth;\n            }\n            var beforeVisiblePos = this.scrollDistance;\n            var afterVisiblePos = this.scrollDistance + viewLength;\n            if (labelBeforePos < beforeVisiblePos) {\n                // Scroll header to move label to the before direction\n                this.scrollDistance -= beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n            }\n            else if (labelAfterPos > afterVisiblePos) {\n                // Scroll header to move label to the after direction\n                this.scrollDistance += labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n            }\n        };\n        /**\n         * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n         * tab list is wider than the size of the header container, then the pagination controls should\n         * be shown.\n         *\n         * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n         * should be called sparingly.\n         */\n        MatPaginatedTabHeader.prototype._checkPaginationEnabled = function () {\n            var isEnabled = this._tabList.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;\n            if (!isEnabled) {\n                this.scrollDistance = 0;\n            }\n            if (isEnabled !== this._showPaginationControls) {\n                this._changeDetectorRef.markForCheck();\n            }\n            this._showPaginationControls = isEnabled;\n        };\n        /**\n         * Evaluate whether the before and after controls should be enabled or disabled.\n         * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n         * before button. If the header is at the end of the list (scroll distance is equal to the\n         * maximum distance we can scroll), then disable the after button.\n         *\n         * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n         * should be called sparingly.\n         */\n        MatPaginatedTabHeader.prototype._checkScrollingControls = function () {\n            // Check if the pagination arrows should be activated.\n            this._disableScrollBefore = this.scrollDistance == 0;\n            this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance();\n            this._changeDetectorRef.markForCheck();\n        };\n        /**\n         * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n         * is equal to the difference in width between the tab list container and tab header container.\n         *\n         * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n         * should be called sparingly.\n         */\n        MatPaginatedTabHeader.prototype._getMaxScrollDistance = function () {\n            var lengthOfTabList = this._tabList.nativeElement.scrollWidth;\n            var viewLength = this._tabListContainer.nativeElement.offsetWidth;\n            return (lengthOfTabList - viewLength) || 0;\n        };\n        /** Tells the ink-bar to align itself to the current label wrapper */\n        MatPaginatedTabHeader.prototype._alignInkBarToSelectedTab = function () {\n            var selectedItem = this._items && this._items.length ?\n                this._items.toArray()[this.selectedIndex] : null;\n            var selectedLabelWrapper = selectedItem ? selectedItem.elementRef.nativeElement : null;\n            if (selectedLabelWrapper) {\n                this._inkBar.alignToElement(selectedLabelWrapper);\n            }\n            else {\n                this._inkBar.hide();\n            }\n        };\n        /** Stops the currently-running paginator interval.  */\n        MatPaginatedTabHeader.prototype._stopInterval = function () {\n            this._stopScrolling.next();\n        };\n        /**\n         * Handles the user pressing down on one of the paginators.\n         * Starts scrolling the header after a certain amount of time.\n         * @param direction In which direction the paginator should be scrolled.\n         */\n        MatPaginatedTabHeader.prototype._handlePaginatorPress = function (direction) {\n            var _this = this;\n            // Avoid overlapping timers.\n            this._stopInterval();\n            // Start a timer after the delay and keep firing based on the interval.\n            rxjs.timer(HEADER_SCROLL_DELAY, HEADER_SCROLL_INTERVAL)\n                // Keep the timer going until something tells it to stop or the component is destroyed.\n                .pipe(operators.takeUntil(rxjs.merge(this._stopScrolling, this._destroyed)))\n                .subscribe(function () {\n                var _a = _this._scrollHeader(direction), maxScrollDistance = _a.maxScrollDistance, distance = _a.distance;\n                // Stop the timer if we've reached the start or the end.\n                if (distance === 0 || distance >= maxScrollDistance) {\n                    _this._stopInterval();\n                }\n            });\n        };\n        /**\n         * Scrolls the header to a given position.\n         * @param position Position to which to scroll.\n         * @returns Information on the current scroll distance and the maximum.\n         */\n        MatPaginatedTabHeader.prototype._scrollTo = function (position) {\n            var maxScrollDistance = this._getMaxScrollDistance();\n            this._scrollDistance = Math.max(0, Math.min(maxScrollDistance, position));\n            // Mark that the scroll distance has changed so that after the view is checked, the CSS\n            // transformation can move the header.\n            this._scrollDistanceChanged = true;\n            this._checkScrollingControls();\n            return { maxScrollDistance: maxScrollDistance, distance: this._scrollDistance };\n        };\n        MatPaginatedTabHeader.decorators = [\n            { type: core.Directive, args: [{\n                        // TODO(crisbeto): this selector can be removed when we update to Angular 9.0.\n                        selector: 'do-not-use-abstract-mat-paginated-tab-header'\n                    },] }\n        ];\n        /** @nocollapse */\n        MatPaginatedTabHeader.ctorParameters = function () { return [\n            { type: core.ElementRef },\n            { type: core.ChangeDetectorRef },\n            { type: scrolling.ViewportRuler },\n            { type: bidi.Directionality, decorators: [{ type: core.Optional }] },\n            { type: core.NgZone },\n            { type: platform.Platform },\n            { type: String, decorators: [{ type: core.Optional }, { type: core.Inject, args: [animations.ANIMATION_MODULE_TYPE,] }] }\n        ]; };\n        return MatPaginatedTabHeader;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class with all of the `MatTabHeader` functionality.\n     * @docs-private\n     */\n    var _MatTabHeaderBase = /** @class */ (function (_super) {\n        tslib_1.__extends(_MatTabHeaderBase, _super);\n        function _MatTabHeaderBase(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, \n        // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n        animationMode) {\n            var _this = _super.call(this, elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode) || this;\n            _this._disableRipple = false;\n            return _this;\n        }\n        Object.defineProperty(_MatTabHeaderBase.prototype, \"disableRipple\", {\n            /** Whether the ripple effect is disabled or not. */\n            get: function () { return this._disableRipple; },\n            set: function (value) { this._disableRipple = coercion.coerceBooleanProperty(value); },\n            enumerable: true,\n            configurable: true\n        });\n        _MatTabHeaderBase.prototype._itemSelected = function (event) {\n            event.preventDefault();\n        };\n        _MatTabHeaderBase.decorators = [\n            { type: core.Directive, args: [{\n                        // TODO(crisbeto): this selector can be removed when we update to Angular 9.0.\n                        selector: 'do-not-use-abstract-mat-tab-header-base'\n                    },] }\n        ];\n        /** @nocollapse */\n        _MatTabHeaderBase.ctorParameters = function () { return [\n            { type: core.ElementRef },\n            { type: core.ChangeDetectorRef },\n            { type: scrolling.ViewportRuler },\n            { type: bidi.Directionality, decorators: [{ type: core.Optional }] },\n            { type: core.NgZone },\n            { type: platform.Platform },\n            { type: String, decorators: [{ type: core.Optional }, { type: core.Inject, args: [animations.ANIMATION_MODULE_TYPE,] }] }\n        ]; };\n        _MatTabHeaderBase.propDecorators = {\n            disableRipple: [{ type: core.Input }]\n        };\n        return _MatTabHeaderBase;\n    }(MatPaginatedTabHeader));\n    /**\n     * The header of the tab group which displays a list of all the tabs in the tab group. Includes\n     * an ink bar that follows the currently selected tab. When the tabs list's width exceeds the\n     * width of the header container, then arrows will be displayed to allow the user to scroll\n     * left and right across the header.\n     * @docs-private\n     */\n    var MatTabHeader = /** @class */ (function (_super) {\n        tslib_1.__extends(MatTabHeader, _super);\n        function MatTabHeader(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, \n        // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n        animationMode) {\n            return _super.call(this, elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode) || this;\n        }\n        MatTabHeader.decorators = [\n            { type: core.Component, args: [{\n                        moduleId: module.id,\n                        selector: 'mat-tab-header',\n                        template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\\n<div class=\\\"mat-tab-label-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    #tabList\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    role=\\\"tablist\\\"\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-labels\\\">\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after')\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\",\n                        inputs: ['selectedIndex'],\n                        outputs: ['selectFocusedIndex', 'indexFocused'],\n                        encapsulation: core.ViewEncapsulation.None,\n                        changeDetection: core.ChangeDetectionStrategy.OnPush,\n                        host: {\n                            'class': 'mat-tab-header',\n                            '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                            '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n                        },\n                        styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}@media(-ms-high-contrast: active){.mat-ink-bar{outline:solid 2px;height:0}}.mat-tab-labels{display:flex}[mat-align-tabs=center] .mat-tab-labels{justify-content:center}[mat-align-tabs=end] .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}._mat-animation-noopable.mat-tab-list{transition:none;animation:none}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}@media(-ms-high-contrast: active){.mat-tab-label:focus{outline:dotted 2px}}.mat-tab-label.mat-tab-disabled{cursor:default}@media(-ms-high-contrast: active){.mat-tab-label.mat-tab-disabled{opacity:.5}}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}@media(-ms-high-contrast: active){.mat-tab-label{opacity:1}}@media(max-width: 599px){.mat-tab-label{min-width:72px}}/*# sourceMappingURL=tab-header.css.map */\\n\"]\n                    }] }\n        ];\n        /** @nocollapse */\n        MatTabHeader.ctorParameters = function () { return [\n            { type: core.ElementRef },\n            { type: core.ChangeDetectorRef },\n            { type: scrolling.ViewportRuler },\n            { type: bidi.Directionality, decorators: [{ type: core.Optional }] },\n            { type: core.NgZone },\n            { type: platform.Platform },\n            { type: String, decorators: [{ type: core.Optional }, { type: core.Inject, args: [animations.ANIMATION_MODULE_TYPE,] }] }\n        ]; };\n        MatTabHeader.propDecorators = {\n            _items: [{ type: core.ContentChildren, args: [MatTabLabelWrapper,] }],\n            _inkBar: [{ type: core.ViewChild, args: [MatInkBar, { static: true },] }],\n            _tabListContainer: [{ type: core.ViewChild, args: ['tabListContainer', { static: true },] }],\n            _tabList: [{ type: core.ViewChild, args: ['tabList', { static: true },] }],\n            _nextPaginator: [{ type: core.ViewChild, args: ['nextPaginator', { static: false },] }],\n            _previousPaginator: [{ type: core.ViewChild, args: ['previousPaginator', { static: false },] }]\n        };\n        return MatTabHeader;\n    }(_MatTabHeaderBase));\n\n    /**\n     * Base class with all of the `MatTabNav` functionality.\n     * @docs-private\n     */\n    var _MatTabNavBase = /** @class */ (function (_super) {\n        tslib_1.__extends(_MatTabNavBase, _super);\n        function _MatTabNavBase(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, \n        /**\n         * @deprecated @breaking-change 9.0.0 `platform` parameter to become required.\n         */\n        platform, animationMode) {\n            var _this = _super.call(this, elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode) || this;\n            _this._disableRipple = false;\n            /** Theme color of the nav bar. */\n            _this.color = 'primary';\n            return _this;\n        }\n        Object.defineProperty(_MatTabNavBase.prototype, \"backgroundColor\", {\n            /** Background color of the tab nav. */\n            get: function () { return this._backgroundColor; },\n            set: function (value) {\n                var classList = this._elementRef.nativeElement.classList;\n                classList.remove(\"mat-background-\" + this.backgroundColor);\n                if (value) {\n                    classList.add(\"mat-background-\" + value);\n                }\n                this._backgroundColor = value;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(_MatTabNavBase.prototype, \"disableRipple\", {\n            /** Whether the ripple effect is disabled or not. */\n            get: function () { return this._disableRipple; },\n            set: function (value) { this._disableRipple = coercion.coerceBooleanProperty(value); },\n            enumerable: true,\n            configurable: true\n        });\n        _MatTabNavBase.prototype._itemSelected = function () {\n            // noop\n        };\n        _MatTabNavBase.prototype.ngAfterContentInit = function () {\n            var _this = this;\n            // We need this to run before the `changes` subscription in parent to ensure that the\n            // selectedIndex is up-to-date by the time the super class starts looking for it.\n            this._items.changes.pipe(operators.startWith(null), operators.takeUntil(this._destroyed)).subscribe(function () {\n                _this.updateActiveLink();\n            });\n            _super.prototype.ngAfterContentInit.call(this);\n        };\n        /**\n         * Notifies the component that the active link has been changed.\n         * @breaking-change 8.0.0 `element` parameter to be removed.\n         */\n        _MatTabNavBase.prototype.updateActiveLink = function (_element) {\n            if (!this._items) {\n                return;\n            }\n            var items = this._items.toArray();\n            for (var i = 0; i < items.length; i++) {\n                if (items[i].active) {\n                    this.selectedIndex = i;\n                    this._changeDetectorRef.markForCheck();\n                    return;\n                }\n            }\n            // The ink bar should hide itself if no items are active.\n            this.selectedIndex = -1;\n            this._inkBar.hide();\n        };\n        _MatTabNavBase.decorators = [\n            { type: core.Directive, args: [{\n                        // TODO(crisbeto): this selector can be removed when we update to Angular 9.0.\n                        selector: 'do-not-use-abstract-mat-tab-nav-base'\n                    },] }\n        ];\n        /** @nocollapse */\n        _MatTabNavBase.ctorParameters = function () { return [\n            { type: core.ElementRef },\n            { type: bidi.Directionality, decorators: [{ type: core.Optional }] },\n            { type: core.NgZone },\n            { type: core.ChangeDetectorRef },\n            { type: scrolling.ViewportRuler },\n            { type: platform.Platform, decorators: [{ type: core.Optional }] },\n            { type: String, decorators: [{ type: core.Optional }, { type: core.Inject, args: [animations.ANIMATION_MODULE_TYPE,] }] }\n        ]; };\n        _MatTabNavBase.propDecorators = {\n            backgroundColor: [{ type: core.Input }],\n            disableRipple: [{ type: core.Input }],\n            color: [{ type: core.Input }]\n        };\n        return _MatTabNavBase;\n    }(MatPaginatedTabHeader));\n    /**\n     * Navigation component matching the styles of the tab group header.\n     * Provides anchored navigation with animated ink bar.\n     */\n    var MatTabNav = /** @class */ (function (_super) {\n        tslib_1.__extends(MatTabNav, _super);\n        function MatTabNav(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, \n        /**\n         * @deprecated @breaking-change 9.0.0 `platform` parameter to become required.\n         */\n        platform, animationMode) {\n            return _super.call(this, elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode) || this;\n        }\n        MatTabNav.decorators = [\n            { type: core.Component, args: [{\n                        moduleId: module.id,\n                        selector: '[mat-tab-nav-bar]',\n                        exportAs: 'matTabNavBar, matTabNav',\n                        inputs: ['color'],\n                        template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\\n<div class=\\\"mat-tab-link-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div class=\\\"mat-tab-list\\\" #tabList (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-links\\\">\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after')\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\",\n                        host: {\n                            'class': 'mat-tab-nav-bar mat-tab-header',\n                            '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                            '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n                            '[class.mat-primary]': 'color !== \"warn\" && color !== \"accent\"',\n                            '[class.mat-accent]': 'color === \"accent\"',\n                            '[class.mat-warn]': 'color === \"warn\"',\n                        },\n                        encapsulation: core.ViewEncapsulation.None,\n                        changeDetection: core.ChangeDetectionStrategy.OnPush,\n                        styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-links{display:flex}[mat-align-tabs=center] .mat-tab-links{justify-content:center}[mat-align-tabs=end] .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}@media(-ms-high-contrast: active){.mat-ink-bar{outline:solid 2px;height:0}}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:none}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}@media(-ms-high-contrast: active){.mat-tab-link:focus{outline:dotted 2px}}.mat-tab-link.mat-tab-disabled{cursor:default}@media(-ms-high-contrast: active){.mat-tab-link.mat-tab-disabled{opacity:.5}}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}@media(-ms-high-contrast: active){.mat-tab-link{opacity:1}}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media(max-width: 599px){.mat-tab-link{min-width:72px}}/*# sourceMappingURL=tab-nav-bar.css.map */\\n\"]\n                    }] }\n        ];\n        /** @nocollapse */\n        MatTabNav.ctorParameters = function () { return [\n            { type: core.ElementRef },\n            { type: bidi.Directionality, decorators: [{ type: core.Optional }] },\n            { type: core.NgZone },\n            { type: core.ChangeDetectorRef },\n            { type: scrolling.ViewportRuler },\n            { type: platform.Platform, decorators: [{ type: core.Optional }] },\n            { type: String, decorators: [{ type: core.Optional }, { type: core.Inject, args: [animations.ANIMATION_MODULE_TYPE,] }] }\n        ]; };\n        MatTabNav.propDecorators = {\n            _items: [{ type: core.ContentChildren, args: [core.forwardRef(function () { return MatTabLink; }), { descendants: true },] }],\n            _inkBar: [{ type: core.ViewChild, args: [MatInkBar, { static: true },] }],\n            _tabListContainer: [{ type: core.ViewChild, args: ['tabListContainer', { static: true },] }],\n            _tabList: [{ type: core.ViewChild, args: ['tabList', { static: true },] }],\n            _nextPaginator: [{ type: core.ViewChild, args: ['nextPaginator', { static: false },] }],\n            _previousPaginator: [{ type: core.ViewChild, args: ['previousPaginator', { static: false },] }]\n        };\n        return MatTabNav;\n    }(_MatTabNavBase));\n    // Boilerplate for applying mixins to MatTabLink.\n    var MatTabLinkMixinBase = /** @class */ (function () {\n        function MatTabLinkMixinBase() {\n        }\n        return MatTabLinkMixinBase;\n    }());\n    var _MatTabLinkMixinBase = core$1.mixinTabIndex(core$1.mixinDisableRipple(core$1.mixinDisabled(MatTabLinkMixinBase)));\n    /** Base class with all of the `MatTabLink` functionality. */\n    // tslint:disable-next-line:class-name\n    var _MatTabLinkBase = /** @class */ (function (_super) {\n        tslib_1.__extends(_MatTabLinkBase, _super);\n        function _MatTabLinkBase(_tabNavBar, elementRef, globalRippleOptions, tabIndex, _focusMonitor, animationMode) {\n            var _this = _super.call(this) || this;\n            _this._tabNavBar = _tabNavBar;\n            _this.elementRef = elementRef;\n            _this._focusMonitor = _focusMonitor;\n            /** Whether the tab link is active or not. */\n            _this._isActive = false;\n            _this.rippleConfig = globalRippleOptions || {};\n            _this.tabIndex = parseInt(tabIndex) || 0;\n            if (animationMode === 'NoopAnimations') {\n                _this.rippleConfig.animation = { enterDuration: 0, exitDuration: 0 };\n            }\n            _focusMonitor.monitor(elementRef);\n            return _this;\n        }\n        Object.defineProperty(_MatTabLinkBase.prototype, \"active\", {\n            /** Whether the link is active. */\n            get: function () { return this._isActive; },\n            set: function (value) {\n                if (value !== this._isActive) {\n                    this._isActive = value;\n                    this._tabNavBar.updateActiveLink(this.elementRef);\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(_MatTabLinkBase.prototype, \"rippleDisabled\", {\n            /**\n             * Whether ripples are disabled on interaction.\n             * @docs-private\n             */\n            get: function () {\n                return this.disabled || this.disableRipple || this._tabNavBar.disableRipple ||\n                    !!this.rippleConfig.disabled;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        _MatTabLinkBase.prototype.focus = function () {\n            this.elementRef.nativeElement.focus();\n        };\n        _MatTabLinkBase.prototype.ngOnDestroy = function () {\n            this._focusMonitor.stopMonitoring(this.elementRef);\n        };\n        /** @nocollapse */\n        _MatTabLinkBase.ctorParameters = function () { return [\n            { type: _MatTabNavBase },\n            { type: core.ElementRef },\n            { type: undefined, decorators: [{ type: core.Optional }, { type: core.Inject, args: [core$1.MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n            { type: String, decorators: [{ type: core.Attribute, args: ['tabindex',] }] },\n            { type: a11y.FocusMonitor },\n            { type: String, decorators: [{ type: core.Optional }, { type: core.Inject, args: [animations.ANIMATION_MODULE_TYPE,] }] }\n        ]; };\n        _MatTabLinkBase.propDecorators = {\n            active: [{ type: core.Input }]\n        };\n        return _MatTabLinkBase;\n    }(_MatTabLinkMixinBase));\n    /**\n     * Link inside of a `mat-tab-nav-bar`.\n     */\n    var MatTabLink = /** @class */ (function (_super) {\n        tslib_1.__extends(MatTabLink, _super);\n        function MatTabLink(tabNavBar, elementRef, ngZone, platform, globalRippleOptions, tabIndex, focusMonitor, animationMode) {\n            var _this = _super.call(this, tabNavBar, elementRef, globalRippleOptions, tabIndex, focusMonitor, animationMode) || this;\n            _this._tabLinkRipple = new core$1.RippleRenderer(_this, ngZone, elementRef, platform);\n            _this._tabLinkRipple.setupTriggerEvents(elementRef.nativeElement);\n            return _this;\n        }\n        MatTabLink.prototype.ngOnDestroy = function () {\n            _super.prototype.ngOnDestroy.call(this);\n            this._tabLinkRipple._removeTriggerEvents();\n        };\n        MatTabLink.decorators = [\n            { type: core.Directive, args: [{\n                        selector: '[mat-tab-link], [matTabLink]',\n                        exportAs: 'matTabLink',\n                        inputs: ['disabled', 'disableRipple', 'tabIndex'],\n                        host: {\n                            'class': 'mat-tab-link',\n                            '[attr.aria-current]': 'active ? \"page\" : null',\n                            '[attr.aria-disabled]': 'disabled',\n                            '[attr.tabIndex]': 'tabIndex',\n                            '[class.mat-tab-disabled]': 'disabled',\n                            '[class.mat-tab-label-active]': 'active',\n                        }\n                    },] }\n        ];\n        /** @nocollapse */\n        MatTabLink.ctorParameters = function () { return [\n            { type: MatTabNav },\n            { type: core.ElementRef },\n            { type: core.NgZone },\n            { type: platform.Platform },\n            { type: undefined, decorators: [{ type: core.Optional }, { type: core.Inject, args: [core$1.MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n            { type: String, decorators: [{ type: core.Attribute, args: ['tabindex',] }] },\n            { type: a11y.FocusMonitor },\n            { type: String, decorators: [{ type: core.Optional }, { type: core.Inject, args: [animations.ANIMATION_MODULE_TYPE,] }] }\n        ]; };\n        return MatTabLink;\n    }(_MatTabLinkBase));\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var MatTabsModule = /** @class */ (function () {\n        function MatTabsModule() {\n        }\n        MatTabsModule.decorators = [\n            { type: core.NgModule, args: [{\n                        imports: [\n                            common.CommonModule,\n                            core$1.MatCommonModule,\n                            portal.PortalModule,\n                            core$1.MatRippleModule,\n                            observers.ObserversModule,\n                            a11y.A11yModule,\n                        ],\n                        // Don't export all components because some are only to be used internally.\n                        exports: [\n                            core$1.MatCommonModule,\n                            MatTabGroup,\n                            MatTabLabel,\n                            MatTab,\n                            MatTabNav,\n                            MatTabLink,\n                            MatTabContent,\n                        ],\n                        declarations: [\n                            MatTabGroup,\n                            MatTabLabel,\n                            MatTab,\n                            MatInkBar,\n                            MatTabLabelWrapper,\n                            MatTabNav,\n                            MatTabLink,\n                            MatTabBody,\n                            MatTabBodyPortal,\n                            MatTabHeader,\n                            MatTabContent,\n                            // TODO(crisbeto): these can be removed once they're turned into selector-less directives.\n                            MatPaginatedTabHeader,\n                            _MatTabGroupBase,\n                            _MatTabNavBase,\n                            _MatTabBodyBase,\n                            _MatTabHeaderBase,\n                        ],\n                    },] }\n        ];\n        return MatTabsModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.ɵangular_material_src_material_tabs_tabs_a = _MAT_INK_BAR_POSITIONER_FACTORY;\n    exports.ɵangular_material_src_material_tabs_tabs_b = MatPaginatedTabHeader;\n    exports.MatTabsModule = MatTabsModule;\n    exports.MatInkBar = MatInkBar;\n    exports._MAT_INK_BAR_POSITIONER = _MAT_INK_BAR_POSITIONER;\n    exports.MatTabBody = MatTabBody;\n    exports._MatTabBodyBase = _MatTabBodyBase;\n    exports.MatTabBodyPortal = MatTabBodyPortal;\n    exports.MatTabHeader = MatTabHeader;\n    exports._MatTabHeaderBase = _MatTabHeaderBase;\n    exports.MatTabLabelWrapper = MatTabLabelWrapper;\n    exports.MatTab = MatTab;\n    exports.MatTabLabel = MatTabLabel;\n    exports.MatTabNav = MatTabNav;\n    exports.MatTabLink = MatTabLink;\n    exports._MatTabNavBase = _MatTabNavBase;\n    exports._MatTabLinkBase = _MatTabLinkBase;\n    exports.MatTabContent = MatTabContent;\n    exports.MatTabChangeEvent = MatTabChangeEvent;\n    exports.MAT_TABS_CONFIG = MAT_TABS_CONFIG;\n    exports._MatTabGroupBase = _MatTabGroupBase;\n    exports.MatTabGroup = MatTabGroup;\n    exports.matTabsAnimations = matTabsAnimations;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=material-tabs.umd.js.map\n"]}