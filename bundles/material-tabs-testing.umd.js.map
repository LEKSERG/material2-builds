{"version":3,"file":"material-tabs-testing.umd.js","sources":["../../../../../../../src/material/tabs/testing/tab-harness.ts","../../../../../../../src/material/tabs/testing/tab-group-harness.ts","../../../../../../../src/material/tabs/testing/public-api.ts","../../../../../../../src/material/tabs/testing/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ComponentHarness, HarnessLoader, HarnessPredicate} from '@angular/cdk/testing';\nimport {TabHarnessFilters} from './tab-harness-filters';\n\n/**\n * Harness for interacting with a standard Angular Material tab-label in tests.\n * @dynamic\n */\nexport class MatTabHarness extends ComponentHarness {\n  static hostSelector = '.mat-tab-label';\n\n  /**\n   * Gets a `HarnessPredicate` that can be used to search for a tab with specific attributes.\n   */\n  static with(options: TabHarnessFilters = {}): HarnessPredicate<MatTabHarness> {\n    return new HarnessPredicate(MatTabHarness, options)\n        .addOption('label', options.label,\n            (harness, label) => HarnessPredicate.stringMatches(harness.getLabel(), label));\n  }\n\n  /** Gets the label of the tab. */\n  async getLabel(): Promise<string> {\n    return (await this.host()).text();\n  }\n\n  /** Gets the aria label of the tab. */\n  async getAriaLabel(): Promise<string|null> {\n    return (await this.host()).getAttribute('aria-label');\n  }\n\n  /** Gets the value of the \"aria-labelledby\" attribute. */\n  async getAriaLabelledby(): Promise<string|null> {\n    return (await this.host()).getAttribute('aria-labelledby');\n  }\n\n  /** Whether the tab is selected. */\n  async isSelected(): Promise<boolean> {\n    const hostEl = await this.host();\n    return (await hostEl.getAttribute('aria-selected')) === 'true';\n  }\n\n  /** Whether the tab is disabled. */\n  async isDisabled(): Promise<boolean> {\n    const hostEl = await this.host();\n    return (await hostEl.getAttribute('aria-disabled')) === 'true';\n  }\n\n  /**\n   * Selects the given tab by clicking on the label. Tab cannot be\n   * selected if disabled.\n   */\n  async select(): Promise<void> {\n    await (await this.host()).click();\n  }\n\n  /** Gets the text content of the tab. */\n  async getTextContent(): Promise<string> {\n    const contentId = await this._getContentId();\n    const contentEl = await this.documentRootLocatorFactory().locatorFor(`#${contentId}`)();\n    return contentEl.text();\n  }\n\n  /**\n   * Gets a `HarnessLoader` that can be used to load harnesses for components within the tab's\n   * content area.\n   */\n  async getHarnessLoaderForContent(): Promise<HarnessLoader> {\n    const contentId = await this._getContentId();\n    return this.documentRootLocatorFactory().harnessLoaderFor(`#${contentId}`);\n  }\n\n  /** Gets the element id for the content of the current tab. */\n  private async _getContentId(): Promise<string> {\n    const hostEl = await this.host();\n    // Tabs never have an empty \"aria-controls\" attribute.\n    return (await hostEl.getAttribute('aria-controls'))!;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ComponentHarness, HarnessPredicate} from '@angular/cdk/testing';\nimport {TabGroupHarnessFilters, TabHarnessFilters} from './tab-harness-filters';\nimport {MatTabHarness} from './tab-harness';\n\n/**\n * Harness for interacting with a standard mat-tab-group in tests.\n * @dynamic\n */\nexport class MatTabGroupHarness extends ComponentHarness {\n  static hostSelector = '.mat-tab-group';\n\n  /**\n   * Gets a `HarnessPredicate` that can be used to search for a radio-button with\n   * specific attributes.\n   * @param options Options for narrowing the search\n   *   - `selector` finds a tab-group whose host element matches the given selector.\n   *   - `selectedTabLabel` finds a tab-group with a selected tab that matches the\n   *      specified tab label.\n   * @return a `HarnessPredicate` configured with the given options.\n   */\n  static with(options: TabGroupHarnessFilters = {}): HarnessPredicate<MatTabGroupHarness> {\n    return new HarnessPredicate(MatTabGroupHarness, options)\n        .addOption('selectedTabLabel', options.selectedTabLabel, async (harness, label) => {\n          const selectedTab = await harness.getSelectedTab();\n          return HarnessPredicate.stringMatches(await selectedTab.getLabel(), label);\n        });\n  }\n\n  /** Gets all tabs of the tab group. */\n  async getTabs(filter: TabHarnessFilters = {}): Promise<MatTabHarness[]> {\n    return this.locatorForAll(MatTabHarness.with(filter))();\n  }\n\n  /** Gets the selected tab of the tab group. */\n  async getSelectedTab(): Promise<MatTabHarness> {\n    const tabs = await this.getTabs();\n    const isSelected = await Promise.all(tabs.map(t => t.isSelected()));\n    for (let i = 0; i < tabs.length; i++) {\n      if (isSelected[i]) {\n        return tabs[i];\n      }\n    }\n    throw new Error('No selected tab could be found.');\n  }\n\n  /** Selects a tab in this tab group. */\n  async selectTab(filter: TabHarnessFilters = {}): Promise<void> {\n    const tabs = await this.getTabs(filter);\n    if (!tabs.length) {\n      throw Error(`Cannot find mat-tab matching filter ${JSON.stringify(filter)}`);\n    }\n    await tabs[0].select();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './tab-group-harness';\nexport * from './tab-harness';\nexport * from './tab-harness-filters';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './public-api';\n"],"names":["tslib_1.__extends","HarnessPredicate","ComponentHarness"],"mappings":"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"}