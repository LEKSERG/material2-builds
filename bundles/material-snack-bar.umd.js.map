{"version":3,"file":"material-snack-bar.umd.js","sources":["../../../../../../src/material/snack-bar/snack-bar-ref.ts","../../../../../../src/material/snack-bar/snack-bar-config.ts","npm_package.esm5/src/material/snack-bar/simple-snack-bar.js","../../../../../../src/material/snack-bar/snack-bar-animations.ts","npm_package.esm5/src/material/snack-bar/snack-bar-container.js","../../../../../../src/material/snack-bar/snack-bar-module.ts","../../../../../../src/material/snack-bar/snack-bar.ts","../../../../../../src/material/snack-bar/public-api.ts","../../../../../../src/material/snack-bar/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {OverlayRef} from '@angular/cdk/overlay';\nimport {Observable, Subject} from 'rxjs';\nimport {MatSnackBarContainer} from './snack-bar-container';\n\n\n/** Event that is emitted when a snack bar is dismissed. */\nexport interface MatSnackBarDismiss {\n  /** Whether the snack bar was dismissed using the action button. */\n  dismissedByAction: boolean;\n}\n\n/**\n * Reference to a snack bar dispatched from the snack bar service.\n */\nexport class MatSnackBarRef<T> {\n  /** The instance of the component making up the content of the snack bar. */\n  instance: T;\n\n  /**\n   * The instance of the component making up the content of the snack bar.\n   * @docs-private\n   */\n  containerInstance: MatSnackBarContainer;\n\n  /** Subject for notifying the user that the snack bar has been dismissed. */\n  private readonly _afterDismissed = new Subject<MatSnackBarDismiss>();\n\n  /** Subject for notifying the user that the snack bar has opened and appeared. */\n  private readonly _afterOpened = new Subject<void>();\n\n  /** Subject for notifying the user that the snack bar action was called. */\n  private readonly _onAction = new Subject<void>();\n\n  /**\n   * Timeout ID for the duration setTimeout call. Used to clear the timeout if the snackbar is\n   * dismissed before the duration passes.\n   */\n  private _durationTimeoutId: number;\n\n  /** Whether the snack bar was dismissed using the action button. */\n  private _dismissedByAction = false;\n\n  constructor(containerInstance: MatSnackBarContainer,\n              private _overlayRef: OverlayRef) {\n    this.containerInstance = containerInstance;\n    // Dismiss snackbar on action.\n    this.onAction().subscribe(() => this.dismiss());\n    containerInstance._onExit.subscribe(() => this._finishDismiss());\n  }\n\n  /** Dismisses the snack bar. */\n  dismiss(): void {\n    if (!this._afterDismissed.closed) {\n      this.containerInstance.exit();\n    }\n    clearTimeout(this._durationTimeoutId);\n  }\n\n  /** Marks the snackbar action clicked. */\n  dismissWithAction(): void {\n    if (!this._onAction.closed) {\n      this._dismissedByAction = true;\n      this._onAction.next();\n      this._onAction.complete();\n    }\n  }\n\n\n  /**\n   * Marks the snackbar action clicked.\n   * @deprecated Use `dismissWithAction` instead.\n   * @breaking-change 8.0.0\n   */\n  closeWithAction(): void {\n    this.dismissWithAction();\n  }\n\n  /** Dismisses the snack bar after some duration */\n  _dismissAfter(duration: number): void {\n    this._durationTimeoutId = setTimeout(() => this.dismiss(), duration);\n  }\n\n  /** Marks the snackbar as opened */\n  _open(): void {\n    if (!this._afterOpened.closed) {\n      this._afterOpened.next();\n      this._afterOpened.complete();\n    }\n  }\n\n  /** Cleans up the DOM after closing. */\n  private _finishDismiss(): void {\n    this._overlayRef.dispose();\n\n    if (!this._onAction.closed) {\n      this._onAction.complete();\n    }\n\n    this._afterDismissed.next({dismissedByAction: this._dismissedByAction});\n    this._afterDismissed.complete();\n    this._dismissedByAction = false;\n  }\n\n  /** Gets an observable that is notified when the snack bar is finished closing. */\n  afterDismissed(): Observable<MatSnackBarDismiss> {\n    return this._afterDismissed.asObservable();\n  }\n\n  /** Gets an observable that is notified when the snack bar has opened and appeared. */\n  afterOpened(): Observable<void> {\n    return this.containerInstance._onEnter;\n  }\n\n  /** Gets an observable that is notified when the snack bar action is called. */\n  onAction(): Observable<void> {\n    return this._onAction.asObservable();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ViewContainerRef, InjectionToken} from '@angular/core';\nimport {AriaLivePoliteness} from '@angular/cdk/a11y';\nimport {Direction} from '@angular/cdk/bidi';\n\n/** Injection token that can be used to access the data that was passed in to a snack bar. */\nexport const MAT_SNACK_BAR_DATA = new InjectionToken<any>('MatSnackBarData');\n\n/** Possible values for horizontalPosition on MatSnackBarConfig. */\nexport type MatSnackBarHorizontalPosition = 'start' | 'center' | 'end' | 'left' | 'right';\n\n/** Possible values for verticalPosition on MatSnackBarConfig. */\nexport type MatSnackBarVerticalPosition = 'top' | 'bottom';\n\n/**\n * Configuration used when opening a snack-bar.\n */\nexport class MatSnackBarConfig<D = any> {\n  /** The politeness level for the MatAriaLiveAnnouncer announcement. */\n  politeness?: AriaLivePoliteness = 'assertive';\n\n  /**\n   * Message to be announced by the LiveAnnouncer. When opening a snackbar without a custom\n   * component or template, the announcement message will default to the specified message.\n   */\n  announcementMessage?: string = '';\n\n  /** The view container to place the overlay for the snack bar into. */\n  viewContainerRef?: ViewContainerRef;\n\n  /** The length of time in milliseconds to wait before automatically dismissing the snack bar. */\n  duration?: number = 0;\n\n  /** Extra CSS classes to be added to the snack bar container. */\n  panelClass?: string | string[];\n\n  /** Text layout direction for the snack bar. */\n  direction?: Direction;\n\n  /** Data being injected into the child component. */\n  data?: D | null = null;\n\n  /** The horizontal position to place the snack bar. */\n  horizontalPosition?: MatSnackBarHorizontalPosition = 'center';\n\n  /** The vertical position to place the snack bar. */\n  verticalPosition?: MatSnackBarVerticalPosition = 'bottom';\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Component, ViewEncapsulation, Inject, ChangeDetectionStrategy } from '@angular/core';\nimport { MatSnackBarRef } from './snack-bar-ref';\nimport { MAT_SNACK_BAR_DATA } from './snack-bar-config';\n/**\n * A component used to open as the default snack bar, matching material spec.\n * This should only be used internally by the snack bar service.\n */\nvar SimpleSnackBar = /** @class */ (function () {\n    function SimpleSnackBar(snackBarRef, data) {\n        this.snackBarRef = snackBarRef;\n        this.data = data;\n    }\n    /** Performs the action on the snack bar. */\n    SimpleSnackBar.prototype.action = function () {\n        this.snackBarRef.dismissWithAction();\n    };\n    Object.defineProperty(SimpleSnackBar.prototype, \"hasAction\", {\n        /** If the action button should be shown. */\n        get: function () {\n            return !!this.data.action;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SimpleSnackBar.decorators = [\n        { type: Component, args: [{\n                    moduleId: module.id,\n                    selector: 'simple-snack-bar',\n                    template: \"<span>{{data.message}}</span>\\n<div class=\\\"mat-simple-snackbar-action\\\"  *ngIf=\\\"hasAction\\\">\\n  <button mat-button (click)=\\\"action()\\\">{{data.action}}</button>\\n</div>\\n\",\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    host: {\n                        'class': 'mat-simple-snackbar',\n                    },\n                    styles: [\".mat-simple-snackbar{display:flex;justify-content:space-between;align-items:center;line-height:20px;opacity:1}.mat-simple-snackbar-action{flex-shrink:0;margin:-8px -8px -8px 8px}.mat-simple-snackbar-action button{max-height:36px;min-width:0}[dir=rtl] .mat-simple-snackbar-action{margin-left:-8px;margin-right:8px}/*# sourceMappingURL=simple-snack-bar.css.map */\\n\"]\n                }] }\n    ];\n    /** @nocollapse */\n    SimpleSnackBar.ctorParameters = function () { return [\n        { type: MatSnackBarRef },\n        { type: undefined, decorators: [{ type: Inject, args: [MAT_SNACK_BAR_DATA,] }] }\n    ]; };\n    return SimpleSnackBar;\n}());\nexport { SimpleSnackBar };\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2ltcGxlLXNuYWNrLWJhci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL3NyYy9tYXRlcmlhbC9zbmFjay1iYXIvc2ltcGxlLXNuYWNrLWJhci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7O0dBTUc7QUFFSCxPQUFPLEVBQUMsU0FBUyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sRUFBRSx1QkFBdUIsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUM1RixPQUFPLEVBQUMsY0FBYyxFQUFDLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFDLGtCQUFrQixFQUFDLE1BQU0sb0JBQW9CLENBQUM7QUFHdEQ7OztHQUdHO0FBQ0g7SUFlRSx3QkFDUyxXQUEyQyxFQUN0QixJQUFTO1FBRDlCLGdCQUFXLEdBQVgsV0FBVyxDQUFnQztRQUVsRCxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztJQUNuQixDQUFDO0lBRUQsNENBQTRDO0lBQzVDLCtCQUFNLEdBQU47UUFDRSxJQUFJLENBQUMsV0FBVyxDQUFDLGlCQUFpQixFQUFFLENBQUM7SUFDdkMsQ0FBQztJQUdELHNCQUFJLHFDQUFTO1FBRGIsNENBQTRDO2FBQzVDO1lBQ0UsT0FBTyxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUM7UUFDNUIsQ0FBQzs7O09BQUE7O2dCQTdCRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLE1BQU0sQ0FBQyxFQUFFO29CQUNuQixRQUFRLEVBQUUsa0JBQWtCO29CQUM1Qix3TEFBb0M7b0JBRXBDLGFBQWEsRUFBRSxpQkFBaUIsQ0FBQyxJQUFJO29CQUNyQyxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTtvQkFDL0MsSUFBSSxFQUFFO3dCQUNKLE9BQU8sRUFBRSxxQkFBcUI7cUJBQy9COztpQkFDRjs7OztnQkFsQk8sY0FBYztnREF5QmpCLE1BQU0sU0FBQyxrQkFBa0I7O0lBYTlCLHFCQUFDO0NBQUEsQUE5QkQsSUE4QkM7U0FuQlksY0FBYyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCBHb29nbGUgTExDIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9hbmd1bGFyLmlvL2xpY2Vuc2VcbiAqL1xuXG5pbXBvcnQge0NvbXBvbmVudCwgVmlld0VuY2Fwc3VsYXRpb24sIEluamVjdCwgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3l9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtNYXRTbmFja0JhclJlZn0gZnJvbSAnLi9zbmFjay1iYXItcmVmJztcbmltcG9ydCB7TUFUX1NOQUNLX0JBUl9EQVRBfSBmcm9tICcuL3NuYWNrLWJhci1jb25maWcnO1xuXG5cbi8qKlxuICogQSBjb21wb25lbnQgdXNlZCB0byBvcGVuIGFzIHRoZSBkZWZhdWx0IHNuYWNrIGJhciwgbWF0Y2hpbmcgbWF0ZXJpYWwgc3BlYy5cbiAqIFRoaXMgc2hvdWxkIG9ubHkgYmUgdXNlZCBpbnRlcm5hbGx5IGJ5IHRoZSBzbmFjayBiYXIgc2VydmljZS5cbiAqL1xuQENvbXBvbmVudCh7XG4gIG1vZHVsZUlkOiBtb2R1bGUuaWQsXG4gIHNlbGVjdG9yOiAnc2ltcGxlLXNuYWNrLWJhcicsXG4gIHRlbXBsYXRlVXJsOiAnc2ltcGxlLXNuYWNrLWJhci5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJ3NpbXBsZS1zbmFjay1iYXIuY3NzJ10sXG4gIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLk5vbmUsXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxuICBob3N0OiB7XG4gICAgJ2NsYXNzJzogJ21hdC1zaW1wbGUtc25hY2tiYXInLFxuICB9XG59KVxuZXhwb3J0IGNsYXNzIFNpbXBsZVNuYWNrQmFyIHtcbiAgLyoqIERhdGEgdGhhdCB3YXMgaW5qZWN0ZWQgaW50byB0aGUgc25hY2sgYmFyLiAqL1xuICBkYXRhOiB7bWVzc2FnZTogc3RyaW5nLCBhY3Rpb246IHN0cmluZ307XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHVibGljIHNuYWNrQmFyUmVmOiBNYXRTbmFja0JhclJlZjxTaW1wbGVTbmFja0Jhcj4sXG4gICAgQEluamVjdChNQVRfU05BQ0tfQkFSX0RBVEEpIGRhdGE6IGFueSkge1xuICAgIHRoaXMuZGF0YSA9IGRhdGE7XG4gIH1cblxuICAvKiogUGVyZm9ybXMgdGhlIGFjdGlvbiBvbiB0aGUgc25hY2sgYmFyLiAqL1xuICBhY3Rpb24oKTogdm9pZCB7XG4gICAgdGhpcy5zbmFja0JhclJlZi5kaXNtaXNzV2l0aEFjdGlvbigpO1xuICB9XG5cbiAgLyoqIElmIHRoZSBhY3Rpb24gYnV0dG9uIHNob3VsZCBiZSBzaG93bi4gKi9cbiAgZ2V0IGhhc0FjdGlvbigpOiBib29sZWFuIHtcbiAgICByZXR1cm4gISF0aGlzLmRhdGEuYWN0aW9uO1xuICB9XG59XG4iXX0=","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n  AnimationTriggerMetadata,\n} from '@angular/animations';\n\n/**\n * Animations used by the Material snack bar.\n * @docs-private\n */\nexport const matSnackBarAnimations: {\n  readonly snackBarState: AnimationTriggerMetadata;\n} = {\n  /** Animation that shows and hides a snack bar. */\n  snackBarState: trigger('state', [\n    state('void, hidden', style({\n      transform: 'scale(0.8)',\n      opacity: 0,\n    })),\n    state('visible', style({\n      transform: 'scale(1)',\n      opacity: 1,\n    })),\n    transition('* => visible', animate('150ms cubic-bezier(0, 0, 0.2, 1)')),\n    transition('* => void, * => hidden', animate('75ms cubic-bezier(0.4, 0.0, 1, 1)', style({\n      opacity: 0\n    }))),\n  ])\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { BasePortalOutlet, CdkPortalOutlet, } from '@angular/cdk/portal';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, NgZone, ViewChild, ViewEncapsulation, } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { matSnackBarAnimations } from './snack-bar-animations';\nimport { MatSnackBarConfig } from './snack-bar-config';\n/**\n * Internal component that wraps user-provided snack bar content.\n * @docs-private\n */\nvar MatSnackBarContainer = /** @class */ (function (_super) {\n    tslib_1.__extends(MatSnackBarContainer, _super);\n    function MatSnackBarContainer(_ngZone, _elementRef, _changeDetectorRef, \n    /** The snack bar configuration. */\n    snackBarConfig) {\n        var _this = _super.call(this) || this;\n        _this._ngZone = _ngZone;\n        _this._elementRef = _elementRef;\n        _this._changeDetectorRef = _changeDetectorRef;\n        _this.snackBarConfig = snackBarConfig;\n        /** Whether the component has been destroyed. */\n        _this._destroyed = false;\n        /** Subject for notifying that the snack bar has exited from view. */\n        _this._onExit = new Subject();\n        /** Subject for notifying that the snack bar has finished entering the view. */\n        _this._onEnter = new Subject();\n        /** The state of the snack bar animations. */\n        _this._animationState = 'void';\n        // Based on the ARIA spec, `alert` and `status` roles have an\n        // implicit `assertive` and `polite` politeness respectively.\n        if (snackBarConfig.politeness === 'assertive' && !snackBarConfig.announcementMessage) {\n            _this._role = 'alert';\n        }\n        else if (snackBarConfig.politeness === 'off') {\n            _this._role = null;\n        }\n        else {\n            _this._role = 'status';\n        }\n        return _this;\n    }\n    /** Attach a component portal as content to this snack bar container. */\n    MatSnackBarContainer.prototype.attachComponentPortal = function (portal) {\n        this._assertNotAttached();\n        this._applySnackBarClasses();\n        return this._portalOutlet.attachComponentPortal(portal);\n    };\n    /** Attach a template portal as content to this snack bar container. */\n    MatSnackBarContainer.prototype.attachTemplatePortal = function (portal) {\n        this._assertNotAttached();\n        this._applySnackBarClasses();\n        return this._portalOutlet.attachTemplatePortal(portal);\n    };\n    /** Handle end of animations, updating the state of the snackbar. */\n    MatSnackBarContainer.prototype.onAnimationEnd = function (event) {\n        var fromState = event.fromState, toState = event.toState;\n        if ((toState === 'void' && fromState !== 'void') || toState === 'hidden') {\n            this._completeExit();\n        }\n        if (toState === 'visible') {\n            // Note: we shouldn't use `this` inside the zone callback,\n            // because it can cause a memory leak.\n            var onEnter_1 = this._onEnter;\n            this._ngZone.run(function () {\n                onEnter_1.next();\n                onEnter_1.complete();\n            });\n        }\n    };\n    /** Begin animation of snack bar entrance into view. */\n    MatSnackBarContainer.prototype.enter = function () {\n        if (!this._destroyed) {\n            this._animationState = 'visible';\n            this._changeDetectorRef.detectChanges();\n        }\n    };\n    /** Begin animation of the snack bar exiting from view. */\n    MatSnackBarContainer.prototype.exit = function () {\n        // Note: this one transitions to `hidden`, rather than `void`, in order to handle the case\n        // where multiple snack bars are opened in quick succession (e.g. two consecutive calls to\n        // `MatSnackBar.open`).\n        this._animationState = 'hidden';\n        return this._onExit;\n    };\n    /** Makes sure the exit callbacks have been invoked when the element is destroyed. */\n    MatSnackBarContainer.prototype.ngOnDestroy = function () {\n        this._destroyed = true;\n        this._completeExit();\n    };\n    /**\n     * Waits for the zone to settle before removing the element. Helps prevent\n     * errors where we end up removing an element which is in the middle of an animation.\n     */\n    MatSnackBarContainer.prototype._completeExit = function () {\n        var _this = this;\n        this._ngZone.onMicrotaskEmpty.asObservable().pipe(take(1)).subscribe(function () {\n            _this._onExit.next();\n            _this._onExit.complete();\n        });\n    };\n    /** Applies the various positioning and user-configured CSS classes to the snack bar. */\n    MatSnackBarContainer.prototype._applySnackBarClasses = function () {\n        var element = this._elementRef.nativeElement;\n        var panelClasses = this.snackBarConfig.panelClass;\n        if (panelClasses) {\n            if (Array.isArray(panelClasses)) {\n                // Note that we can't use a spread here, because IE doesn't support multiple arguments.\n                panelClasses.forEach(function (cssClass) { return element.classList.add(cssClass); });\n            }\n            else {\n                element.classList.add(panelClasses);\n            }\n        }\n        if (this.snackBarConfig.horizontalPosition === 'center') {\n            element.classList.add('mat-snack-bar-center');\n        }\n        if (this.snackBarConfig.verticalPosition === 'top') {\n            element.classList.add('mat-snack-bar-top');\n        }\n    };\n    /** Asserts that no content is already attached to the container. */\n    MatSnackBarContainer.prototype._assertNotAttached = function () {\n        if (this._portalOutlet.hasAttached()) {\n            throw Error('Attempting to attach snack bar content after content is already attached');\n        }\n    };\n    MatSnackBarContainer.decorators = [\n        { type: Component, args: [{\n                    moduleId: module.id,\n                    selector: 'snack-bar-container',\n                    template: \"<ng-template cdkPortalOutlet></ng-template>\\n\",\n                    // In Ivy embedded views will be change detected from their declaration place, rather than\n                    // where they were stamped out. This means that we can't have the snack bar container be OnPush,\n                    // because it might cause snack bars that were opened from a template not to be out of date.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                    animations: [matSnackBarAnimations.snackBarState],\n                    host: {\n                        '[attr.role]': '_role',\n                        'class': 'mat-snack-bar-container',\n                        '[@state]': '_animationState',\n                        '(@state.done)': 'onAnimationEnd($event)'\n                    },\n                    styles: [\".mat-snack-bar-container{border-radius:4px;box-sizing:border-box;display:block;margin:24px;max-width:33vw;min-width:344px;padding:14px 16px;min-height:48px;transform-origin:center}@media(-ms-high-contrast: active){.mat-snack-bar-container{border:solid 1px}}.mat-snack-bar-handset{width:100%}.mat-snack-bar-handset .mat-snack-bar-container{margin:8px;max-width:100%;min-width:0;width:100%}/*# sourceMappingURL=snack-bar-container.css.map */\\n\"]\n                }] }\n    ];\n    /** @nocollapse */\n    MatSnackBarContainer.ctorParameters = function () { return [\n        { type: NgZone },\n        { type: ElementRef },\n        { type: ChangeDetectorRef },\n        { type: MatSnackBarConfig }\n    ]; };\n    MatSnackBarContainer.propDecorators = {\n        _portalOutlet: [{ type: ViewChild, args: [CdkPortalOutlet, { static: true },] }]\n    };\n    return MatSnackBarContainer;\n}(BasePortalOutlet));\nexport { MatSnackBarContainer };\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatCommonModule} from '@angular/material/core';\nimport {MatButtonModule} from '@angular/material/button';\nimport {SimpleSnackBar} from './simple-snack-bar';\nimport {MatSnackBarContainer} from './snack-bar-container';\n\n\n@NgModule({\n  imports: [\n    OverlayModule,\n    PortalModule,\n    CommonModule,\n    MatButtonModule,\n    MatCommonModule,\n  ],\n  exports: [MatSnackBarContainer, MatCommonModule],\n  declarations: [MatSnackBarContainer, SimpleSnackBar],\n  entryComponents: [MatSnackBarContainer, SimpleSnackBar],\n})\nexport class MatSnackBarModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {LiveAnnouncer} from '@angular/cdk/a11y';\nimport {BreakpointObserver, Breakpoints} from '@angular/cdk/layout';\nimport {Overlay, OverlayConfig, OverlayRef} from '@angular/cdk/overlay';\nimport {ComponentPortal, ComponentType, PortalInjector, TemplatePortal} from '@angular/cdk/portal';\nimport {\n  ComponentRef,\n  EmbeddedViewRef,\n  Inject,\n  Injectable,\n  InjectionToken,\n  Injector,\n  Optional,\n  SkipSelf,\n  TemplateRef,\n  OnDestroy,\n} from '@angular/core';\nimport {takeUntil} from 'rxjs/operators';\nimport {SimpleSnackBar} from './simple-snack-bar';\nimport {MAT_SNACK_BAR_DATA, MatSnackBarConfig} from './snack-bar-config';\nimport {MatSnackBarContainer} from './snack-bar-container';\nimport {MatSnackBarModule} from './snack-bar-module';\nimport {MatSnackBarRef} from './snack-bar-ref';\n\n\n/** Injection token that can be used to specify default snack bar. */\nexport const MAT_SNACK_BAR_DEFAULT_OPTIONS =\n    new InjectionToken<MatSnackBarConfig>('mat-snack-bar-default-options', {\n      providedIn: 'root',\n      factory: MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY,\n    });\n\n/** @docs-private */\nexport function MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY(): MatSnackBarConfig {\n  return new MatSnackBarConfig();\n}\n\n/**\n * Service to dispatch Material Design snack bar messages.\n */\n@Injectable({providedIn: MatSnackBarModule})\nexport class MatSnackBar implements OnDestroy {\n  /**\n   * Reference to the current snack bar in the view *at this level* (in the Angular injector tree).\n   * If there is a parent snack-bar service, all operations should delegate to that parent\n   * via `_openedSnackBarRef`.\n   */\n  private _snackBarRefAtThisLevel: MatSnackBarRef<any> | null = null;\n\n  /** Reference to the currently opened snackbar at *any* level. */\n  get _openedSnackBarRef(): MatSnackBarRef<any> | null {\n    const parent = this._parentSnackBar;\n    return parent ? parent._openedSnackBarRef : this._snackBarRefAtThisLevel;\n  }\n\n  set _openedSnackBarRef(value: MatSnackBarRef<any> | null) {\n    if (this._parentSnackBar) {\n      this._parentSnackBar._openedSnackBarRef = value;\n    } else {\n      this._snackBarRefAtThisLevel = value;\n    }\n  }\n\n  constructor(\n      private _overlay: Overlay,\n      private _live: LiveAnnouncer,\n      private _injector: Injector,\n      private _breakpointObserver: BreakpointObserver,\n      @Optional() @SkipSelf() private _parentSnackBar: MatSnackBar,\n      @Inject(MAT_SNACK_BAR_DEFAULT_OPTIONS) private _defaultConfig: MatSnackBarConfig) {}\n\n  /**\n   * Creates and dispatches a snack bar with a custom component for the content, removing any\n   * currently opened snack bars.\n   *\n   * @param component Component to be instantiated.\n   * @param config Extra configuration for the snack bar.\n   */\n  openFromComponent<T>(component: ComponentType<T>, config?: MatSnackBarConfig):\n    MatSnackBarRef<T> {\n    return this._attach(component, config) as MatSnackBarRef<T>;\n  }\n\n  /**\n   * Creates and dispatches a snack bar with a custom template for the content, removing any\n   * currently opened snack bars.\n   *\n   * @param template Template to be instantiated.\n   * @param config Extra configuration for the snack bar.\n   */\n  openFromTemplate(template: TemplateRef<any>, config?: MatSnackBarConfig):\n    MatSnackBarRef<EmbeddedViewRef<any>> {\n    return this._attach(template, config);\n  }\n\n  /**\n   * Opens a snackbar with a message and an optional action.\n   * @param message The message to show in the snackbar.\n   * @param action The label for the snackbar action.\n   * @param config Additional configuration options for the snackbar.\n   */\n  open(message: string, action: string = '', config?: MatSnackBarConfig):\n      MatSnackBarRef<SimpleSnackBar> {\n    const _config = {...this._defaultConfig, ...config};\n\n    // Since the user doesn't have access to the component, we can\n    // override the data to pass in our own message and action.\n    _config.data = {message, action};\n\n    if (!_config.announcementMessage) {\n      _config.announcementMessage = message;\n    }\n\n    return this.openFromComponent(SimpleSnackBar, _config);\n  }\n\n  /**\n   * Dismisses the currently-visible snack bar.\n   */\n  dismiss(): void {\n    if (this._openedSnackBarRef) {\n      this._openedSnackBarRef.dismiss();\n    }\n  }\n\n  ngOnDestroy() {\n    // Only dismiss the snack bar at the current level on destroy.\n    if (this._snackBarRefAtThisLevel) {\n      this._snackBarRefAtThisLevel.dismiss();\n    }\n  }\n\n  /**\n   * Attaches the snack bar container component to the overlay.\n   */\n  private _attachSnackBarContainer(overlayRef: OverlayRef,\n                                   config: MatSnackBarConfig): MatSnackBarContainer {\n\n    const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n    const injector = new PortalInjector(userInjector || this._injector, new WeakMap([\n      [MatSnackBarConfig, config]\n    ]));\n\n    const containerPortal =\n        new ComponentPortal(MatSnackBarContainer, config.viewContainerRef, injector);\n    const containerRef: ComponentRef<MatSnackBarContainer> = overlayRef.attach(containerPortal);\n    containerRef.instance.snackBarConfig = config;\n    return containerRef.instance;\n  }\n\n  /**\n   * Places a new component or a template as the content of the snack bar container.\n   */\n  private _attach<T>(content: ComponentType<T> | TemplateRef<T>, userConfig?: MatSnackBarConfig):\n    MatSnackBarRef<T | EmbeddedViewRef<any>> {\n\n    const config = {...new MatSnackBarConfig(), ...this._defaultConfig, ...userConfig};\n    const overlayRef = this._createOverlay(config);\n    const container = this._attachSnackBarContainer(overlayRef, config);\n    const snackBarRef = new MatSnackBarRef<T | EmbeddedViewRef<any>>(container, overlayRef);\n\n    if (content instanceof TemplateRef) {\n      const portal = new TemplatePortal(content, null!, {\n        $implicit: config.data,\n        snackBarRef\n      } as any);\n\n      snackBarRef.instance = container.attachTemplatePortal(portal);\n    } else {\n      const injector = this._createInjector(config, snackBarRef);\n      const portal = new ComponentPortal(content, undefined, injector);\n      const contentRef = container.attachComponentPortal<T>(portal);\n\n      // We can't pass this via the injector, because the injector is created earlier.\n      snackBarRef.instance = contentRef.instance;\n    }\n\n    // Subscribe to the breakpoint observer and attach the mat-snack-bar-handset class as\n    // appropriate. This class is applied to the overlay element because the overlay must expand to\n    // fill the width of the screen for full width snackbars.\n    this._breakpointObserver.observe(Breakpoints.HandsetPortrait).pipe(\n      takeUntil(overlayRef.detachments())\n    ).subscribe(state => {\n      const classList = overlayRef.overlayElement.classList;\n      const className = 'mat-snack-bar-handset';\n      state.matches ? classList.add(className) : classList.remove(className);\n    });\n\n    this._animateSnackBar(snackBarRef, config);\n    this._openedSnackBarRef = snackBarRef;\n    return this._openedSnackBarRef;\n  }\n\n  /** Animates the old snack bar out and the new one in. */\n  private _animateSnackBar(snackBarRef: MatSnackBarRef<any>, config: MatSnackBarConfig) {\n    // When the snackbar is dismissed, clear the reference to it.\n    snackBarRef.afterDismissed().subscribe(() => {\n      // Clear the snackbar ref if it hasn't already been replaced by a newer snackbar.\n      if (this._openedSnackBarRef == snackBarRef) {\n        this._openedSnackBarRef = null;\n      }\n\n      if (config.announcementMessage) {\n        this._live.clear();\n      }\n    });\n\n    if (this._openedSnackBarRef) {\n      // If a snack bar is already in view, dismiss it and enter the\n      // new snack bar after exit animation is complete.\n      this._openedSnackBarRef.afterDismissed().subscribe(() => {\n        snackBarRef.containerInstance.enter();\n      });\n      this._openedSnackBarRef.dismiss();\n    } else {\n      // If no snack bar is in view, enter the new snack bar.\n      snackBarRef.containerInstance.enter();\n    }\n\n    // If a dismiss timeout is provided, set up dismiss based on after the snackbar is opened.\n    if (config.duration && config.duration > 0) {\n      snackBarRef.afterOpened().subscribe(() => snackBarRef._dismissAfter(config.duration!));\n    }\n\n    if (config.announcementMessage) {\n      this._live.announce(config.announcementMessage, config.politeness);\n    }\n  }\n\n  /**\n   * Creates a new overlay and places it in the correct location.\n   * @param config The user-specified snack bar config.\n   */\n  private _createOverlay(config: MatSnackBarConfig): OverlayRef {\n    const overlayConfig = new OverlayConfig();\n    overlayConfig.direction = config.direction;\n\n    let positionStrategy = this._overlay.position().global();\n    // Set horizontal position.\n    const isRtl = config.direction === 'rtl';\n    const isLeft = (\n      config.horizontalPosition === 'left' ||\n      (config.horizontalPosition === 'start' && !isRtl) ||\n      (config.horizontalPosition === 'end' && isRtl));\n    const isRight = !isLeft && config.horizontalPosition !== 'center';\n    if (isLeft) {\n      positionStrategy.left('0');\n    } else if (isRight) {\n      positionStrategy.right('0');\n    } else {\n      positionStrategy.centerHorizontally();\n    }\n    // Set horizontal position.\n    if (config.verticalPosition === 'top') {\n      positionStrategy.top('0');\n    } else {\n      positionStrategy.bottom('0');\n    }\n\n    overlayConfig.positionStrategy = positionStrategy;\n    return this._overlay.create(overlayConfig);\n  }\n\n  /**\n   * Creates an injector to be used inside of a snack bar component.\n   * @param config Config that was used to create the snack bar.\n   * @param snackBarRef Reference to the snack bar.\n   */\n  private _createInjector<T>(\n      config: MatSnackBarConfig,\n      snackBarRef: MatSnackBarRef<T>): PortalInjector {\n\n    const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n\n    return new PortalInjector(userInjector || this._injector, new WeakMap<any, any>([\n      [MatSnackBarRef, snackBarRef],\n      [MAT_SNACK_BAR_DATA, config.data]\n    ]));\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './snack-bar-module';\nexport * from './snack-bar';\nexport * from './snack-bar-container';\nexport * from './snack-bar-config';\nexport * from './snack-bar-ref';\nexport * from './simple-snack-bar';\nexport * from './snack-bar-animations';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["Subject","InjectionToken","Component","ViewEncapsulation","ChangeDetectionStrategy","Inject","trigger","state","style","transition","animate","tslib_1.__extends","take","NgZone","ElementRef","ChangeDetectorRef","ViewChild","CdkPortalOutlet","BasePortalOutlet","NgModule","OverlayModule","PortalModule","CommonModule","MatButtonModule","MatCommonModule","PortalInjector","ComponentPortal","TemplateRef","portal","TemplatePortal","Breakpoints","takeUntil","OverlayConfig","Injectable","Overlay","LiveAnnouncer","Injector","BreakpointObserver","Optional","SkipSelf"],"mappings":"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"}