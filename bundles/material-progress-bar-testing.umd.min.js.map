{"version":3,"sources":["src/material/material-progress-bar-testing.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","material","progressBar","testing","tslib","cdk","coercion","this","tslib_1","TestKey","ComponentHarness","locatorFactory","prototype","host","__awaiter","__generator","_a","rootElement","documentRootLocatorFactory","locatorFor","arg","locatorForOptional","locatorForAll","forceStabilize","HarnessPredicate","harnessType","options","_predicates","_descriptions","_addBaseOptions","stringMatches","s","pattern","label","sent","test","add","description","predicate","push","addOption","name","option","undefined","item","filter","harnesses","results","_this","Promise","all","map","h","evaluate","_","i","harness","p","reduce","combined","current","getDescription","join","getSelector","_ancestor","split","part","trim","hostSelector","ancestor","selector","matchesSelector","HarnessEnvironment","rawRootElement","createTestElement","createEnvironment","getDocumentRoot","_b","_assertElementFound","apply","_assertHarnessFound","element","getAllRawElements","_getAllHarnesses","e","getHarness","getAllHarnesses","getChildLoader","getAllChildLoaders","createComponentHarness","harnessPredicate","elements","Error","_getErrorForMissingHarness","restrictions","message","MatProgressBarHarness","_super","arguments","__extends","with","getValue","ariaValue","getAttribute","coerceNumberProperty","getMode","Object","defineProperty","value"],"mappings":"CAAC,SAAUA,EAAQC,GACI,iBAAZC,SAA0C,oBAAXC,OAAyBF,EAAQC,QAASE,QAAQ,SAAUA,QAAQ,0BACxF,mBAAXC,QAAyBA,OAAOC,IAAMD,OAAO,yCAA0C,CAAC,UAAW,QAAS,yBAA0BJ,GACnHA,IAAzBD,EAASA,GAAUO,MAAsBC,GAAKR,EAAOQ,IAAM,GAAIR,EAAOQ,GAAGC,SAAWT,EAAOQ,GAAGC,UAAY,GAAIT,EAAOQ,GAAGC,SAASC,YAAcV,EAAOQ,GAAGC,SAASC,aAAe,GAAIV,EAAOQ,GAAGC,SAASC,YAAYC,QAAU,IAAKX,EAAOY,MAAOZ,EAAOQ,GAAGK,IAAIC,UAHpQ,CAIEC,KAAM,SAAUb,EAASc,EAASF,GAAY;;;;;;;OAc5C,IA+hBIG,EA/hBAC,EAAkC,WAClC,SAASA,EAAiBC,GACtBJ,KAAKI,eAAiBA,EAuC1B,OApCAD,EAAiBE,UAAUC,KAAO,WAC9B,OAAOL,EAAQM,UAAUP,UAAM,OAAQ,EAAQ,WAC3C,OAAOC,EAAQO,YAAYR,KAAM,SAAUS,GACvC,MAAO,CAAC,EAAcT,KAAKI,eAAeM,kBAStDP,EAAiBE,UAAUM,2BAA6B,WACpD,OAAOX,KAAKI,eAAeO,8BAE/BR,EAAiBE,UAAUO,WAAa,SAAUC,GAC9C,OAAOb,KAAKI,eAAeQ,WAAWC,IAE1CV,EAAiBE,UAAUS,mBAAqB,SAAUD,GACtD,OAAOb,KAAKI,eAAeU,mBAAmBD,IAElDV,EAAiBE,UAAUU,cAAgB,SAAUF,GACjD,OAAOb,KAAKI,eAAeW,cAAcF,IAO7CV,EAAiBE,UAAUW,eAAiB,WACxC,OAAOf,EAAQM,UAAUP,UAAM,OAAQ,EAAQ,WAC3C,OAAOC,EAAQO,YAAYR,KAAM,SAAUS,GACvC,MAAO,CAAC,EAAcT,KAAKI,eAAeY,uBAI/Cb,EAzC0B,GA+CjCc,EAAkC,WAClC,SAASA,EAAiBC,EAAaC,GACnCnB,KAAKkB,YAAcA,EACnBlB,KAAKoB,YAAc,GACnBpB,KAAKqB,cAAgB,GACrBrB,KAAKsB,gBAAgBH,GAoHzB,OA3GAF,EAAiBM,cAAgB,SAAUC,EAAGC,GAC1C,OAAOxB,EAAQM,UAAUP,UAAM,OAAQ,EAAQ,WAC3C,OAAOC,EAAQO,YAAYR,KAAM,SAAUS,GACvC,OAAQA,EAAGiB,OACP,KAAK,EAAG,MAAO,CAAC,EAAaF,GAC7B,KAAK,EAED,OADAA,EAAIf,EAAGkB,OACA,CAAC,EAAiC,iBAAZF,EAAuBD,IAAMC,EAAUA,EAAQG,KAAKJ,UAWrGP,EAAiBZ,UAAUwB,IAAM,SAAUC,EAAaC,GAGpD,OAFA/B,KAAKqB,cAAcW,KAAKF,GACxB9B,KAAKoB,YAAYY,KAAKD,GACf/B,MAUXiB,EAAiBZ,UAAU4B,UAAY,SAAUC,EAAMC,EAAQJ,GAM3D,YAHeK,IAAXD,GACAnC,KAAK6B,IAAIK,EAAO,OAFU,iBAAXC,EAAsB,IAAOA,EAAS,IAAO,GAAKA,GAElC,SAAUE,GAAQ,OAAON,EAAUM,EAAMF,KAErEnC,MAOXiB,EAAiBZ,UAAUiC,OAAS,SAAUC,GAC1C,OAAOtC,EAAQM,UAAUP,UAAM,OAAQ,EAAQ,WAC3C,IAAIwC,EACAC,EAAQzC,KACZ,OAAOC,EAAQO,YAAYR,KAAM,SAAUS,GACvC,OAAQA,EAAGiB,OACP,KAAK,EAAG,MAAO,CAAC,EAAagB,QAAQC,IAAIJ,EAAUK,IAAI,SAAUC,GAAK,OAAOJ,EAAMK,SAASD,OAC5F,KAAK,EAED,OADAL,EAAU/B,EAAGkB,OACN,CAAC,EAAcY,EAAUD,OAAO,SAAUS,EAAGC,GAAK,OAAOR,EAAQQ,YAW5F/B,EAAiBZ,UAAUyC,SAAW,SAAUG,GAC5C,OAAOhD,EAAQM,UAAUP,UAAM,OAAQ,EAAQ,WAE3C,OAAOC,EAAQO,YAAYR,KAAM,SAAUS,GACvC,OAAQA,EAAGiB,OACP,KAAK,EAAG,MAAO,CAAC,EAAagB,QAAQC,IAAI3C,KAAKoB,YAAYwB,IAAI,SAAUM,GAAK,OAAOA,EAAED,OACtF,KAAK,EAED,MAAO,CAAC,EADExC,EAAGkB,OACiBwB,OAAO,SAAUC,EAAUC,GAAW,OAAOD,GAAYC,IAAY,UAMvHpC,EAAiBZ,UAAUiD,eAAiB,WACxC,OAAOtD,KAAKqB,cAAckC,KAAK,OAGnCtC,EAAiBZ,UAAUmD,YAAc,WACrC,IAAIf,EAAQzC,KACZ,OAAOA,KAAKyD,UAAUC,MAAM,KACvBd,IAAI,SAAUe,GAAQ,OAAQA,EAAKC,OAAS,IAAMnB,EAAMvB,YAAY2C,cAAcD,SAClFL,KAAK,MAGdtC,EAAiBZ,UAAUiB,gBAAkB,SAAUH,GACnD,IAAIsB,EAAQzC,KACZA,KAAKyD,UAAYtC,EAAQ2C,UAAY,GACjC9D,KAAKyD,WACLzD,KAAKqB,cAAcW,KAAK,mCAAsChC,KAAKyD,UAAY,KAEnF,IAAIM,EAAW5C,EAAQ4C,cACN3B,IAAb2B,GACA/D,KAAK6B,IAAI,0BAA6BkC,EAAW,IAAM,SAAU1B,GAAQ,OAAOpC,EAAQM,UAAUkC,OAAO,OAAQ,EAAQ,WACrH,OAAOxC,EAAQO,YAAYR,KAAM,SAAUS,GACvC,OAAQA,EAAGiB,OACP,KAAK,EAAG,MAAO,CAAC,EAAaW,EAAK/B,QAClC,KAAK,EAAG,MAAO,CAAC,EAAeG,EAAGkB,OAAQqC,gBAAgBD,YAMvE9C,EAzH0B,IAkUG,WACpC,SAASgD,EAAmBC,GACxBlE,KAAKkE,eAAiBA,EACtBlE,KAAKU,YAAcV,KAAKmE,kBAAkBD,GAG9CD,EAAmB5D,UAAUM,2BAA6B,WACtD,OAAOX,KAAKoE,kBAAkBpE,KAAKqE,oBAEvCJ,EAAmB5D,UAAUO,WAAa,SAAUC,GAChD,IAAI4B,EAAQzC,KACZ,OAAO,WAAc,OAAOC,EAAQM,UAAUkC,OAAO,OAAQ,EAAQ,WACjE,IAAIhC,EACJ,OAAOR,EAAQO,YAAYR,KAAM,SAAUsE,GACvC,OAAQA,EAAG5C,OACP,KAAK,EACD,MAAqB,iBAARb,EAA0B,CAAC,EAAa,IACrDJ,EAAKT,KAAKmE,kBACH,CAAC,EAAanE,KAAKuE,oBAAoB1D,KAClD,KAAK,EAAG,MAAO,CAAC,EAAcJ,EAAG+D,MAAMxE,KAAM,CAACsE,EAAG3C,UACjD,KAAK,EAAG,MAAO,CAAC,EAAc3B,KAAKyE,oBAAoB5D,WAKvEoD,EAAmB5D,UAAUS,mBAAqB,SAAUD,GACxD,IAAI4B,EAAQzC,KACZ,OAAO,WAAc,OAAOC,EAAQM,UAAUkC,OAAO,OAAQ,EAAQ,WACjE,IAAIiC,EACJ,OAAOzE,EAAQO,YAAYR,KAAM,SAAUS,GACvC,OAAQA,EAAGiB,OACP,KAAK,EACD,MAAqB,iBAARb,EAA0B,CAAC,EAAa,GAC9C,CAAC,EAAab,KAAK2E,kBAAkB9D,IAChD,KAAK,EAED,MAAO,CAAC,GADR6D,EAAWjE,EAAGkB,OAAQ,IACU3B,KAAKmE,kBAAkBO,GAAW,MACtE,KAAK,EAAG,MAAO,CAAC,EAAa1E,KAAK4E,iBAAiB/D,IACnD,KAAK,EAED,MAAO,CAAC,EADKJ,EAAGkB,OACiB,IAAM,aAK3DsC,EAAmB5D,UAAUU,cAAgB,SAAUF,GACnD,IAAI4B,EAAQzC,KACZ,OAAO,WAAc,OAAOC,EAAQM,UAAUkC,OAAO,OAAQ,EAAQ,WACjE,IAAIA,EAAQzC,KACZ,OAAOC,EAAQO,YAAYR,KAAM,SAAUS,GACvC,OAAQA,EAAGiB,OACP,KAAK,EACD,MAAqB,iBAARb,EAA0B,CAAC,EAAa,GAC9C,CAAC,EAAab,KAAK2E,kBAAkB9D,IAChD,KAAK,EAAG,MAAO,CAAC,EAAeJ,EAAGkB,OAAQiB,IAAI,SAAUiC,GAAK,OAAOpC,EAAM0B,kBAAkBU,MAC5F,KAAK,EAAG,MAAO,CAAC,EAAc7E,KAAK4E,iBAAiB/D,WAMpEoD,EAAmB5D,UAAUyE,WAAa,SAAU5D,GAChD,OAAOlB,KAAKY,WAAWM,EAAhBlB,IAGXiE,EAAmB5D,UAAU0E,gBAAkB,SAAU7D,GACrD,OAAOlB,KAAKe,cAAcG,EAAnBlB,IAGXiE,EAAmB5D,UAAU2E,eAAiB,SAAUjB,GACpD,OAAO9D,EAAQM,UAAUP,UAAM,OAAQ,EAAQ,WAC3C,IAAIS,EACJ,OAAOR,EAAQO,YAAYR,KAAM,SAAUsE,GACvC,OAAQA,EAAG5C,OACP,KAAK,EAED,OADAjB,EAAKT,KAAKoE,kBACH,CAAC,EAAapE,KAAKuE,oBAAoBR,IAClD,KAAK,EAAG,MAAO,CAAC,EAActD,EAAG+D,MAAMxE,KAAM,CAACsE,EAAG3C,gBAMjEsC,EAAmB5D,UAAU4E,mBAAqB,SAAUlB,GACxD,OAAO9D,EAAQM,UAAUP,UAAM,OAAQ,EAAQ,WAC3C,IAAIyC,EAAQzC,KACZ,OAAOC,EAAQO,YAAYR,KAAM,SAAUS,GACvC,OAAQA,EAAGiB,OACP,KAAK,EAAG,MAAO,CAAC,EAAa1B,KAAK2E,kBAAkBZ,IACpD,KAAK,EAAG,MAAO,CAAC,EAAetD,EAAGkB,OAAQiB,IAAI,SAAUiC,GAAK,OAAOpC,EAAM2B,kBAAkBS,YAM5GZ,EAAmB5D,UAAU6E,uBAAyB,SAAUhE,EAAawD,GACzE,OAAO,IAAIxD,EAAYlB,KAAKoE,kBAAkBM,KAElDT,EAAmB5D,UAAUuE,iBAAmB,SAAU1D,GACtD,OAAOjB,EAAQM,UAAUP,UAAM,OAAQ,EAAQ,WAC3C,IAAImF,EAAkBC,EAClB3C,EAAQzC,KACZ,OAAOC,EAAQO,YAAYR,KAAM,SAAUS,GACvC,OAAQA,EAAGiB,OACP,KAAK,EAGD,OAFAyD,EAAmBjE,aAAuBD,EACtCC,EAAc,IAAID,EAAiBC,EAAa,IAC7C,CAAC,EAAalB,KAAK2E,kBAAkBQ,EAAiB3B,gBACjE,KAAK,EAED,OADA4B,EAAW3E,EAAGkB,OACP,CAAC,EAAcwD,EAAiB7C,OAAO8C,EAASxC,IAAI,SAAU8B,GAAW,OAAOjC,EAAMyC,uBAAuBC,EAAiBjE,YAAawD,aAKtKT,EAAmB5D,UAAUkE,oBAAsB,SAAUR,GACzD,OAAO9D,EAAQM,UAAUP,UAAM,OAAQ,EAAQ,WAC3C,IAAI0E,EACJ,OAAOzE,EAAQO,YAAYR,KAAM,SAAUS,GACvC,OAAQA,EAAGiB,OACP,KAAK,EAAG,MAAO,CAAC,EAAa1B,KAAK2E,kBAAkBZ,IACpD,KAAK,EAED,KADAW,EAAWjE,EAAGkB,OAAQ,IAElB,MAAM0D,MAAM,gDAAmDtB,EAAW,yBAE9E,MAAO,CAAC,EAAcW,SAK1CT,EAAmB5D,UAAUoE,oBAAsB,SAAUvD,GACzD,OAAOjB,EAAQM,UAAUP,UAAM,OAAQ,EAAQ,WAC3C,IAAIiD,EACJ,OAAOhD,EAAQO,YAAYR,KAAM,SAAUS,GACvC,OAAQA,EAAGiB,OACP,KAAK,EAAG,MAAO,CAAC,EAAa1B,KAAK4E,iBAAiB1D,IACnD,KAAK,EAED,KADA+B,EAAWxC,EAAGkB,OAAQ,IAElB,MAS5B,SAAS2D,EAA2BpE,GAChC,IAAIiE,EAAmBjE,aAAuBD,EAAmBC,EAAc,IAAID,EAAiBC,EAAa,IAC7GT,EAAK0E,EAAiBjE,YAAagB,EAAOzB,EAAGyB,KAAM2B,EAAepD,EAAGoD,aACrE0B,EAAeJ,EAAiB7B,iBAChCkC,EAAU,gCAAkCtD,EAAO,wBAA2B2B,EAAe,IAKjG,OAJI0B,IACAC,GAAW,wBAA0BD,EAAe,KAExDC,GAAW,uBACJH,MAAMG;;;;;;;OAlBiBF,CAA2BpE,GAErC,MAAO,CAAC,EAAc+B,SA9IP,GA+KvC,SAAW/C,GACPA,EAAQA,EAAmB,UAAI,GAAK,YACpCA,EAAQA,EAAa,IAAI,GAAK,MAC9BA,EAAQA,EAAe,MAAI,GAAK,QAChCA,EAAQA,EAAe,MAAI,GAAK,QAChCA,EAAQA,EAAiB,QAAI,GAAK,UAClCA,EAAQA,EAAa,IAAI,GAAK,MAC9BA,EAAQA,EAAgB,OAAI,GAAK,SACjCA,EAAQA,EAAiB,QAAI,GAAK,UAClCA,EAAQA,EAAmB,UAAI,GAAK,YACpCA,EAAQA,EAAa,IAAI,GAAK,MAC9BA,EAAQA,EAAc,KAAI,IAAM,OAChCA,EAAQA,EAAoB,WAAI,IAAM,aACtCA,EAAQA,EAAkB,SAAI,IAAM,WACpCA,EAAQA,EAAqB,YAAI,IAAM,cACvCA,EAAQA,EAAoB,WAAI,IAAM,aACtCA,EAAQA,EAAgB,OAAI,IAAM,SAClCA,EAAQA,EAAgB,OAAI,IAAM,SAClCA,EAAQA,EAAY,GAAI,IAAM,KAC9BA,EAAQA,EAAY,GAAI,IAAM,KAC9BA,EAAQA,EAAY,GAAI,IAAM,KAC9BA,EAAQA,EAAY,GAAI,IAAM,KAC9BA,EAAQA,EAAY,GAAI,IAAM,KAC9BA,EAAQA,EAAY,GAAI,IAAM,KAC9BA,EAAQA,EAAY,GAAI,IAAM,KAC9BA,EAAQA,EAAY,GAAI,IAAM,KAC9BA,EAAQA,EAAY,GAAI,IAAM,KAC9BA,EAAQA,EAAa,IAAI,IAAM,MAC/BA,EAAQA,EAAa,IAAI,IAAM,MAC/BA,EAAQA,EAAa,IAAI,IAAM,MAC/BA,EAAQA,EAAc,KAAI,IAAM,OA9BpC,CA+BGA,IAAYA,EAAU;;;;;;;;;;;;;;;;;;;;;;AAgGzB,IAAIuF,EAAuC,SAAUC,GAEjD,SAASD,IACL,OAAkB,OAAXC,GAAmBA,EAAOlB,MAAMxE,KAAM2F,YAAc3F,KAuC/D,OAzCAC,EAAQ2F,UAAUH,EAAuBC,GAQzCD,EAAsBI,KAAO,SAAU1E,GAEnC,YADgB,IAAZA,IAAsBA,EAAU,IAC7B,IAAIF,EAAiBwE,EAAuBtE,IAGvDsE,EAAsBpF,UAAUyF,SAAW,WACvC,OAAO7F,EAAQM,UAAUP,UAAM,OAAQ,EAAQ,WAC3C,IAAU+F,EACV,OAAO9F,EAAQO,YAAYR,KAAM,SAAUS,GACvC,OAAQA,EAAGiB,OACP,KAAK,EAAG,MAAO,CAAC,EAAa1B,KAAKM,QAClC,KAAK,EAED,MAAO,CAAC,EADDG,EAAGkB,OACgBqE,aAAa,kBAC3C,KAAK,EAED,MAAO,CAAC,GADRD,EAAYtF,EAAGkB,QACmB5B,EAASkG,qBAAqBF,GAAa,YAMjGN,EAAsBpF,UAAU6F,QAAU,WACtC,OAAOjG,EAAQM,UAAUP,UAAM,OAAQ,EAAQ,WAC3C,OAAOC,EAAQO,YAAYR,KAAM,SAAUS,GACvC,OAAQA,EAAGiB,OACP,KAAK,EAAG,MAAO,CAAC,EAAa1B,KAAKM,QAClC,KAAK,EAAG,MAAO,CAAC,EAAeG,EAAGkB,OAAQqE,aAAa,eAKvEP,EAAsB5B,aAAe,mBAC9B4B,EA1C+B,CA2CxCtF;;;;;;;;;;;;;;OAkBFhB,EAAQsG,sBAAwBA,EAEhCU,OAAOC,eAAejH,EAAS,aAAc,CAAEkH,OAAO","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('tslib'), require('@angular/cdk/coercion')) :\n    typeof define === 'function' && define.amd ? define('@angular/material/progress-bar/testing', ['exports', 'tslib', '@angular/cdk/coercion'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.material = global.ng.material || {}, global.ng.material.progressBar = global.ng.material.progressBar || {}, global.ng.material.progressBar.testing = {}), global.tslib, global.ng.cdk.coercion));\n}(this, function (exports, tslib_1, coercion) { 'use strict';\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for component harnesses that all component harness authors should extend. This base\n     * component harness provides the basic ability to locate element and sub-component harness. It\n     * should be inherited when defining user's own harness.\n     */\n    var ComponentHarness = /** @class */ (function () {\n        function ComponentHarness(locatorFactory) {\n            this.locatorFactory = locatorFactory;\n        }\n        /** Gets a `Promise` for the `TestElement` representing the host element of the component. */\n        ComponentHarness.prototype.host = function () {\n            return tslib_1.__awaiter(this, void 0, void 0, function () {\n                return tslib_1.__generator(this, function (_a) {\n                    return [2 /*return*/, this.locatorFactory.rootElement];\n                });\n            });\n        };\n        /**\n         * Gets a `LocatorFactory` for the document root element. This factory can be used to create\n         * locators for elements that a component creates outside of its own root element. (e.g. by\n         * appending to document.body).\n         */\n        ComponentHarness.prototype.documentRootLocatorFactory = function () {\n            return this.locatorFactory.documentRootLocatorFactory();\n        };\n        ComponentHarness.prototype.locatorFor = function (arg) {\n            return this.locatorFactory.locatorFor(arg);\n        };\n        ComponentHarness.prototype.locatorForOptional = function (arg) {\n            return this.locatorFactory.locatorForOptional(arg);\n        };\n        ComponentHarness.prototype.locatorForAll = function (arg) {\n            return this.locatorFactory.locatorForAll(arg);\n        };\n        /**\n         * Flushes change detection and async tasks.\n         * In most cases it should not be necessary to call this manually. However, there may be some edge\n         * cases where it is needed to fully flush animation events.\n         */\n        ComponentHarness.prototype.forceStabilize = function () {\n            return tslib_1.__awaiter(this, void 0, void 0, function () {\n                return tslib_1.__generator(this, function (_a) {\n                    return [2 /*return*/, this.locatorFactory.forceStabilize()];\n                });\n            });\n        };\n        return ComponentHarness;\n    }());\n    /**\n     * A class used to associate a ComponentHarness class with predicates functions that can be used to\n     * filter instances of the class.\n     */\n    var HarnessPredicate = /** @class */ (function () {\n        function HarnessPredicate(harnessType, options) {\n            this.harnessType = harnessType;\n            this._predicates = [];\n            this._descriptions = [];\n            this._addBaseOptions(options);\n        }\n        /**\n         * Checks if a string matches the given pattern.\n         * @param s The string to check, or a Promise for the string to check.\n         * @param pattern The pattern the string is expected to match. If `pattern` is a string, `s` is\n         *   expected to match exactly. If `pattern` is a regex, a partial match is allowed.\n         * @return A Promise that resolves to whether the string matches the pattern.\n         */\n        HarnessPredicate.stringMatches = function (s, pattern) {\n            return tslib_1.__awaiter(this, void 0, void 0, function () {\n                return tslib_1.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, s];\n                        case 1:\n                            s = _a.sent();\n                            return [2 /*return*/, typeof pattern === 'string' ? s === pattern : pattern.test(s)];\n                    }\n                });\n            });\n        };\n        /**\n         * Adds a predicate function to be run against candidate harnesses.\n         * @param description A description of this predicate that may be used in error messages.\n         * @param predicate An async predicate function.\n         * @return this (for method chaining).\n         */\n        HarnessPredicate.prototype.add = function (description, predicate) {\n            this._descriptions.push(description);\n            this._predicates.push(predicate);\n            return this;\n        };\n        /**\n         * Adds a predicate function that depends on an option value to be run against candidate\n         * harnesses. If the option value is undefined, the predicate will be ignored.\n         * @param name The name of the option (may be used in error messages).\n         * @param option The option value.\n         * @param predicate The predicate function to run if the option value is not undefined.\n         * @return this (for method chaining).\n         */\n        HarnessPredicate.prototype.addOption = function (name, option, predicate) {\n            // Add quotes around strings to differentiate them from other values\n            var value = typeof option === 'string' ? \"\\\"\" + option + \"\\\"\" : \"\" + option;\n            if (option !== undefined) {\n                this.add(name + \" = \" + value, function (item) { return predicate(item, option); });\n            }\n            return this;\n        };\n        /**\n         * Filters a list of harnesses on this predicate.\n         * @param harnesses The list of harnesses to filter.\n         * @return A list of harnesses that satisfy this predicate.\n         */\n        HarnessPredicate.prototype.filter = function (harnesses) {\n            return tslib_1.__awaiter(this, void 0, void 0, function () {\n                var results;\n                var _this = this;\n                return tslib_1.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, Promise.all(harnesses.map(function (h) { return _this.evaluate(h); }))];\n                        case 1:\n                            results = _a.sent();\n                            return [2 /*return*/, harnesses.filter(function (_, i) { return results[i]; })];\n                    }\n                });\n            });\n        };\n        /**\n         * Evaluates whether the given harness satisfies this predicate.\n         * @param harness The harness to check\n         * @return A promise that resolves to true if the harness satisfies this predicate,\n         *   and resolves to false otherwise.\n         */\n        HarnessPredicate.prototype.evaluate = function (harness) {\n            return tslib_1.__awaiter(this, void 0, void 0, function () {\n                var results;\n                return tslib_1.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, Promise.all(this._predicates.map(function (p) { return p(harness); }))];\n                        case 1:\n                            results = _a.sent();\n                            return [2 /*return*/, results.reduce(function (combined, current) { return combined && current; }, true)];\n                    }\n                });\n            });\n        };\n        /** Gets a description of this predicate for use in error messages. */\n        HarnessPredicate.prototype.getDescription = function () {\n            return this._descriptions.join(', ');\n        };\n        /** Gets the selector used to find candidate elements. */\n        HarnessPredicate.prototype.getSelector = function () {\n            var _this = this;\n            return this._ancestor.split(',')\n                .map(function (part) { return (part.trim() + \" \" + _this.harnessType.hostSelector).trim(); })\n                .join(',');\n        };\n        /** Adds base options common to all harness types. */\n        HarnessPredicate.prototype._addBaseOptions = function (options) {\n            var _this = this;\n            this._ancestor = options.ancestor || '';\n            if (this._ancestor) {\n                this._descriptions.push(\"has ancestor matching selector \\\"\" + this._ancestor + \"\\\"\");\n            }\n            var selector = options.selector;\n            if (selector !== undefined) {\n                this.add(\"host matches selector \\\"\" + selector + \"\\\"\", function (item) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n                    return tslib_1.__generator(this, function (_a) {\n                        switch (_a.label) {\n                            case 0: return [4 /*yield*/, item.host()];\n                            case 1: return [2 /*return*/, (_a.sent()).matchesSelector(selector)];\n                        }\n                    });\n                }); });\n            }\n        };\n        return HarnessPredicate;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a browser MouseEvent with the specified options.\n     * @docs-private\n     */\n    function createMouseEvent(type, x, y, button) {\n        if (x === void 0) { x = 0; }\n        if (y === void 0) { y = 0; }\n        if (button === void 0) { button = 0; }\n        var event = document.createEvent('MouseEvent');\n        var originalPreventDefault = event.preventDefault;\n        event.initMouseEvent(type, true, /* canBubble */ true, /* cancelable */ window, /* view */ 0, /* detail */ x, /* screenX */ y, /* screenY */ x, /* clientX */ y, /* clientY */ false, /* ctrlKey */ false, /* altKey */ false, /* shiftKey */ false, /* metaKey */ button, /* button */ null /* relatedTarget */);\n        // `initMouseEvent` doesn't allow us to pass the `buttons` and\n        // defaults it to 0 which looks like a fake event.\n        Object.defineProperty(event, 'buttons', { get: function () { return 1; } });\n        // IE won't set `defaultPrevented` on synthetic events so we need to do it manually.\n        event.preventDefault = function () {\n            Object.defineProperty(event, 'defaultPrevented', { get: function () { return true; } });\n            return originalPreventDefault.apply(this, arguments);\n        };\n        return event;\n    }\n    /**\n     * Creates a browser TouchEvent with the specified pointer coordinates.\n     * @docs-private\n     */\n    function createTouchEvent(type, pageX, pageY) {\n        if (pageX === void 0) { pageX = 0; }\n        if (pageY === void 0) { pageY = 0; }\n        // In favor of creating events that work for most of the browsers, the event is created\n        // as a basic UI Event. The necessary details for the event will be set manually.\n        var event = document.createEvent('UIEvent');\n        var touchDetails = { pageX: pageX, pageY: pageY };\n        event.initUIEvent(type, true, true, window, 0);\n        // Most of the browsers don't have a \"initTouchEvent\" method that can be used to define\n        // the touch details.\n        Object.defineProperties(event, {\n            touches: { value: [touchDetails] },\n            targetTouches: { value: [touchDetails] },\n            changedTouches: { value: [touchDetails] }\n        });\n        return event;\n    }\n    /**\n     * Dispatches a keydown event from an element.\n     * @docs-private\n     */\n    function createKeyboardEvent(type, keyCode, key, target, modifiers) {\n        if (keyCode === void 0) { keyCode = 0; }\n        if (key === void 0) { key = ''; }\n        if (modifiers === void 0) { modifiers = {}; }\n        var event = document.createEvent('KeyboardEvent');\n        var originalPreventDefault = event.preventDefault;\n        // Firefox does not support `initKeyboardEvent`, but supports `initKeyEvent`.\n        if (event.initKeyEvent) {\n            event.initKeyEvent(type, true, true, window, modifiers.control, modifiers.alt, modifiers.shift, modifiers.meta, keyCode);\n        }\n        else {\n            // `initKeyboardEvent` expects to receive modifiers as a whitespace-delimited string\n            // See https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/initKeyboardEvent\n            var modifiersStr = (modifiers.control ? 'Control ' : '' + modifiers.alt ? 'Alt ' : '' +\n                modifiers.shift ? 'Shift ' : '' + modifiers.meta ? 'Meta' : '').trim();\n            event.initKeyboardEvent(type, true, /* canBubble */ true, /* cancelable */ window, /* view */ 0, /* char */ key, /* key */ 0, /* location */ modifiersStr, /* modifiersList */ false /* repeat */);\n        }\n        // Webkit Browsers don't set the keyCode when calling the init function.\n        // See related bug https://bugs.webkit.org/show_bug.cgi?id=16735\n        Object.defineProperties(event, {\n            keyCode: { get: function () { return keyCode; } },\n            key: { get: function () { return key; } },\n            target: { get: function () { return target; } },\n            ctrlKey: { get: function () { return !!modifiers.control; } },\n            altKey: { get: function () { return !!modifiers.alt; } },\n            shiftKey: { get: function () { return !!modifiers.shift; } },\n            metaKey: { get: function () { return !!modifiers.meta; } }\n        });\n        // IE won't set `defaultPrevented` on synthetic events so we need to do it manually.\n        event.preventDefault = function () {\n            Object.defineProperty(event, 'defaultPrevented', { get: function () { return true; } });\n            return originalPreventDefault.apply(this, arguments);\n        };\n        return event;\n    }\n    /**\n     * Creates a fake event object with any desired event type.\n     * @docs-private\n     */\n    function createFakeEvent(type, canBubble, cancelable) {\n        if (canBubble === void 0) { canBubble = false; }\n        if (cancelable === void 0) { cancelable = true; }\n        var event = document.createEvent('Event');\n        event.initEvent(type, canBubble, cancelable);\n        return event;\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Utility to dispatch any event on a Node.\n     * @docs-private\n     */\n    function dispatchEvent(node, event) {\n        node.dispatchEvent(event);\n        return event;\n    }\n    /**\n     * Shorthand to dispatch a fake event on a specified node.\n     * @docs-private\n     */\n    function dispatchFakeEvent(node, type, canBubble) {\n        return dispatchEvent(node, createFakeEvent(type, canBubble));\n    }\n    /**\n     * Shorthand to dispatch a keyboard event with a specified key code.\n     * @docs-private\n     */\n    function dispatchKeyboardEvent(node, type, keyCode, key, target, modifiers) {\n        return dispatchEvent(node, createKeyboardEvent(type, keyCode, key, target, modifiers));\n    }\n    /**\n     * Shorthand to dispatch a mouse event on the specified coordinates.\n     * @docs-private\n     */\n    function dispatchMouseEvent(node, type, x, y, event) {\n        if (x === void 0) { x = 0; }\n        if (y === void 0) { y = 0; }\n        if (event === void 0) { event = createMouseEvent(type, x, y); }\n        return dispatchEvent(node, event);\n    }\n    /**\n     * Shorthand to dispatch a touch event on the specified coordinates.\n     * @docs-private\n     */\n    function dispatchTouchEvent(node, type, x, y) {\n        if (x === void 0) { x = 0; }\n        if (y === void 0) { y = 0; }\n        return dispatchEvent(node, createTouchEvent(type, x, y));\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function triggerFocusChange(element, event) {\n        var eventFired = false;\n        var handler = function () { return eventFired = true; };\n        element.addEventListener(event, handler);\n        element[event]();\n        element.removeEventListener(event, handler);\n        if (!eventFired) {\n            dispatchFakeEvent(element, event);\n        }\n    }\n    /**\n     * Patches an elements focus and blur methods to emit events consistently and predictably.\n     * This is necessary, because some browsers, like IE11, will call the focus handlers asynchronously,\n     * while others won't fire them at all if the browser window is not focused.\n     * @docs-private\n     */\n    function patchElementFocus(element) {\n        element.focus = function () { return dispatchFakeEvent(element, 'focus'); };\n        element.blur = function () { return dispatchFakeEvent(element, 'blur'); };\n    }\n    /** @docs-private */\n    function triggerFocus(element) {\n        triggerFocusChange(element, 'focus');\n    }\n    /** @docs-private */\n    function triggerBlur(element) {\n        triggerFocusChange(element, 'blur');\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base harness environment class that can be extended to allow `ComponentHarness`es to be used in\n     * different test environments (e.g. testbed, protractor, etc.). This class implements the\n     * functionality of both a `HarnessLoader` and `LocatorFactory`. This class is generic on the raw\n     * element type, `E`, used by the particular test environment.\n     */\n    var HarnessEnvironment = /** @class */ (function () {\n        function HarnessEnvironment(rawRootElement) {\n            this.rawRootElement = rawRootElement;\n            this.rootElement = this.createTestElement(rawRootElement);\n        }\n        // Implemented as part of the `LocatorFactory` interface.\n        HarnessEnvironment.prototype.documentRootLocatorFactory = function () {\n            return this.createEnvironment(this.getDocumentRoot());\n        };\n        HarnessEnvironment.prototype.locatorFor = function (arg) {\n            var _this = this;\n            return function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n                var _a;\n                return tslib_1.__generator(this, function (_b) {\n                    switch (_b.label) {\n                        case 0:\n                            if (!(typeof arg === 'string')) return [3 /*break*/, 2];\n                            _a = this.createTestElement;\n                            return [4 /*yield*/, this._assertElementFound(arg)];\n                        case 1: return [2 /*return*/, _a.apply(this, [_b.sent()])];\n                        case 2: return [2 /*return*/, this._assertHarnessFound(arg)];\n                    }\n                });\n            }); };\n        };\n        HarnessEnvironment.prototype.locatorForOptional = function (arg) {\n            var _this = this;\n            return function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n                var element, candidates;\n                return tslib_1.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            if (!(typeof arg === 'string')) return [3 /*break*/, 2];\n                            return [4 /*yield*/, this.getAllRawElements(arg)];\n                        case 1:\n                            element = (_a.sent())[0];\n                            return [2 /*return*/, element ? this.createTestElement(element) : null];\n                        case 2: return [4 /*yield*/, this._getAllHarnesses(arg)];\n                        case 3:\n                            candidates = _a.sent();\n                            return [2 /*return*/, candidates[0] || null];\n                    }\n                });\n            }); };\n        };\n        HarnessEnvironment.prototype.locatorForAll = function (arg) {\n            var _this = this;\n            return function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n                var _this = this;\n                return tslib_1.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            if (!(typeof arg === 'string')) return [3 /*break*/, 2];\n                            return [4 /*yield*/, this.getAllRawElements(arg)];\n                        case 1: return [2 /*return*/, (_a.sent()).map(function (e) { return _this.createTestElement(e); })];\n                        case 2: return [2 /*return*/, this._getAllHarnesses(arg)];\n                    }\n                });\n            }); };\n        };\n        // Implemented as part of the `HarnessLoader` interface.\n        HarnessEnvironment.prototype.getHarness = function (harnessType) {\n            return this.locatorFor(harnessType)();\n        };\n        // Implemented as part of the `HarnessLoader` interface.\n        HarnessEnvironment.prototype.getAllHarnesses = function (harnessType) {\n            return this.locatorForAll(harnessType)();\n        };\n        // Implemented as part of the `HarnessLoader` interface.\n        HarnessEnvironment.prototype.getChildLoader = function (selector) {\n            return tslib_1.__awaiter(this, void 0, void 0, function () {\n                var _a;\n                return tslib_1.__generator(this, function (_b) {\n                    switch (_b.label) {\n                        case 0:\n                            _a = this.createEnvironment;\n                            return [4 /*yield*/, this._assertElementFound(selector)];\n                        case 1: return [2 /*return*/, _a.apply(this, [_b.sent()])];\n                    }\n                });\n            });\n        };\n        // Implemented as part of the `HarnessLoader` interface.\n        HarnessEnvironment.prototype.getAllChildLoaders = function (selector) {\n            return tslib_1.__awaiter(this, void 0, void 0, function () {\n                var _this = this;\n                return tslib_1.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this.getAllRawElements(selector)];\n                        case 1: return [2 /*return*/, (_a.sent()).map(function (e) { return _this.createEnvironment(e); })];\n                    }\n                });\n            });\n        };\n        /** Creates a `ComponentHarness` for the given harness type with the given raw host element. */\n        HarnessEnvironment.prototype.createComponentHarness = function (harnessType, element) {\n            return new harnessType(this.createEnvironment(element));\n        };\n        HarnessEnvironment.prototype._getAllHarnesses = function (harnessType) {\n            return tslib_1.__awaiter(this, void 0, void 0, function () {\n                var harnessPredicate, elements;\n                var _this = this;\n                return tslib_1.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            harnessPredicate = harnessType instanceof HarnessPredicate ?\n                                harnessType : new HarnessPredicate(harnessType, {});\n                            return [4 /*yield*/, this.getAllRawElements(harnessPredicate.getSelector())];\n                        case 1:\n                            elements = _a.sent();\n                            return [2 /*return*/, harnessPredicate.filter(elements.map(function (element) { return _this.createComponentHarness(harnessPredicate.harnessType, element); }))];\n                    }\n                });\n            });\n        };\n        HarnessEnvironment.prototype._assertElementFound = function (selector) {\n            return tslib_1.__awaiter(this, void 0, void 0, function () {\n                var element;\n                return tslib_1.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this.getAllRawElements(selector)];\n                        case 1:\n                            element = (_a.sent())[0];\n                            if (!element) {\n                                throw Error(\"Expected to find element matching selector: \\\"\" + selector + \"\\\", but none was found\");\n                            }\n                            return [2 /*return*/, element];\n                    }\n                });\n            });\n        };\n        HarnessEnvironment.prototype._assertHarnessFound = function (harnessType) {\n            return tslib_1.__awaiter(this, void 0, void 0, function () {\n                var harness;\n                return tslib_1.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this._getAllHarnesses(harnessType)];\n                        case 1:\n                            harness = (_a.sent())[0];\n                            if (!harness) {\n                                throw _getErrorForMissingHarness(harnessType);\n                            }\n                            return [2 /*return*/, harness];\n                    }\n                });\n            });\n        };\n        return HarnessEnvironment;\n    }());\n    function _getErrorForMissingHarness(harnessType) {\n        var harnessPredicate = harnessType instanceof HarnessPredicate ? harnessType : new HarnessPredicate(harnessType, {});\n        var _a = harnessPredicate.harnessType, name = _a.name, hostSelector = _a.hostSelector;\n        var restrictions = harnessPredicate.getDescription();\n        var message = \"Expected to find element for \" + name + \" matching selector: \\\"\" + hostSelector + \"\\\"\";\n        if (restrictions) {\n            message += \" (with restrictions: \" + restrictions + \")\";\n        }\n        message += ', but none was found';\n        return Error(message);\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** An enum of non-text keys that can be used with the `sendKeys` method. */\n    // NOTE: This is a separate enum from `@angular/cdk/keycodes` because we don't necessarily want to\n    // support every possible keyCode. We also can't rely on Protractor's `Key` because we don't want a\n    // dependency on any particular testing framework here. Instead we'll just maintain this supported\n    // list of keys and let individual concrete `HarnessEnvironment` classes map them to whatever key\n    // representation is used in its respective testing framework.\n    var TestKey;\n    (function (TestKey) {\n        TestKey[TestKey[\"BACKSPACE\"] = 0] = \"BACKSPACE\";\n        TestKey[TestKey[\"TAB\"] = 1] = \"TAB\";\n        TestKey[TestKey[\"ENTER\"] = 2] = \"ENTER\";\n        TestKey[TestKey[\"SHIFT\"] = 3] = \"SHIFT\";\n        TestKey[TestKey[\"CONTROL\"] = 4] = \"CONTROL\";\n        TestKey[TestKey[\"ALT\"] = 5] = \"ALT\";\n        TestKey[TestKey[\"ESCAPE\"] = 6] = \"ESCAPE\";\n        TestKey[TestKey[\"PAGE_UP\"] = 7] = \"PAGE_UP\";\n        TestKey[TestKey[\"PAGE_DOWN\"] = 8] = \"PAGE_DOWN\";\n        TestKey[TestKey[\"END\"] = 9] = \"END\";\n        TestKey[TestKey[\"HOME\"] = 10] = \"HOME\";\n        TestKey[TestKey[\"LEFT_ARROW\"] = 11] = \"LEFT_ARROW\";\n        TestKey[TestKey[\"UP_ARROW\"] = 12] = \"UP_ARROW\";\n        TestKey[TestKey[\"RIGHT_ARROW\"] = 13] = \"RIGHT_ARROW\";\n        TestKey[TestKey[\"DOWN_ARROW\"] = 14] = \"DOWN_ARROW\";\n        TestKey[TestKey[\"INSERT\"] = 15] = \"INSERT\";\n        TestKey[TestKey[\"DELETE\"] = 16] = \"DELETE\";\n        TestKey[TestKey[\"F1\"] = 17] = \"F1\";\n        TestKey[TestKey[\"F2\"] = 18] = \"F2\";\n        TestKey[TestKey[\"F3\"] = 19] = \"F3\";\n        TestKey[TestKey[\"F4\"] = 20] = \"F4\";\n        TestKey[TestKey[\"F5\"] = 21] = \"F5\";\n        TestKey[TestKey[\"F6\"] = 22] = \"F6\";\n        TestKey[TestKey[\"F7\"] = 23] = \"F7\";\n        TestKey[TestKey[\"F8\"] = 24] = \"F8\";\n        TestKey[TestKey[\"F9\"] = 25] = \"F9\";\n        TestKey[TestKey[\"F10\"] = 26] = \"F10\";\n        TestKey[TestKey[\"F11\"] = 27] = \"F11\";\n        TestKey[TestKey[\"F12\"] = 28] = \"F12\";\n        TestKey[TestKey[\"META\"] = 29] = \"META\";\n    })(TestKey || (TestKey = {}));\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Checks whether the given Element is a text input element.\n     * @docs-private\n     */\n    function isTextInput(element) {\n        return element.nodeName.toLowerCase() === 'input' ||\n            element.nodeName.toLowerCase() === 'textarea';\n    }\n    function typeInElement(element) {\n        var e_1, _a;\n        var modifiersAndKeys = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            modifiersAndKeys[_i - 1] = arguments[_i];\n        }\n        var first = modifiersAndKeys[0];\n        var modifiers;\n        var rest;\n        if (typeof first !== 'string' && first.keyCode === undefined && first.key === undefined) {\n            modifiers = first;\n            rest = modifiersAndKeys.slice(1);\n        }\n        else {\n            modifiers = {};\n            rest = modifiersAndKeys;\n        }\n        var keys = rest\n            .map(function (k) { return typeof k === 'string' ?\n            k.split('').map(function (c) { return ({ keyCode: c.toUpperCase().charCodeAt(0), key: c }); }) : [k]; })\n            .reduce(function (arr, k) { return arr.concat(k); }, []);\n        triggerFocus(element);\n        try {\n            for (var keys_1 = tslib_1.__values(keys), keys_1_1 = keys_1.next(); !keys_1_1.done; keys_1_1 = keys_1.next()) {\n                var key = keys_1_1.value;\n                dispatchKeyboardEvent(element, 'keydown', key.keyCode, key.key, element, modifiers);\n                dispatchKeyboardEvent(element, 'keypress', key.keyCode, key.key, element, modifiers);\n                if (isTextInput(element) && key.key && key.key.length === 1) {\n                    element.value += key.key;\n                    dispatchFakeEvent(element, 'input');\n                }\n                dispatchKeyboardEvent(element, 'keyup', key.keyCode, key.key, element, modifiers);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (keys_1_1 && !keys_1_1.done && (_a = keys_1.return)) _a.call(keys_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    }\n    /**\n     * Clears the text in an input or textarea element.\n     * @docs-private\n     */\n    function clearElement(element) {\n        triggerFocus(element);\n        element.value = '';\n        dispatchFakeEvent(element, 'input');\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Harness for interacting with a standard mat-progress-bar in tests.\n     * @dynamic\n     */\n    var MatProgressBarHarness = /** @class */ (function (_super) {\n        tslib_1.__extends(MatProgressBarHarness, _super);\n        function MatProgressBarHarness() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        /**\n         * Gets a `HarnessPredicate` that can be used to search for a progress bar with specific\n         * attributes.\n         */\n        MatProgressBarHarness.with = function (options) {\n            if (options === void 0) { options = {}; }\n            return new HarnessPredicate(MatProgressBarHarness, options);\n        };\n        /** Gets a promise for the progress bar's value. */\n        MatProgressBarHarness.prototype.getValue = function () {\n            return tslib_1.__awaiter(this, void 0, void 0, function () {\n                var host, ariaValue;\n                return tslib_1.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this.host()];\n                        case 1:\n                            host = _a.sent();\n                            return [4 /*yield*/, host.getAttribute('aria-valuenow')];\n                        case 2:\n                            ariaValue = _a.sent();\n                            return [2 /*return*/, ariaValue ? coercion.coerceNumberProperty(ariaValue) : null];\n                    }\n                });\n            });\n        };\n        /** Gets a promise for the progress bar's mode. */\n        MatProgressBarHarness.prototype.getMode = function () {\n            return tslib_1.__awaiter(this, void 0, void 0, function () {\n                return tslib_1.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this.host()];\n                        case 1: return [2 /*return*/, (_a.sent()).getAttribute('mode')];\n                    }\n                });\n            });\n        };\n        MatProgressBarHarness.hostSelector = 'mat-progress-bar';\n        return MatProgressBarHarness;\n    }(ComponentHarness));\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    exports.MatProgressBarHarness = MatProgressBarHarness;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=material-progress-bar-testing.umd.js.map\n"]}