{"version":3,"sources":["src/material/material-menu-testing.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","material","menu","testing","tslib","cdk","coercion","this","tslib_1","MatMenuHarness","_super","apply","arguments","__extends","with","options","HarnessPredicate","addOption","triggerText","harness","text","stringMatches","getTriggerText","prototype","isDisabled","__awaiter","disabled","_a","__generator","_b","label","host","sent","getAttribute","coerceBooleanProperty","isOpen","Error","focus","blur","open","close","getItems","getItemLabels","getItemByLabel","getItemByIndex","getFocusedItem","hostSelector","ComponentHarness","MatMenuItemHarness","getText","Object","defineProperty","value"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('tslib'), require('@angular/cdk/testing'), require('@angular/cdk/coercion')) :\n    typeof define === 'function' && define.amd ? define('@angular/material/menu/testing', ['exports', 'tslib', '@angular/cdk/testing', '@angular/cdk/coercion'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.material = global.ng.material || {}, global.ng.material.menu = global.ng.material.menu || {}, global.ng.material.menu.testing = {}), global.tslib, global.ng.cdk.testing, global.ng.cdk.coercion));\n}(this, function (exports, tslib_1, testing, coercion) { 'use strict';\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Harness for interacting with a standard mat-menu in tests.\n     * @dynamic\n     */\n    var MatMenuHarness = /** @class */ (function (_super) {\n        tslib_1.__extends(MatMenuHarness, _super);\n        function MatMenuHarness() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        // TODO: potentially extend MatButtonHarness\n        /**\n         * Gets a `HarnessPredicate` that can be used to search for a menu with specific attributes.\n         * @param options Options for narrowing the search:\n         *   - `selector` finds a menu whose host element matches the given selector.\n         *   - `label` finds a menu with specific label text.\n         * @return a `HarnessPredicate` configured with the given options.\n         */\n        MatMenuHarness.with = function (options) {\n            if (options === void 0) { options = {}; }\n            return new testing.HarnessPredicate(MatMenuHarness, options)\n                .addOption('text', options.triggerText, function (harness, text) { return testing.HarnessPredicate.stringMatches(harness.getTriggerText(), text); });\n        };\n        /** Gets a boolean promise indicating if the menu is disabled. */\n        MatMenuHarness.prototype.isDisabled = function () {\n            return tslib_1.__awaiter(this, void 0, void 0, function () {\n                var disabled, _a;\n                return tslib_1.__generator(this, function (_b) {\n                    switch (_b.label) {\n                        case 0: return [4 /*yield*/, this.host()];\n                        case 1:\n                            disabled = (_b.sent()).getAttribute('disabled');\n                            _a = coercion.coerceBooleanProperty;\n                            return [4 /*yield*/, disabled];\n                        case 2: return [2 /*return*/, _a.apply(void 0, [_b.sent()])];\n                    }\n                });\n            });\n        };\n        MatMenuHarness.prototype.isOpen = function () {\n            return tslib_1.__awaiter(this, void 0, void 0, function () {\n                return tslib_1.__generator(this, function (_a) {\n                    throw Error('not implemented');\n                });\n            });\n        };\n        MatMenuHarness.prototype.getTriggerText = function () {\n            return tslib_1.__awaiter(this, void 0, void 0, function () {\n                return tslib_1.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this.host()];\n                        case 1: return [2 /*return*/, (_a.sent()).text()];\n                    }\n                });\n            });\n        };\n        /** Focuses the menu and returns a void promise that indicates when the action is complete. */\n        MatMenuHarness.prototype.focus = function () {\n            return tslib_1.__awaiter(this, void 0, void 0, function () {\n                return tslib_1.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this.host()];\n                        case 1: return [2 /*return*/, (_a.sent()).focus()];\n                    }\n                });\n            });\n        };\n        /** Blurs the menu and returns a void promise that indicates when the action is complete. */\n        MatMenuHarness.prototype.blur = function () {\n            return tslib_1.__awaiter(this, void 0, void 0, function () {\n                return tslib_1.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this.host()];\n                        case 1: return [2 /*return*/, (_a.sent()).blur()];\n                    }\n                });\n            });\n        };\n        MatMenuHarness.prototype.open = function () {\n            return tslib_1.__awaiter(this, void 0, void 0, function () {\n                return tslib_1.__generator(this, function (_a) {\n                    throw Error('not implemented');\n                });\n            });\n        };\n        MatMenuHarness.prototype.close = function () {\n            return tslib_1.__awaiter(this, void 0, void 0, function () {\n                return tslib_1.__generator(this, function (_a) {\n                    throw Error('not implemented');\n                });\n            });\n        };\n        MatMenuHarness.prototype.getItems = function () {\n            return tslib_1.__awaiter(this, void 0, void 0, function () {\n                return tslib_1.__generator(this, function (_a) {\n                    throw Error('not implemented');\n                });\n            });\n        };\n        MatMenuHarness.prototype.getItemLabels = function () {\n            return tslib_1.__awaiter(this, void 0, void 0, function () {\n                return tslib_1.__generator(this, function (_a) {\n                    throw Error('not implemented');\n                });\n            });\n        };\n        MatMenuHarness.prototype.getItemByLabel = function () {\n            return tslib_1.__awaiter(this, void 0, void 0, function () {\n                return tslib_1.__generator(this, function (_a) {\n                    throw Error('not implemented');\n                });\n            });\n        };\n        MatMenuHarness.prototype.getItemByIndex = function () {\n            return tslib_1.__awaiter(this, void 0, void 0, function () {\n                return tslib_1.__generator(this, function (_a) {\n                    throw Error('not implemented');\n                });\n            });\n        };\n        MatMenuHarness.prototype.getFocusedItem = function () {\n            return tslib_1.__awaiter(this, void 0, void 0, function () {\n                return tslib_1.__generator(this, function (_a) {\n                    throw Error('not implemented');\n                });\n            });\n        };\n        MatMenuHarness.hostSelector = '.mat-menu-trigger';\n        return MatMenuHarness;\n    }(testing.ComponentHarness));\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Harness for interacting with a standard mat-menu in tests.\n     * @dynamic\n     */\n    var MatMenuItemHarness = /** @class */ (function (_super) {\n        tslib_1.__extends(MatMenuItemHarness, _super);\n        function MatMenuItemHarness() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        /**\n         * Gets a `HarnessPredicate` that can be used to search for a menu with specific attributes.\n         * @param options Options for narrowing the search:\n         *   - `selector` finds a menu item whose host element matches the given selector.\n         *   - `label` finds a menu item with specific label text.\n         * @return a `HarnessPredicate` configured with the given options.\n         */\n        MatMenuItemHarness.with = function (options) {\n            if (options === void 0) { options = {}; }\n            return new testing.HarnessPredicate(MatMenuItemHarness, options); // TODO: add options here\n        };\n        /** Gets a boolean promise indicating if the menu is disabled. */\n        MatMenuItemHarness.prototype.isDisabled = function () {\n            return tslib_1.__awaiter(this, void 0, void 0, function () {\n                var disabled, _a;\n                return tslib_1.__generator(this, function (_b) {\n                    switch (_b.label) {\n                        case 0: return [4 /*yield*/, this.host()];\n                        case 1:\n                            disabled = (_b.sent()).getAttribute('disabled');\n                            _a = coercion.coerceBooleanProperty;\n                            return [4 /*yield*/, disabled];\n                        case 2: return [2 /*return*/, _a.apply(void 0, [_b.sent()])];\n                    }\n                });\n            });\n        };\n        MatMenuItemHarness.prototype.getText = function () {\n            return tslib_1.__awaiter(this, void 0, void 0, function () {\n                return tslib_1.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this.host()];\n                        case 1: return [2 /*return*/, (_a.sent()).text()];\n                    }\n                });\n            });\n        };\n        /** Focuses the menu and returns a void promise that indicates when the action is complete. */\n        MatMenuItemHarness.prototype.focus = function () {\n            return tslib_1.__awaiter(this, void 0, void 0, function () {\n                return tslib_1.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this.host()];\n                        case 1: return [2 /*return*/, (_a.sent()).focus()];\n                    }\n                });\n            });\n        };\n        /** Blurs the menu and returns a void promise that indicates when the action is complete. */\n        MatMenuItemHarness.prototype.blur = function () {\n            return tslib_1.__awaiter(this, void 0, void 0, function () {\n                return tslib_1.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this.host()];\n                        case 1: return [2 /*return*/, (_a.sent()).blur()];\n                    }\n                });\n            });\n        };\n        MatMenuItemHarness.hostSelector = '.mat-menu-item';\n        return MatMenuItemHarness;\n    }(testing.ComponentHarness));\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    exports.MatMenuHarness = MatMenuHarness;\n    exports.MatMenuItemHarness = MatMenuItemHarness;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=material-menu-testing.umd.js.map\n"]}