{"version":3,"file":"radio.js","sources":["../npm_package.es6/src/material/radio/radio.js","../radio/radio-module.ts","../radio/index.ts"],"sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChildren, Directive, ElementRef, EventEmitter, forwardRef, Inject, InjectionToken, Input, Optional, Output, QueryList, ViewChild, ViewEncapsulation, } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { mixinDisableRipple, mixinTabIndex, } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n/**\n * @record\n */\nexport function MatRadioDefaultOptions() { }\nif (false) {\n    /** @type {?} */\n    MatRadioDefaultOptions.prototype.color;\n}\n/** @type {?} */\nexport const MAT_RADIO_DEFAULT_OPTIONS = new InjectionToken('mat-radio-default-options', {\n    providedIn: 'root',\n    factory: MAT_RADIO_DEFAULT_OPTIONS_FACTORY\n});\n/**\n * @return {?}\n */\nexport function MAT_RADIO_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        color: 'accent'\n    };\n}\n// Increasing integer for generating unique ids for radio components.\n/** @type {?} */\nlet nextUniqueId = 0;\n/**\n * Provider Expression that allows mat-radio-group to register as a ControlValueAccessor. This\n * allows it to support [(ngModel)] and ngControl.\n * \\@docs-private\n * @type {?}\n */\nexport const MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MatRadioGroup)),\n    multi: true\n};\n/**\n * Change event object emitted by MatRadio and MatRadioGroup.\n */\nexport class MatRadioChange {\n    /**\n     * @param {?} source\n     * @param {?} value\n     */\n    constructor(source, value) {\n        this.source = source;\n        this.value = value;\n    }\n}\nif (false) {\n    /**\n     * The MatRadioButton that emits the change event.\n     * @type {?}\n     */\n    MatRadioChange.prototype.source;\n    /**\n     * The value of the MatRadioButton.\n     * @type {?}\n     */\n    MatRadioChange.prototype.value;\n}\n/**\n * A group of radio buttons. May contain one or more `<mat-radio-button>` elements.\n */\nexport class MatRadioGroup {\n    /**\n     * @param {?} _changeDetector\n     */\n    constructor(_changeDetector) {\n        this._changeDetector = _changeDetector;\n        /**\n         * Selected value for the radio group.\n         */\n        this._value = null;\n        /**\n         * The HTML name attribute applied to radio buttons in this group.\n         */\n        this._name = `mat-radio-group-${nextUniqueId++}`;\n        /**\n         * The currently selected radio button. Should match value.\n         */\n        this._selected = null;\n        /**\n         * Whether the `value` has been set to its initial value.\n         */\n        this._isInitialized = false;\n        /**\n         * Whether the labels should appear after or before the radio-buttons. Defaults to 'after'\n         */\n        this._labelPosition = 'after';\n        /**\n         * Whether the radio group is disabled.\n         */\n        this._disabled = false;\n        /**\n         * Whether the radio group is required.\n         */\n        this._required = false;\n        /**\n         * The method to be called in order to update ngModel\n         */\n        this._controlValueAccessorChangeFn = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * onTouch function registered via registerOnTouch (ControlValueAccessor).\n         * \\@docs-private\n         */\n        this.onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * Event emitted when the group value changes.\n         * Change events are only emitted when the value changes due to user interaction with\n         * a radio button (the same behavior as `<input type-\"radio\">`).\n         */\n        this.change = new EventEmitter();\n    }\n    /**\n     * Name of the radio button group. All radio buttons inside this group will use this name.\n     * @return {?}\n     */\n    get name() { return this._name; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set name(value) {\n        this._name = value;\n        this._updateRadioButtonNames();\n    }\n    /**\n     * Whether the labels should appear after or before the radio-buttons. Defaults to 'after'\n     * @return {?}\n     */\n    get labelPosition() {\n        return this._labelPosition;\n    }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set labelPosition(v) {\n        this._labelPosition = v === 'before' ? 'before' : 'after';\n        this._markRadiosForCheck();\n    }\n    /**\n     * Value for the radio-group. Should equal the value of the selected radio button if there is\n     * a corresponding radio button with a matching value. If there is not such a corresponding\n     * radio button, this value persists to be applied in case a new radio button is added with a\n     * matching value.\n     * @return {?}\n     */\n    get value() { return this._value; }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    set value(newValue) {\n        if (this._value !== newValue) {\n            // Set this before proceeding to ensure no circular loop occurs with selection.\n            this._value = newValue;\n            this._updateSelectedRadioFromValue();\n            this._checkSelectedRadioButton();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _checkSelectedRadioButton() {\n        if (this._selected && !this._selected.checked) {\n            this._selected.checked = true;\n        }\n    }\n    /**\n     * The currently selected radio button. If set to a new radio button, the radio group value\n     * will be updated to match the new selected button.\n     * @return {?}\n     */\n    get selected() { return this._selected; }\n    /**\n     * @param {?} selected\n     * @return {?}\n     */\n    set selected(selected) {\n        this._selected = selected;\n        this.value = selected ? selected.value : null;\n        this._checkSelectedRadioButton();\n    }\n    /**\n     * Whether the radio group is disabled\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._markRadiosForCheck();\n    }\n    /**\n     * Whether the radio group is required\n     * @return {?}\n     */\n    get required() { return this._required; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n        this._markRadiosForCheck();\n    }\n    /**\n     * Initialize properties once content children are available.\n     * This allows us to propagate relevant attributes to associated buttons.\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        // Mark this component as initialized in AfterContentInit because the initial value can\n        // possibly be set by NgModel on MatRadioGroup, and it is possible that the OnInit of the\n        // NgModel occurs *after* the OnInit of the MatRadioGroup.\n        this._isInitialized = true;\n    }\n    /**\n     * Mark this group as being \"touched\" (for ngModel). Meant to be called by the contained\n     * radio buttons upon their blur.\n     * @return {?}\n     */\n    _touch() {\n        if (this.onTouched) {\n            this.onTouched();\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _updateRadioButtonNames() {\n        if (this._radios) {\n            this._radios.forEach((/**\n             * @param {?} radio\n             * @return {?}\n             */\n            radio => {\n                radio.name = this.name;\n                radio._markForCheck();\n            }));\n        }\n    }\n    /**\n     * Updates the `selected` radio button from the internal _value state.\n     * @private\n     * @return {?}\n     */\n    _updateSelectedRadioFromValue() {\n        // If the value already matches the selected radio, do nothing.\n        /** @type {?} */\n        const isAlreadySelected = this._selected !== null && this._selected.value === this._value;\n        if (this._radios && !isAlreadySelected) {\n            this._selected = null;\n            this._radios.forEach((/**\n             * @param {?} radio\n             * @return {?}\n             */\n            radio => {\n                radio.checked = this.value === radio.value;\n                if (radio.checked) {\n                    this._selected = radio;\n                }\n            }));\n        }\n    }\n    /**\n     * Dispatch change event with current selection and group value.\n     * @return {?}\n     */\n    _emitChangeEvent() {\n        if (this._isInitialized) {\n            this.change.emit(new MatRadioChange((/** @type {?} */ (this._selected)), this._value));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _markRadiosForCheck() {\n        if (this._radios) {\n            this._radios.forEach((/**\n             * @param {?} radio\n             * @return {?}\n             */\n            radio => radio._markForCheck()));\n        }\n    }\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        this.value = value;\n        this._changeDetector.markForCheck();\n    }\n    /**\n     * Registers a callback to be triggered when the model value changes.\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn Callback to be registered.\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n    /**\n     * Registers a callback to be triggered when the control is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn Callback to be registered.\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Sets the disabled state of the control. Implemented as a part of ControlValueAccessor.\n     * @param {?} isDisabled Whether the control should be disabled.\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetector.markForCheck();\n    }\n}\nMatRadioGroup.decorators = [\n    { type: Directive, args: [{\n                selector: 'mat-radio-group',\n                exportAs: 'matRadioGroup',\n                providers: [MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR],\n                host: {\n                    'role': 'radiogroup',\n                    'class': 'mat-radio-group',\n                },\n            },] }\n];\n/** @nocollapse */\nMatRadioGroup.ctorParameters = () => [\n    { type: ChangeDetectorRef }\n];\nMatRadioGroup.propDecorators = {\n    change: [{ type: Output }],\n    _radios: [{ type: ContentChildren, args: [forwardRef((/**\n                 * @return {?}\n                 */\n                () => MatRadioButton)), { descendants: true },] }],\n    color: [{ type: Input }],\n    name: [{ type: Input }],\n    labelPosition: [{ type: Input }],\n    value: [{ type: Input }],\n    selected: [{ type: Input }],\n    disabled: [{ type: Input }],\n    required: [{ type: Input }]\n};\nif (false) {\n    /**\n     * Selected value for the radio group.\n     * @type {?}\n     * @private\n     */\n    MatRadioGroup.prototype._value;\n    /**\n     * The HTML name attribute applied to radio buttons in this group.\n     * @type {?}\n     * @private\n     */\n    MatRadioGroup.prototype._name;\n    /**\n     * The currently selected radio button. Should match value.\n     * @type {?}\n     * @private\n     */\n    MatRadioGroup.prototype._selected;\n    /**\n     * Whether the `value` has been set to its initial value.\n     * @type {?}\n     * @private\n     */\n    MatRadioGroup.prototype._isInitialized;\n    /**\n     * Whether the labels should appear after or before the radio-buttons. Defaults to 'after'\n     * @type {?}\n     * @private\n     */\n    MatRadioGroup.prototype._labelPosition;\n    /**\n     * Whether the radio group is disabled.\n     * @type {?}\n     * @private\n     */\n    MatRadioGroup.prototype._disabled;\n    /**\n     * Whether the radio group is required.\n     * @type {?}\n     * @private\n     */\n    MatRadioGroup.prototype._required;\n    /**\n     * The method to be called in order to update ngModel\n     * @type {?}\n     */\n    MatRadioGroup.prototype._controlValueAccessorChangeFn;\n    /**\n     * onTouch function registered via registerOnTouch (ControlValueAccessor).\n     * \\@docs-private\n     * @type {?}\n     */\n    MatRadioGroup.prototype.onTouched;\n    /**\n     * Event emitted when the group value changes.\n     * Change events are only emitted when the value changes due to user interaction with\n     * a radio button (the same behavior as `<input type-\"radio\">`).\n     * @type {?}\n     */\n    MatRadioGroup.prototype.change;\n    /**\n     * Child radio buttons.\n     * @type {?}\n     */\n    MatRadioGroup.prototype._radios;\n    /**\n     * Theme color for all of the radio buttons in the group.\n     * @type {?}\n     */\n    MatRadioGroup.prototype.color;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatRadioGroup.prototype._changeDetector;\n}\n// Boilerplate for applying mixins to MatRadioButton.\n/**\n * \\@docs-private\n */\nclass MatRadioButtonBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatRadioButtonBase.prototype.disabled;\n    /** @type {?} */\n    MatRadioButtonBase.prototype._elementRef;\n}\n// As per Material design specifications the selection control radio should use the accent color\n// palette by default. https://material.io/guidelines/components/selection-controls.html\n/** @type {?} */\nconst _MatRadioButtonMixinBase = mixinDisableRipple(mixinTabIndex(MatRadioButtonBase));\n/**\n * A Material design radio-button. Typically placed inside of `<mat-radio-group>` elements.\n */\nexport class MatRadioButton extends _MatRadioButtonMixinBase {\n    /**\n     * @param {?} radioGroup\n     * @param {?} elementRef\n     * @param {?} _changeDetector\n     * @param {?} _focusMonitor\n     * @param {?} _radioDispatcher\n     * @param {?=} _animationMode\n     * @param {?=} _providerOverride\n     */\n    constructor(radioGroup, elementRef, _changeDetector, _focusMonitor, _radioDispatcher, _animationMode, _providerOverride) {\n        super(elementRef);\n        this._changeDetector = _changeDetector;\n        this._focusMonitor = _focusMonitor;\n        this._radioDispatcher = _radioDispatcher;\n        this._animationMode = _animationMode;\n        this._providerOverride = _providerOverride;\n        this._uniqueId = `mat-radio-${++nextUniqueId}`;\n        /**\n         * The unique ID for the radio button.\n         */\n        this.id = this._uniqueId;\n        /**\n         * Event emitted when the checked state of this radio button changes.\n         * Change events are only emitted when the value changes due to user interaction with\n         * the radio button (the same behavior as `<input type-\"radio\">`).\n         */\n        this.change = new EventEmitter();\n        /**\n         * Whether this radio is checked.\n         */\n        this._checked = false;\n        /**\n         * Value assigned to this radio.\n         */\n        this._value = null;\n        /**\n         * Unregister function for _radioDispatcher\n         */\n        this._removeUniqueSelectionListener = (/**\n         * @return {?}\n         */\n        () => { });\n        // Assertions. Ideally these should be stripped out by the compiler.\n        // TODO(jelbourn): Assert that there's no name binding AND a parent radio group.\n        this.radioGroup = radioGroup;\n        this._removeUniqueSelectionListener =\n            _radioDispatcher.listen((/**\n             * @param {?} id\n             * @param {?} name\n             * @return {?}\n             */\n            (id, name) => {\n                if (id !== this.id && name === this.name) {\n                    this.checked = false;\n                }\n            }));\n    }\n    /**\n     * Whether this radio button is checked.\n     * @return {?}\n     */\n    get checked() { return this._checked; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set checked(value) {\n        /** @type {?} */\n        const newCheckedState = coerceBooleanProperty(value);\n        if (this._checked !== newCheckedState) {\n            this._checked = newCheckedState;\n            if (newCheckedState && this.radioGroup && this.radioGroup.value !== this.value) {\n                this.radioGroup.selected = this;\n            }\n            else if (!newCheckedState && this.radioGroup && this.radioGroup.value === this.value) {\n                // When unchecking the selected radio button, update the selected radio\n                // property on the group.\n                this.radioGroup.selected = null;\n            }\n            if (newCheckedState) {\n                // Notify all radio buttons with the same name to un-check.\n                this._radioDispatcher.notify(this.id, this.name);\n            }\n            this._changeDetector.markForCheck();\n        }\n    }\n    /**\n     * The value of this radio button.\n     * @return {?}\n     */\n    get value() { return this._value; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set value(value) {\n        if (this._value !== value) {\n            this._value = value;\n            if (this.radioGroup !== null) {\n                if (!this.checked) {\n                    // Update checked when the value changed to match the radio group's value\n                    this.checked = this.radioGroup.value === value;\n                }\n                if (this.checked) {\n                    this.radioGroup.selected = this;\n                }\n            }\n        }\n    }\n    /**\n     * Whether the label should appear after or before the radio button. Defaults to 'after'\n     * @return {?}\n     */\n    get labelPosition() {\n        return this._labelPosition || (this.radioGroup && this.radioGroup.labelPosition) || 'after';\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set labelPosition(value) {\n        this._labelPosition = value;\n    }\n    /**\n     * Whether the radio button is disabled.\n     * @return {?}\n     */\n    get disabled() {\n        return this._disabled || (this.radioGroup !== null && this.radioGroup.disabled);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        /** @type {?} */\n        const newDisabledState = coerceBooleanProperty(value);\n        if (this._disabled !== newDisabledState) {\n            this._disabled = newDisabledState;\n            this._changeDetector.markForCheck();\n        }\n    }\n    /**\n     * Whether the radio button is required.\n     * @return {?}\n     */\n    get required() {\n        return this._required || (this.radioGroup && this.radioGroup.required);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n    }\n    /**\n     * Theme color of the radio button.\n     * @return {?}\n     */\n    get color() {\n        return this._color ||\n            (this.radioGroup && this.radioGroup.color) ||\n            this._providerOverride && this._providerOverride.color || 'accent';\n    }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    set color(newValue) { this._color = newValue; }\n    /**\n     * ID of the native input element inside `<mat-radio-button>`\n     * @return {?}\n     */\n    get inputId() { return `${this.id || this._uniqueId}-input`; }\n    /**\n     * Focuses the radio button.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        this._focusMonitor.focusVia(this._inputElement, 'keyboard', options);\n    }\n    /**\n     * Marks the radio button as needing checking for change detection.\n     * This method is exposed because the parent radio group will directly\n     * update bound properties of the radio button.\n     * @return {?}\n     */\n    _markForCheck() {\n        // When group value changes, the button will not be notified. Use `markForCheck` to explicit\n        // update radio button's status\n        this._changeDetector.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this.radioGroup) {\n            // If the radio is inside a radio group, determine if it should be checked\n            this.checked = this.radioGroup.value === this._value;\n            // Copy name from parent radio group\n            this.name = this.radioGroup.name;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        this._focusMonitor\n            .monitor(this._elementRef, true)\n            .subscribe((/**\n         * @param {?} focusOrigin\n         * @return {?}\n         */\n        focusOrigin => {\n            if (!focusOrigin && this.radioGroup) {\n                this.radioGroup._touch();\n            }\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        this._removeUniqueSelectionListener();\n    }\n    /**\n     * Dispatch change event with current value.\n     * @private\n     * @return {?}\n     */\n    _emitChangeEvent() {\n        this.change.emit(new MatRadioChange(this, this._value));\n    }\n    /**\n     * @return {?}\n     */\n    _isRippleDisabled() {\n        return this.disableRipple || this.disabled;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onInputClick(event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `radio-button` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    }\n    /**\n     * Triggered when the radio button received a click or the input recognized any change.\n     * Clicking on a label element, will trigger a change event on the associated input.\n     * @param {?} event\n     * @return {?}\n     */\n    _onInputChange(event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n        /** @type {?} */\n        const groupValueChanged = this.radioGroup && this.value !== this.radioGroup.value;\n        this.checked = true;\n        this._emitChangeEvent();\n        if (this.radioGroup) {\n            this.radioGroup._controlValueAccessorChangeFn(this.value);\n            if (groupValueChanged) {\n                this.radioGroup._emitChangeEvent();\n            }\n        }\n    }\n}\nMatRadioButton.decorators = [\n    { type: Component, args: [{\n                moduleId: module.id,\n                selector: 'mat-radio-button',\n                template: \"<!-- TODO(jelbourn): render the radio on either side of the content -->\\n<!-- TODO(mtlin): Evaluate trade-offs of using native radio vs. cost of additional bindings. -->\\n<label [attr.for]=\\\"inputId\\\" class=\\\"mat-radio-label\\\" #label>\\n  <!-- The actual 'radio' part of the control. -->\\n  <div class=\\\"mat-radio-container\\\">\\n    <div class=\\\"mat-radio-outer-circle\\\"></div>\\n    <div class=\\\"mat-radio-inner-circle\\\"></div>\\n    <div mat-ripple class=\\\"mat-radio-ripple\\\"\\n         [matRippleTrigger]=\\\"label\\\"\\n         [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n         [matRippleCentered]=\\\"true\\\"\\n         [matRippleRadius]=\\\"20\\\"\\n         [matRippleAnimation]=\\\"{enterDuration: 150}\\\">\\n\\n      <div class=\\\"mat-ripple-element mat-radio-persistent-ripple\\\"></div>\\n    </div>\\n\\n    <input #input class=\\\"mat-radio-input cdk-visually-hidden\\\" type=\\\"radio\\\"\\n        [id]=\\\"inputId\\\"\\n        [checked]=\\\"checked\\\"\\n        [disabled]=\\\"disabled\\\"\\n        [tabIndex]=\\\"tabIndex\\\"\\n        [attr.name]=\\\"name\\\"\\n        [attr.value]=\\\"value\\\"\\n        [required]=\\\"required\\\"\\n        [attr.aria-label]=\\\"ariaLabel\\\"\\n        [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n        [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n        (change)=\\\"_onInputChange($event)\\\"\\n        (click)=\\\"_onInputClick($event)\\\">\\n  </div>\\n\\n  <!-- The label content for radio control. -->\\n  <div class=\\\"mat-radio-label-content\\\" [class.mat-radio-label-before]=\\\"labelPosition == 'before'\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </div>\\n</label>\\n\",\n                inputs: ['disableRipple', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matRadioButton',\n                host: {\n                    'class': 'mat-radio-button',\n                    '[class.mat-radio-checked]': 'checked',\n                    '[class.mat-radio-disabled]': 'disabled',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    '[class.mat-primary]': 'color === \"primary\"',\n                    '[class.mat-accent]': 'color === \"accent\"',\n                    '[class.mat-warn]': 'color === \"warn\"',\n                    // Needs to be -1 so the `focus` event still fires.\n                    '[attr.tabindex]': '-1',\n                    '[attr.id]': 'id',\n                    '[attr.aria-label]': 'null',\n                    '[attr.aria-labelledby]': 'null',\n                    '[attr.aria-describedby]': 'null',\n                    // Note: under normal conditions focus shouldn't land on this element, however it may be\n                    // programmatically set, for example inside of a focus trap, in this case we want to forward\n                    // the focus to the native element.\n                    '(focus)': '_inputElement.nativeElement.focus()',\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-radio-button{display:inline-block;-webkit-tap-highlight-color:transparent;outline:0}.mat-radio-label{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;display:inline-flex;align-items:center;white-space:nowrap;vertical-align:middle;width:100%}.mat-radio-container{box-sizing:border-box;display:inline-block;position:relative;width:20px;height:20px;flex-shrink:0}.mat-radio-outer-circle{box-sizing:border-box;height:20px;left:0;position:absolute;top:0;transition:border-color ease 280ms;width:20px;border-width:2px;border-style:solid;border-radius:50%}._mat-animation-noopable .mat-radio-outer-circle{transition:none}.mat-radio-inner-circle{border-radius:50%;box-sizing:border-box;height:20px;left:0;position:absolute;top:0;transition:transform ease 280ms,background-color ease 280ms;width:20px;transform:scale(0.001)}._mat-animation-noopable .mat-radio-inner-circle{transition:none}.mat-radio-checked .mat-radio-inner-circle{transform:scale(0.5)}@media(-ms-high-contrast: active){.mat-radio-checked .mat-radio-inner-circle{border:solid 10px}}.mat-radio-label-content{-webkit-user-select:auto;-moz-user-select:auto;-ms-user-select:auto;user-select:auto;display:inline-block;order:0;line-height:inherit;padding-left:8px;padding-right:0}[dir=rtl] .mat-radio-label-content{padding-right:8px;padding-left:0}.mat-radio-label-content.mat-radio-label-before{order:-1;padding-left:0;padding-right:8px}[dir=rtl] .mat-radio-label-content.mat-radio-label-before{padding-right:0;padding-left:8px}.mat-radio-disabled,.mat-radio-disabled .mat-radio-label{cursor:default}.mat-radio-button .mat-radio-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-radio-button .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple){opacity:.16}.mat-radio-persistent-ripple{width:100%;height:100%;transform:none}.mat-radio-container:hover .mat-radio-persistent-ripple{opacity:.04}.mat-radio-button:not(.mat-radio-disabled).cdk-keyboard-focused .mat-radio-persistent-ripple,.mat-radio-button:not(.mat-radio-disabled).cdk-program-focused .mat-radio-persistent-ripple{opacity:.12}.mat-radio-persistent-ripple,.mat-radio-disabled .mat-radio-container:hover .mat-radio-persistent-ripple{opacity:0}@media(hover: none){.mat-radio-container:hover .mat-radio-persistent-ripple{display:none}}.mat-radio-input{bottom:0;left:50%}@media(-ms-high-contrast: active){.mat-radio-disabled{opacity:.5}}/*# sourceMappingURL=radio.css.map */\\n\"]\n            }] }\n];\n/** @nocollapse */\nMatRadioButton.ctorParameters = () => [\n    { type: MatRadioGroup, decorators: [{ type: Optional }] },\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: FocusMonitor },\n    { type: UniqueSelectionDispatcher },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RADIO_DEFAULT_OPTIONS,] }] }\n];\nMatRadioButton.propDecorators = {\n    id: [{ type: Input }],\n    name: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    ariaDescribedby: [{ type: Input, args: ['aria-describedby',] }],\n    checked: [{ type: Input }],\n    value: [{ type: Input }],\n    labelPosition: [{ type: Input }],\n    disabled: [{ type: Input }],\n    required: [{ type: Input }],\n    color: [{ type: Input }],\n    change: [{ type: Output }],\n    _inputElement: [{ type: ViewChild, args: ['input', { static: false },] }]\n};\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatRadioButton.prototype._uniqueId;\n    /**\n     * The unique ID for the radio button.\n     * @type {?}\n     */\n    MatRadioButton.prototype.id;\n    /**\n     * Analog to HTML 'name' attribute used to group radios for unique selection.\n     * @type {?}\n     */\n    MatRadioButton.prototype.name;\n    /**\n     * Used to set the 'aria-label' attribute on the underlying input element.\n     * @type {?}\n     */\n    MatRadioButton.prototype.ariaLabel;\n    /**\n     * The 'aria-labelledby' attribute takes precedence as the element's text alternative.\n     * @type {?}\n     */\n    MatRadioButton.prototype.ariaLabelledby;\n    /**\n     * The 'aria-describedby' attribute is read after the element's label and field type.\n     * @type {?}\n     */\n    MatRadioButton.prototype.ariaDescribedby;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatRadioButton.prototype._labelPosition;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatRadioButton.prototype._color;\n    /**\n     * Event emitted when the checked state of this radio button changes.\n     * Change events are only emitted when the value changes due to user interaction with\n     * the radio button (the same behavior as `<input type-\"radio\">`).\n     * @type {?}\n     */\n    MatRadioButton.prototype.change;\n    /**\n     * The parent radio group. May or may not be present.\n     * @type {?}\n     */\n    MatRadioButton.prototype.radioGroup;\n    /**\n     * Whether this radio is checked.\n     * @type {?}\n     * @private\n     */\n    MatRadioButton.prototype._checked;\n    /**\n     * Whether this radio is disabled.\n     * @type {?}\n     * @private\n     */\n    MatRadioButton.prototype._disabled;\n    /**\n     * Whether this radio is required.\n     * @type {?}\n     * @private\n     */\n    MatRadioButton.prototype._required;\n    /**\n     * Value assigned to this radio.\n     * @type {?}\n     * @private\n     */\n    MatRadioButton.prototype._value;\n    /**\n     * Unregister function for _radioDispatcher\n     * @type {?}\n     * @private\n     */\n    MatRadioButton.prototype._removeUniqueSelectionListener;\n    /**\n     * The native `<input type=radio>` element\n     * @type {?}\n     */\n    MatRadioButton.prototype._inputElement;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatRadioButton.prototype._changeDetector;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatRadioButton.prototype._focusMonitor;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatRadioButton.prototype._radioDispatcher;\n    /** @type {?} */\n    MatRadioButton.prototype._animationMode;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatRadioButton.prototype._providerOverride;\n}\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatCommonModule, MatRippleModule} from '@angular/material/core';\nimport {MatRadioButton, MatRadioGroup} from './radio';\n\n\n@NgModule({\n  imports: [CommonModule, MatRippleModule, MatCommonModule],\n  exports: [MatRadioGroup, MatRadioButton, MatCommonModule],\n  declarations: [MatRadioGroup, MatRadioButton],\n})\nexport class MatRadioModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}