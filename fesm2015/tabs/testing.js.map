{"version":3,"file":"tabs__testing.js","sources":["../../../../../../src/material/tabs/testing/tab-harness.ts","../../../../../../src/material/tabs/testing/tab-group-harness.ts","../../../../../../src/material/tabs/testing/public-api.ts","../../../../../../src/material/tabs/testing/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ComponentHarness, HarnessLoader, HarnessPredicate} from '@angular/cdk/testing';\nimport {TabHarnessFilters} from './tab-harness-filters';\n\n/**\n * Harness for interacting with a standard Angular Material tab-label in tests.\n * @dynamic\n */\nexport class MatTabHarness extends ComponentHarness {\n  static hostSelector = '.mat-tab-label';\n\n  /**\n   * Gets a `HarnessPredicate` that can be used to search for a tab with specific attributes.\n   */\n  static with(options: TabHarnessFilters = {}): HarnessPredicate<MatTabHarness> {\n    return new HarnessPredicate(MatTabHarness, options)\n        .addOption('label', options.label,\n            (harness, label) => HarnessPredicate.stringMatches(harness.getLabel(), label));\n  }\n\n  /** Gets the label of the tab. */\n  async getLabel(): Promise<string> {\n    return (await this.host()).text();\n  }\n\n  /** Gets the aria label of the tab. */\n  async getAriaLabel(): Promise<string|null> {\n    return (await this.host()).getAttribute('aria-label');\n  }\n\n  /** Gets the value of the \"aria-labelledby\" attribute. */\n  async getAriaLabelledby(): Promise<string|null> {\n    return (await this.host()).getAttribute('aria-labelledby');\n  }\n\n  /** Whether the tab is selected. */\n  async isSelected(): Promise<boolean> {\n    const hostEl = await this.host();\n    return (await hostEl.getAttribute('aria-selected')) === 'true';\n  }\n\n  /** Whether the tab is disabled. */\n  async isDisabled(): Promise<boolean> {\n    const hostEl = await this.host();\n    return (await hostEl.getAttribute('aria-disabled')) === 'true';\n  }\n\n  /**\n   * Selects the given tab by clicking on the label. Tab cannot be\n   * selected if disabled.\n   */\n  async select(): Promise<void> {\n    await (await this.host()).click();\n  }\n\n  /** Gets the text content of the tab. */\n  async getTextContent(): Promise<string> {\n    const contentId = await this._getContentId();\n    const contentEl = await this.documentRootLocatorFactory().locatorFor(`#${contentId}`)();\n    return contentEl.text();\n  }\n\n  /**\n   * Gets a `HarnessLoader` that can be used to load harnesses for components within the tab's\n   * content area.\n   */\n  async getHarnessLoaderForContent(): Promise<HarnessLoader> {\n    const contentId = await this._getContentId();\n    return this.documentRootLocatorFactory().harnessLoaderFor(`#${contentId}`);\n  }\n\n  /** Gets the element id for the content of the current tab. */\n  private async _getContentId(): Promise<string> {\n    const hostEl = await this.host();\n    // Tabs never have an empty \"aria-controls\" attribute.\n    return (await hostEl.getAttribute('aria-controls'))!;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ComponentHarness, HarnessPredicate} from '@angular/cdk/testing';\nimport {TabGroupHarnessFilters, TabHarnessFilters} from './tab-harness-filters';\nimport {MatTabHarness} from './tab-harness';\n\n/**\n * Harness for interacting with a standard mat-tab-group in tests.\n * @dynamic\n */\nexport class MatTabGroupHarness extends ComponentHarness {\n  static hostSelector = '.mat-tab-group';\n\n  /**\n   * Gets a `HarnessPredicate` that can be used to search for a radio-button with\n   * specific attributes.\n   * @param options Options for narrowing the search\n   *   - `selector` finds a tab-group whose host element matches the given selector.\n   *   - `selectedTabLabel` finds a tab-group with a selected tab that matches the\n   *      specified tab label.\n   * @return a `HarnessPredicate` configured with the given options.\n   */\n  static with(options: TabGroupHarnessFilters = {}): HarnessPredicate<MatTabGroupHarness> {\n    return new HarnessPredicate(MatTabGroupHarness, options)\n        .addOption('selectedTabLabel', options.selectedTabLabel, async (harness, label) => {\n          const selectedTab = await harness.getSelectedTab();\n          return HarnessPredicate.stringMatches(await selectedTab.getLabel(), label);\n        });\n  }\n\n  /** Gets all tabs of the tab group. */\n  async getTabs(filter: TabHarnessFilters = {}): Promise<MatTabHarness[]> {\n    return this.locatorForAll(MatTabHarness.with(filter))();\n  }\n\n  /** Gets the selected tab of the tab group. */\n  async getSelectedTab(): Promise<MatTabHarness> {\n    const tabs = await this.getTabs();\n    const isSelected = await Promise.all(tabs.map(t => t.isSelected()));\n    for (let i = 0; i < tabs.length; i++) {\n      if (isSelected[i]) {\n        return tabs[i];\n      }\n    }\n    throw new Error('No selected tab could be found.');\n  }\n\n  /** Selects a tab in this tab group. */\n  async selectTab(filter: TabHarnessFilters = {}): Promise<void> {\n    const tabs = await this.getTabs(filter);\n    if (!tabs.length) {\n      throw Error(`Cannot find mat-tab matching filter ${JSON.stringify(filter)}`);\n    }\n    await tabs[0].select();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './tab-group-harness';\nexport * from './tab-harness';\nexport * from './tab-harness-filters';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}